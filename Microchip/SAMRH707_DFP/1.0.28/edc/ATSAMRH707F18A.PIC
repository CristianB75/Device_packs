<?xml version="1.0" encoding="UTF-8" standalone="no"?><edc:PIC xmlns:edc="http://crownking/edc" xmlns:atdf="http://crownking/atdf" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" atdf:architecture="CORTEX-M7" atdf:family="SAMRH" edc:arch="arm32bit" edc:atsamname="ATSAMRH707F18A" edc:hasFreeze="false" edc:name="ATSAMRH707F18A" edc:procid="0x0000" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:maxvoltage="3.6" edc:minvoltage="1.62" edc:nominalvoltage="3.300"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true"/>
  <edc:ArchDef edc:desc="arm32bit" edc:name="arm32bit">
    <edc:MemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFFFFFFFF" edc:wordinit="0xFFFFFFFF" edc:wordsafe="0xFFFFFFFF" edc:wordsize="0x4"/>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="armv7m"/>
  <edc:InterruptList>
    <edc:Interrupt edc:cname="Reset" edc:desc="Reset Vector, invoked on Power up and warm reset" edc:irq="-15"/>
    <edc:Interrupt edc:cname="NonMaskableInt" edc:desc="Non maskable Interrupt, cannot be stopped or preempted" edc:irq="-14"/>
    <edc:Interrupt edc:cname="HardFault" edc:desc="Hard Fault, all classes of Fault" edc:irq="-13"/>
    <edc:Interrupt edc:cname="MemoryManagement" edc:desc="Memory Management, MPU mismatch, including Access Violation and No Match" edc:irq="-12"/>
    <edc:Interrupt edc:cname="BusFault" edc:desc="Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault" edc:irq="-11"/>
    <edc:Interrupt edc:cname="UsageFault" edc:desc="Usage Fault, i.e. Undef Instruction, Illegal State Transition" edc:irq="-10"/>
    <edc:Interrupt edc:cname="SVCall" edc:desc="System Service Call via SVC instruction" edc:irq="-5"/>
    <edc:Interrupt edc:cname="DebugMonitor" edc:desc="Debug Monitor" edc:irq="-4"/>
    <edc:Interrupt edc:cname="PendSV" edc:desc="Pendable request for system service" edc:irq="-2"/>
    <edc:Interrupt edc:cname="SysTick" edc:desc="System Tick Timer" edc:irq="-1"/>
    <edc:Interrupt edc:cname="SUPC" edc:desc="Supply Controller" edc:irq="0" ltx:memberofperipheral="SUPC"/>
    <edc:Interrupt edc:cname="RSTC" edc:desc="Reset Controller" edc:irq="1" ltx:memberofperipheral="RSTC"/>
    <edc:Interrupt edc:cname="RTC" edc:desc="Real Time Clock" edc:irq="2" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:cname="RTT" edc:desc="Real Time Timer" edc:irq="3" ltx:memberofperipheral="RTT"/>
    <edc:Interrupt edc:cname="WDT" edc:desc="Watchdog Timer 0" edc:irq="4" ltx:memberofperipheral="WDT"/>
    <edc:Interrupt edc:cname="PMC" edc:desc="Power Management Controller" edc:irq="5" ltx:memberofperipheral="PMC"/>
    <edc:Interrupt edc:cname="MATRIX0" edc:desc="Matrix 0" edc:irq="6" ltx:memberofperipheral="MATRIX0"/>
    <edc:Interrupt edc:cname="FLEXCOM0" edc:desc="FLEXCOM 0" edc:irq="7" ltx:memberofperipheral="FLEXCOM0"/>
    <edc:Interrupt edc:cname="FLEXCOM1" edc:desc="FLEXCOM 1" edc:irq="8" ltx:memberofperipheral="FLEXCOM1"/>
    <edc:Interrupt edc:cname="NMIC" edc:desc="NMI Controller" edc:irq="9" ltx:memberofperipheral="NMIC"/>
    <edc:Interrupt edc:cname="PIOA" edc:desc="Parallel I/O Controller A" edc:irq="10" ltx:memberofperipheral="PIOA"/>
    <edc:Interrupt edc:cname="PIOB" edc:desc="Parallel I/O Controller B" edc:irq="11" ltx:memberofperipheral="PIOB"/>
    <edc:Interrupt edc:cname="PIOC" edc:desc="Parallel I/O Controller C" edc:irq="12" ltx:memberofperipheral="PIOC"/>
    <edc:Interrupt edc:cname="FLEXCOM2" edc:desc="FLEXCOM 2" edc:irq="13" ltx:memberofperipheral="FLEXCOM2"/>
    <edc:Interrupt edc:cname="FLEXCOM3" edc:desc="FLEXCOM 3" edc:irq="14" ltx:memberofperipheral="FLEXCOM3"/>
    <edc:Interrupt edc:cname="PIOD" edc:desc="Parallel I/O Controller D" edc:irq="16" ltx:memberofperipheral="PIOD"/>
    <edc:Interrupt edc:cname="CCW" edc:desc="Cache ECC Warning" edc:irq="18" ltx:memberofperipheral="SCB"/>
    <edc:Interrupt edc:cname="CCF" edc:desc="Cache ECC Fault" edc:irq="19" ltx:memberofperipheral="SCB"/>
    <edc:Interrupt edc:cname="FPU" edc:desc="Floating Point Unit" edc:irq="20" ltx:memberofperipheral="FPU"/>
    <edc:Interrupt edc:cname="IXC" edc:desc="Floating Point Unit IXC" edc:irq="21" ltx:memberofperipheral="FPU"/>
    <edc:Interrupt edc:cname="CRCCU" edc:desc="CRCCU_HCBDMA" edc:irq="22" ltx:memberofperipheral="CRCCU"/>
    <edc:Interrupt edc:cname="ADC" edc:desc="ADC controller" edc:irq="23" ltx:memberofperipheral="ADC"/>
    <edc:Interrupt edc:cname="DACC" edc:desc="DAC Controller" edc:irq="24" ltx:memberofperipheral="DACC"/>
    <edc:Interrupt edc:cname="TC0" edc:desc="Timer/Counter 0" edc:irq="25" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:cname="TC1" edc:desc="Timer/Counter 1" edc:irq="26" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:cname="TC2" edc:desc="Timer/Counter 2" edc:irq="27" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:cname="TC3" edc:desc="Timer/Counter 3" edc:irq="28" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:cname="TC4" edc:desc="Timer/Counter 4" edc:irq="29" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:cname="TC5" edc:desc="Timer/Counter 5" edc:irq="30" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:cname="PWM0" edc:desc="Pulse Width Modulation 0" edc:irq="31" ltx:memberofperipheral="PWM0"/>
    <edc:Interrupt edc:cname="PWM1" edc:desc="Pulse Width Modulation 1" edc:irq="32" ltx:memberofperipheral="PWM1"/>
    <edc:Interrupt edc:cname="ICM" edc:desc="Integrity Check Monitor" edc:irq="33" ltx:memberofperipheral="ICM"/>
    <edc:Interrupt edc:cname="MCAN0_INT0" edc:desc="MCAN Controller 0 Interrupt 0" edc:irq="36" ltx:memberofperipheral="MCAN0"/>
    <edc:Interrupt edc:cname="MCAN0_INT1" edc:desc="MCAN Controller 0 Interrupt 1" edc:irq="37" ltx:memberofperipheral="MCAN0"/>
    <edc:Interrupt edc:cname="MCAN1_INT0" edc:desc="MCAN Controller 1 Interrupt 0" edc:irq="38" ltx:memberofperipheral="MCAN1"/>
    <edc:Interrupt edc:cname="MCAN1_INT1" edc:desc="MCAN Controller 1 Interrupt 1" edc:irq="39" ltx:memberofperipheral="MCAN1"/>
    <edc:Interrupt edc:cname="TCMECC_INTFIX" edc:desc="TCM ECC Fixable error detected" edc:irq="40" ltx:memberofperipheral="TCMECC"/>
    <edc:Interrupt edc:cname="TCMECC_INTNOFIX" edc:desc="TCM ECC Un-Fixable error detected" edc:irq="41" ltx:memberofperipheral="TCMECC"/>
    <edc:Interrupt edc:cname="FLEXRAMECC_INTFIX" edc:desc="FlexRAM ECC Fixable error detected" edc:irq="42" ltx:memberofperipheral="FLEXRAMECC"/>
    <edc:Interrupt edc:cname="FLEXRAMECC_INTNOFIX" edc:desc="FlexRAM ECC Un-Fixable error detected" edc:irq="43" ltx:memberofperipheral="FLEXRAMECC"/>
    <edc:Interrupt edc:cname="SHA" edc:desc="Secure Hash Algorithm" edc:irq="44" ltx:memberofperipheral="SHA"/>
    <edc:Interrupt edc:cname="PCC" edc:desc="PCC controller" edc:irq="45" ltx:memberofperipheral="PCC"/>
    <edc:Interrupt edc:cname="RSWDT" edc:desc="Reinforced Secure Watchdog Timer" edc:irq="47" ltx:memberofperipheral="RSWDT"/>
    <edc:Interrupt edc:cname="HEFC_INT0" edc:desc="HEFC Flash Interrupts" edc:irq="50" ltx:memberofperipheral="HEFC"/>
    <edc:Interrupt edc:cname="HEFC_INTFIX" edc:desc="HEFC ECC Fixable error detected" edc:irq="51" ltx:memberofperipheral="HEFC"/>
    <edc:Interrupt edc:cname="HEFC_INTNOFIX" edc:desc="HEFC ECC Un-Fixable error detected" edc:irq="52" ltx:memberofperipheral="HEFC"/>
    <edc:Interrupt edc:cname="TC6" edc:desc="Timer/Counter 6" edc:irq="53" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:cname="TC7" edc:desc="Timer/Counter 7" edc:irq="54" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:cname="TC8" edc:desc="Timer/Counter 8" edc:irq="55" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:cname="HEMC_INTSDRAMC" edc:desc="HEMC SDRAM Controller" edc:irq="59" ltx:memberofperipheral="HEMC"/>
    <edc:Interrupt edc:cname="HEMC_INTFIX" edc:desc="HEMC ECC Fixable error detected" edc:irq="60" ltx:memberofperipheral="HEMC"/>
    <edc:Interrupt edc:cname="HEMC_INTNOFIX" edc:desc="HEMC ECC Un-Fixable error detected" edc:irq="61" ltx:memberofperipheral="HEMC"/>
    <edc:Interrupt edc:cname="SFR" edc:desc="Special Function Register" edc:irq="62" ltx:memberofperipheral="SFR"/>
    <edc:Interrupt edc:cname="TRNG" edc:desc="True Random Generator" edc:irq="63" ltx:memberofperipheral="TRNG"/>
    <edc:Interrupt edc:cname="XDMAC" edc:desc="eXtended DMA Controller" edc:irq="64" ltx:memberofperipheral="XDMAC"/>
    <edc:Interrupt edc:cname="SPW" edc:desc="SpaceWire" edc:irq="65" ltx:memberofperipheral="SPW"/>
    <edc:Interrupt edc:cname="IP1553" edc:desc="MIL 1553" edc:irq="68" ltx:memberofperipheral="IP1553"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="ADC" edc:desc=""/>
    <edc:Peripheral edc:cname="CHIPID" edc:desc=""/>
    <edc:Peripheral edc:cname="CRCCU" edc:desc=""/>
    <edc:Peripheral edc:cname="DACC" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM0" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM1" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM2" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXCOM3" edc:desc=""/>
    <edc:Peripheral edc:cname="FLEXRAMECC" edc:desc=""/>
    <edc:Peripheral edc:cname="HEFC" edc:desc=""/>
    <edc:Peripheral edc:cname="HEMC" edc:desc=""/>
    <edc:Peripheral edc:cname="HSMC" edc:desc=""/>
    <edc:Peripheral edc:cname="ICM" edc:desc=""/>
    <edc:Peripheral edc:cname="IP1553" edc:desc=""/>
    <edc:Peripheral edc:cname="MATRIX0" edc:desc=""/>
    <edc:Peripheral edc:cname="MCAN0" edc:desc=""/>
    <edc:Peripheral edc:cname="MCAN1" edc:desc=""/>
    <edc:Peripheral edc:cname="NMIC" edc:desc=""/>
    <edc:Peripheral edc:cname="PCC" edc:desc=""/>
    <edc:Peripheral edc:cname="PIO" edc:desc=""/>
    <edc:Peripheral edc:cname="PIOA" edc:desc=""/>
    <edc:Peripheral edc:cname="PIOB" edc:desc=""/>
    <edc:Peripheral edc:cname="PIOC" edc:desc=""/>
    <edc:Peripheral edc:cname="PIOD" edc:desc=""/>
    <edc:Peripheral edc:cname="PMC" edc:desc=""/>
    <edc:Peripheral edc:cname="PWM0" edc:desc=""/>
    <edc:Peripheral edc:cname="PWM1" edc:desc=""/>
    <edc:Peripheral edc:cname="RSTC" edc:desc=""/>
    <edc:Peripheral edc:cname="RSWDT" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="RTT" edc:desc=""/>
    <edc:Peripheral edc:cname="SFR" edc:desc=""/>
    <edc:Peripheral edc:cname="SHA" edc:desc=""/>
    <edc:Peripheral edc:cname="SPW" edc:desc=""/>
    <edc:Peripheral edc:cname="SUPC" edc:desc=""/>
    <edc:Peripheral edc:cname="TC0" edc:desc=""/>
    <edc:Peripheral edc:cname="TC1" edc:desc=""/>
    <edc:Peripheral edc:cname="TC2" edc:desc=""/>
    <edc:Peripheral edc:cname="TCMECC" edc:desc=""/>
    <edc:Peripheral edc:cname="TRNG" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
    <edc:Peripheral edc:cname="XDMAC" edc:desc=""/>
    <edc:Peripheral edc:cname="FUSES" edc:desc=""/>
    <edc:Peripheral edc:cname="LOCKBIT" edc:desc=""/>
    <edc:Peripheral edc:cname="SCnSCB" edc:desc=""/>
    <edc:Peripheral edc:cname="SCB" edc:desc=""/>
    <edc:Peripheral edc:cname="SysTick" edc:desc=""/>
    <edc:Peripheral edc:cname="NVIC" edc:desc=""/>
    <edc:Peripheral edc:cname="MPU" edc:desc=""/>
    <edc:Peripheral edc:cname="FPU" edc:desc=""/>
  </edc:PeripheralList>
  <edc:PhysicalSpace>
    <edc:NMMRPlace edc:regionid="corenmmrs">
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R0" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="0" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R1" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="4" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R2" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="8" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R3" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="12" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R4" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="16" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R5" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="20" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R6" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="24" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R7" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="28" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R8" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="32" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R9" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="36" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R10" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="40" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R11" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="44" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="R12" edc:desc="General-Purpose Register" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="48" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SP" edc:desc="Stack Pointer" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="52" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MSP" edc:desc="Main Stack Pointer" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="64" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PSP" edc:desc="Process Stack Pointer" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="68" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="LR" edc:desc="Link Register" edc:impl="0xFFFFFFFF" edc:mclr="11111111111111111111111111111111" edc:nmmrid="56" edc:nzwidth="0x20" edc:por="11111111111111111111111111111111"/>
      <edc:SFRDef edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PC" edc:desc="Program Counter" edc:impl="0xFFFFFFFF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nmmrid="60" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnnnnn--------nnnnnn-nnnnnnnnn" edc:cname="PSR" edc:desc="Program Status Register" edc:impl="0xFF00FDFF" edc:mclr="00000001000000000000000000000000" edc:nmmrid="72" edc:nzwidth="0x20" edc:por="00000001000000000000000000000000"/>
      <edc:SFRDef edc:access="nnnnn-------nnnn----------------" edc:cname="APSR" edc:desc="Application Program Status Register" edc:impl="0xF80F0000" edc:mclr="00000000000000000000000000000000" edc:nmmrid="76" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="-----------------------rrrrrrrrr" edc:cname="IPSR" edc:desc="Interrupt Program Status Register" edc:impl="0x1FF" edc:mclr="00000000000000000000000000000000" edc:nmmrid="80" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="-----rrr--------rrrrrr----------" edc:cname="EPSR" edc:desc="Execution Program Status Register" edc:impl="0x700FC00" edc:mclr="00000001000000000000000000000000" edc:nmmrid="84" edc:nzwidth="0x20" edc:por="00000001000000000000000000000000"/>
      <edc:SFRDef edc:access="-------------------------------n" edc:cname="PRIMASK" edc:desc="Priority Mask Register" edc:impl="0x1" edc:mclr="00000000000000000000000000000000" edc:nmmrid="88" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="-------------------------------n" edc:cname="FAULTMASK" edc:desc="Fault Mask Register" edc:impl="0x1" edc:mclr="00000000000000000000000000000000" edc:nmmrid="92" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="------------------------nnnnnnnn" edc:cname="BASEPRI" edc:desc="Base Priority Mask Register" edc:impl="0xFF" edc:mclr="00000000000000000000000000000000" edc:nmmrid="96" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
      <edc:SFRDef edc:access="-----------------------------nnn" edc:cname="CONTROL" edc:desc="Control Register" edc:impl="0x7" edc:mclr="00000000000000000000000000000000" edc:nmmrid="100" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000"/>
    </edc:NMMRPlace>
    <edc:SFRDataSector edc:beginaddr="0x40000000" edc:endaddr="0x402000EC" edc:regionid="PERIPHERALS" edc:rw="rw">
      <edc:SFRDef edc:_addr="0x40000000" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG0" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000004" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG1" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000008" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG2" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000000C" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG3" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000010" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG4" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000014" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG5" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000018" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG6" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000001C" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG7" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000020" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG8" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000024" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG9" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000028" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG10" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000002C" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG11" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000030" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG12" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000034" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG13" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000038" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG14" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000003C" edc:access="-----------------------------nnn" edc:cname="MATRIX0_MCFG15" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ULBT" edc:desc="Undefined Length Burst Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNLIMITED" edc:desc="Unlimited Length Burst-No predicted end of burst is generated, therefore INCR bursts coming from this master can only be broken if the Slave Slot Cycle Limit is reached. If the Slot Cycle Limit is not reached, the burst is normally completed by the master, at the latest, on the next AHB 1 Kbyte address boundary, allowing up to 256-beat word bursts or 128-beat double-word bursts. This value should not be used in the very particular case of a master capable of performing back-to-back undefined length bursts on a single slave, since this could indefinitely freeze the slave arbitration and thus prevent another master from accessing this slave." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access-The undefined length burst is treated as a succession of single accesses, allowing re-arbitration at each beat of the INCR burst or bursts sequence." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_BEAT" edc:desc="4-beat Burst-The undefined length burst or bursts sequence is split into 4-beat bursts or less, allowing re-arbitration every 4 beats." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_8_BEAT" edc:desc="8-beat Burst-The undefined length burst or bursts sequence is split into 8-beat bursts or less, allowing re-arbitration every 8 beats." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_16_BEAT" edc:desc="16-beat Burst-The undefined length burst or bursts sequence is split into 16-beat bursts or less, allowing re-arbitration every 16 beats." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BEAT" edc:desc="32-beat Burst-The undefined length burst or bursts sequence is split into 32-beat bursts or less, allowing re-arbitration every 32 beats." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_64_BEAT" edc:desc="64-beat Burst-The undefined length burst or bursts sequence is split into 64-beat bursts or less, allowing re-arbitration every 64 beats." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_128_BEAT" edc:desc="128-beat Burst-The undefined length burst or bursts sequence is split into 128-beat bursts or less, allowing re-arbitration every 128 beats. Unless duly needed, the ULBT should be left at its default 0 value for power saving." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000040" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG0" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000044" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG1" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000048" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG2" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000004C" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG3" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000050" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG4" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000054" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG5" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000058" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG6" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000005C" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG7" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000060" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG8" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000064" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG9" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000068" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG10" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000006C" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG11" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000070" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG12" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000074" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG13" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000078" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG14" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000007C" edc:access="----------nnnnnn-------nnnnnnnnn" edc:cname="MATRIX0_SCFG15" edc:impl="0x3F01FF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:desc="Maximum Bus Grant Duration for Masters" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:desc="Default Master Type" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Default Master-At the end of the current slave access, if no other master request is pending, the slave is disconnected from all masters. This results in a one clock cycle latency for the first access of a burst transfer or for a single access." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LAST" edc:desc="Last Default Master-At the end of the current slave access, if no other master request is pending, the slave stays connected to the last master having accessed it. This results in not having one clock cycle latency when the last master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED" edc:desc="Fixed Default Master-At the end of the current slave access, if no other master request is pending, the slave connects to the fixed master the number that has been written in the FIXED_DEFMSTR field. This results in not having one clock cycle latency when the fixed master tries to access the slave again." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:desc="Fixed Default Master" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000080" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR0MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000084" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR0MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000088" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR1MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000008C" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR1MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000090" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR2MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000094" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR2MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000098" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR3MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000009C" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR3MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000A0" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR4MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000A4" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR4MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000A8" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR5MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000AC" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR5MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000B0" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR6MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000B4" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR6MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000B8" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR7MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000BC" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR7MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000C0" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR8MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000C4" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR8MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000C8" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR9MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000CC" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR9MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000D0" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR10MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000D4" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR10MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000D8" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR11MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000DC" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR11MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000E0" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR12MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000E4" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR12MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000E8" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR13MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000EC" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR13MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000F0" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR14MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000F4" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR14MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000F8" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR15MATRIX0_PRAS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M0PR" edc:desc="Master 0 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN0" edc:desc="Latency Quality of Service Enable for Master 0" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:desc="Master 1 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN1" edc:desc="Latency Quality of Service Enable for Master 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:desc="Master 2 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN2" edc:desc="Latency Quality of Service Enable for Master 2" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:desc="Master 3 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN3" edc:desc="Latency Quality of Service Enable for Master 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:desc="Master 4 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN4" edc:desc="Latency Quality of Service Enable for Master 4" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:desc="Master 5 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN5" edc:desc="Latency Quality of Service Enable for Master 5" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:desc="Master 6 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN6" edc:desc="Latency Quality of Service Enable for Master 6" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:desc="Master 7 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN7" edc:desc="Latency Quality of Service Enable for Master 7" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400000FC" edc:access="-nnn-nnn-nnn-nnn-nnn-nnn-nnn-nnn" edc:cname="MATRIX_PR15MATRIX0_PRBS" edc:impl="0x77777777" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="M8PR" edc:desc="Master 8 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN8" edc:desc="Latency Quality of Service Enable for Master 8" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:desc="Master 9 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN9" edc:desc="Latency Quality of Service Enable for Master 9" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:desc="Master 10 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN10" edc:desc="Latency Quality of Service Enable for Master 10" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:desc="Master 11 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN11" edc:desc="Latency Quality of Service Enable for Master 11" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:desc="Master 12 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN12" edc:desc="Latency Quality of Service Enable for Master 12" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:desc="Master 13 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN13" edc:desc="Latency Quality of Service Enable for Master 13" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:desc="Master 14 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN14" edc:desc="Latency Quality of Service Enable for Master 14" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:desc="Master 15 Priority" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="LQOSEN15" edc:desc="Latency Quality of Service Enable for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000100" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="MATRIX0_MRCR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="RCB0" edc:desc="Remap Command Bit for Master 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB1" edc:desc="Remap Command Bit for Master 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB2" edc:desc="Remap Command Bit for Master 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB3" edc:desc="Remap Command Bit for Master 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB4" edc:desc="Remap Command Bit for Master 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB5" edc:desc="Remap Command Bit for Master 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB6" edc:desc="Remap Command Bit for Master 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB7" edc:desc="Remap Command Bit for Master 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB8" edc:desc="Remap Command Bit for Master 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB9" edc:desc="Remap Command Bit for Master 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB10" edc:desc="Remap Command Bit for Master 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB11" edc:desc="Remap Command Bit for Master 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB12" edc:desc="Remap Command Bit for Master 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB13" edc:desc="Remap Command Bit for Master 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB14" edc:desc="Remap Command Bit for Master 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RCB15" edc:desc="Remap Command Bit for Master 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40000104" edc:offset="0x4C"/>
      <edc:SFRDef edc:_addr="0x40000150" edc:access="----------------wwwwwwwwwwwwwwww" edc:cname="MATRIX0_MEIER" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="MERR0" edc:desc="Master 0 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:desc="Master 1 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:desc="Master 2 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:desc="Master 3 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:desc="Master 4 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:desc="Master 5 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:desc="Master 6 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:desc="Master 7 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:desc="Master 8 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:desc="Master 9 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:desc="Master 10 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:desc="Master 11 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:desc="Master 12 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:desc="Master 13 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:desc="Master 14 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:desc="Master 15 Access Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000154" edc:access="----------------wwwwwwwwwwwwwwww" edc:cname="MATRIX0_MEIDR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="MERR0" edc:desc="Master 0 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:desc="Master 1 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:desc="Master 2 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:desc="Master 3 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:desc="Master 4 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:desc="Master 5 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:desc="Master 6 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:desc="Master 7 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:desc="Master 8 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:desc="Master 9 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:desc="Master 10 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:desc="Master 11 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:desc="Master 12 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:desc="Master 13 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:desc="Master 14 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:desc="Master 15 Access Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000158" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEIMR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="MERR0" edc:desc="Master 0 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:desc="Master 1 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:desc="Master 2 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:desc="Master 3 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:desc="Master 4 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:desc="Master 5 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:desc="Master 6 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:desc="Master 7 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:desc="Master 8 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:desc="Master 9 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:desc="Master 10 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:desc="Master 11 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:desc="Master 12 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:desc="Master 13 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:desc="Master 14 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:desc="Master 15 Access Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000015C" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MESR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="MERR0" edc:desc="Master 0 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR1" edc:desc="Master 1 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR2" edc:desc="Master 2 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR3" edc:desc="Master 3 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR4" edc:desc="Master 4 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR5" edc:desc="Master 5 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR6" edc:desc="Master 6 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR7" edc:desc="Master 7 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR8" edc:desc="Master 8 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR9" edc:desc="Master 9 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR10" edc:desc="Master 10 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR11" edc:desc="Master 11 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR12" edc:desc="Master 12 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR13" edc:desc="Master 13 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR14" edc:desc="Master 14 Access Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MERR15" edc:desc="Master 15 Access Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000160" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR0" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000164" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR1" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000168" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR2" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000016C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR3" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000170" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR4" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000174" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR5" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000178" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR6" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000017C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000180" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR8" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000184" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR9" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000188" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR10" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000018C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR11" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000190" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR12" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000194" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR13" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000198" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR14" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000019C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MATRIX0_MEAR15" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="ERRADD" edc:desc="Master Error Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400001A0" edc:offset="0x44"/>
      <edc:SFRDef edc:_addr="0x400001E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn------n" edc:cname="MATRIX0_WPMR" edc:impl="0xFFFFFF81" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CFGFRZ" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN and CFGFRZ bits. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x4D4154"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400001E8" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="MATRIX0_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400001EC" edc:offset="0x14"/>
      <edc:SFRDef edc:_addr="0x40000200" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR0" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000204" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR1" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000208" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR2" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000020C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR3" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000210" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR4" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000214" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR5" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000218" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR6" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000021C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000220" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR8" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000224" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR9" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000228" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR10" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000022C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR11" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000230" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR12" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000234" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR13" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000238" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR14" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000023C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PSR15" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="LAUSERH0" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH1" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH2" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH3" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH4" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH5" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH6" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LAUSERH7" edc:desc="Low Area USER in HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH0" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH1" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH2" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH3" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH4" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH5" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH6" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDUSERH7" edc:desc="Read USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH0" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH1" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH2" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH3" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH4" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH5" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH6" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRUSERH7" edc:desc="Write USER for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA0" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA1" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA2" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA3" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA4" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA5" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA6" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DPSOA7" edc:desc="Downward Protection Split Address for HSELx Protected Region" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000240" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR0" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000244" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR1" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000248" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR2" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000024C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR3" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000250" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR4" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000254" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR5" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000258" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR6" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000025C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000260" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR8" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000264" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR9" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000268" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR10" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000026C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR11" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000270" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR12" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000274" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR13" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000278" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR14" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000027C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PASSR15" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PASPLIT0" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT1" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT2" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT3" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT4" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT5" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT6" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PASPLIT7" edc:desc="Protected Areas Split for HSELx Protected Region" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000280" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR0" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000284" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR1" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000288" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR2" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000028C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR3" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000290" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR4" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000294" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR5" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40000298" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR6" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000029C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR7" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR8" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR9" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR10" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002AC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR11" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002B0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR12" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002B4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR13" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002B8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR14" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PRTSR15" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="PRTOP0" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP1" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP2" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP3" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP4" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP5" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP6" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PRTOP7" edc:desc="HSELx Protected Region Top" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002C0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PPSELR0" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="USERP0" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002C4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PPSELR1" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="USERP0" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400002C8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MATRIX0_PPSELR2" edc:nzwidth="0x20" ltx:memberofperipheral="MATRIX0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MATRIX0">
            <edc:SFRFieldDef edc:cname="USERP0" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP1" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP2" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP3" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP4" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP5" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP6" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP7" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP8" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP9" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP10" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP11" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP12" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP13" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP14" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP15" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP16" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP17" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP18" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP19" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP20" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP21" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP22" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP23" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP24" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP25" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP26" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP27" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP28" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP29" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP30" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERP31" edc:desc="User PSELy Peripheral" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400002CC" edc:offset="0x3D34"/>
      <edc:SFRDef edc:_addr="0x40004000" edc:access="---------------n--------------nn" edc:cname="HEFC_FMR" edc:impl="0x10003" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="FRDY" edc:desc="Flash Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPSI" edc:desc="Flash Power Status Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="Must be written to 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004004" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="HEFC_FCR" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="FCMD" edc:desc="Flash Command" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="GETD" edc:desc="Get Flash descriptor" edc:when="(field &amp; 0xFF) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="WP" edc:desc="Write page" edc:when="(field &amp; 0xFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="WPL" edc:desc="Write page and lock" edc:when="(field &amp; 0xFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="EA" edc:desc="Erase all" edc:when="(field &amp; 0xFF) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="EP" edc:desc="Erase page" edc:when="(field &amp; 0xFF) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="EPA" edc:desc="Erase pages" edc:when="(field &amp; 0xFF) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="SLB" edc:desc="Set lock bit" edc:when="(field &amp; 0xFF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="CLB" edc:desc="Clear lock bit" edc:when="(field &amp; 0xFF) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="GLB" edc:desc="Get lock bit" edc:when="(field &amp; 0xFF) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="SGPB" edc:desc="Set GPNVM bit" edc:when="(field &amp; 0xFF) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="CGPB" edc:desc="Clear GPNVM bit" edc:when="(field &amp; 0xFF) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="GGPB" edc:desc="Get GPNVM bit" edc:when="(field &amp; 0xFF) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="GCALB" edc:desc="Get CALIB bit" edc:when="(field &amp; 0xFF) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="WUS" edc:desc="Write user signature" edc:when="(field &amp; 0xFF) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="EUS" edc:desc="Erase user signature" edc:when="(field &amp; 0xFF) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="STUS" edc:desc="Start read user signature" edc:when="(field &amp; 0xFF) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="SPUS" edc:desc="Stop read user signature" edc:when="(field &amp; 0xFF) == 0x15"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FARG" edc:desc="Flash Command Argument" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="FKEY" edc:desc="Flash Writing Protection Key" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="The 0x5A value enables the command defined by the bits of the register. If the field is written with a different value, the write is not performed and no action is started." edc:when="(field &amp; 0xFF) == 0x5A"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004008" edc:access="---------------------------r-rrr" edc:cname="HEFC_FSR" edc:impl="0x17" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="FRDY" edc:desc="Flash Ready Status (cleared when Flash is busy)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCMDE" edc:desc="Flash Command Error Status (cleared on read or by writing HEFC_FCR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FLOCKE" edc:desc="Flash Lock Error Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WREER" edc:desc="Write Register Error Status (cleared on read)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000400C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="HEFC_FRR" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="FVALUE" edc:desc="Flash Result Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40004010" edc:offset="0x30"/>
      <edc:SFRDef edc:_addr="0x40004040" edc:access="---------------n--nnnnnn----nnnn" edc:cname="HEFC_FPMR" edc:impl="0x13F0F" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="PWS_EN" edc:desc="Power switch enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWS_STAT" edc:desc="Power switch Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWS_DLY" edc:desc="Power switch Delay" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="_75US" edc:desc="delay is set to 75 usec" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_150US" edc:desc="delay is set to 150 usec" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_300US" edc:desc="delay is set to 300 usec" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_600US" edc:desc="delay is set to 600 usec" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="VAR_FACTOR" edc:desc="Variation Factor" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FUNC_ISOL_CTRL_N" edc:desc="Flash insulated Control Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40004044" edc:offset="0xA0"/>
      <edc:SFRDef edc:_addr="0x400040E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn---nnnnn" edc:cname="HEFC_WPMR" edc:impl="0xFFFFFF1F" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GPNVMWP" edc:desc="GPNVM Bit Write Protection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKWP" edc:desc="Lock Bit Write Protection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ERASEWP" edc:desc="Page, Sector and Plane Write Protection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USER" edc:desc="User Signature Write Protection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x454643"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400040E8" edc:offset="0x18"/>
      <edc:SFRDef edc:_addr="0x40004100" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR0" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004104" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR1" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004108" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR2" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000410C" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR3" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004110" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR4" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004114" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR5" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004118" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR6" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000411C" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR7" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004120" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR8" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004124" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR9" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004128" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR10" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000412C" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR11" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004130" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR12" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004134" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR13" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004138" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR14" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000413C" edc:access="-------------------------nnn-nnn" edc:cname="HEFC_HECC_CR15" edc:impl="0x77" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004140" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB0" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004144" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB1" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004148" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB2" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000414C" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB3" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004150" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB4" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004154" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB5" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004158" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB6" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000415C" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB7" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004160" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB8" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004164" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB9" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004168" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB10" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000416C" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB11" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004170" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB12" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004174" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB13" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004178" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB14" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000417C" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEFC_HECC_TESTCB15" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="TCB" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004180" edc:access="--rrrrrr--------rrrrrr-rrrrrrr-r" edc:cname="HEFC_HECC_SR" edc:impl="0x3F00FDFD" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="Fixable error status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPT_FIX" edc:desc="5 bits counter" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OVER_FIX" edc:desc="counter overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="Un-fixable error status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPT_NOFIX" edc:desc="5 bits counter" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OVER_NOFIX" edc:desc="counter overflow" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="HES" edc:desc="Hardware Error Size" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="write or read access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_ID" edc:desc="memory identification number" edc:nzwidth="0x2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004184" edc:access="------------------------------ww" edc:cname="HEFC_HECC_IER" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="Fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="Un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004188" edc:access="------------------------------ww" edc:cname="HEFC_HECC_IDR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000418C" edc:access="------------------------------rr" edc:cname="HEFC_HECC_IMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004190" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="HEFC_HECC_FAILAR" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:desc="address of the error detected" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40004194" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="HEFC_HECC_FAILDR" edc:nzwidth="0x20" ltx:memberofperipheral="HEFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEFC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="data of the error detected" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40004198" edc:offset="0x3E68"/>
      <edc:SFRDef edc:_addr="0x40008000" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PIO_GROUP0PIO_MSKR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="MSK0" edc:desc="PIO Line 0 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:desc="PIO Line 1 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:desc="PIO Line 2 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:desc="PIO Line 3 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:desc="PIO Line 4 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:desc="PIO Line 5 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:desc="PIO Line 6 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:desc="PIO Line 7 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:desc="PIO Line 8 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:desc="PIO Line 9 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:desc="PIO Line 10 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:desc="PIO Line 11 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:desc="PIO Line 12 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:desc="PIO Line 13 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:desc="PIO Line 14 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:desc="PIO Line 15 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:desc="PIO Line 16 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:desc="PIO Line 17 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:desc="PIO Line 18 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:desc="PIO Line 19 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:desc="PIO Line 20 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:desc="PIO Line 21 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:desc="PIO Line 22 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:desc="PIO Line 23 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:desc="PIO Line 24 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:desc="PIO Line 25 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:desc="PIO Line 26 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:desc="PIO Line 27 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:desc="PIO Line 28 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:desc="PIO Line 29 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:desc="PIO Line 30 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:desc="PIO Line 31 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008004" edc:access="-nn--nnn-----nnnnn---nnn-----nnn" edc:cname="PIO_GROUP0PIO_CFGR" edc:impl="0x6707C707" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="FUNC" edc:desc="I/O Line Function" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_E" edc:desc="Select the peripheral E for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_F" edc:desc="Select the peripheral F for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_G" edc:desc="Select the peripheral G for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Direction" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:desc="Pull-Up Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:desc="Pull-Down Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:desc="Open-Drain" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:desc="Schmitt Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:desc="Drive Strength" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="OUT_2m" edc:desc="Output drive is 2mA" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OUT_4m" edc:desc="Output drive is 4mA" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OUT_8m" edc:desc="Output drive is 8mA" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OUT_16m" edc:desc="Output drive is 16mA" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="OUT_24m" edc:desc="Output drive is 24mA" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="OUT_32m" edc:desc="Output drive is 32mA" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="OUT_40m" edc:desc="Output drive is 40mA" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="OUT_48m" edc:desc="Output drive is 48mA" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:desc="Event Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:desc="Physical Configuration Freeze Status (read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:desc="Interrupt Configuration Freeze Status (read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008008" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP0PIO_PDSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000800C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP0PIO_LOCKSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Lock Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008010" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP0PIO_SODR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008014" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP0PIO_CODR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008018" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PIO_GROUP0PIO_ODSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000801C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40008020" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP0PIO_IER" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008024" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP0PIO_IDR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008028" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP0PIO_IMR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000802C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP0PIO_ISR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40008030" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4000803C" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:cname="PIO_GROUP0PIO_IOFR" edc:impl="0xFFFFFF03" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="FPHY" edc:desc="Freeze Physical Configuration" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:desc="Freeze Interrupt Configuration" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:desc="Freeze Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008040" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PIO_GROUP1PIO_MSKR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="MSK0" edc:desc="PIO Line 0 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:desc="PIO Line 1 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:desc="PIO Line 2 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:desc="PIO Line 3 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:desc="PIO Line 4 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:desc="PIO Line 5 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:desc="PIO Line 6 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:desc="PIO Line 7 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:desc="PIO Line 8 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:desc="PIO Line 9 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:desc="PIO Line 10 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:desc="PIO Line 11 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:desc="PIO Line 12 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:desc="PIO Line 13 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:desc="PIO Line 14 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:desc="PIO Line 15 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:desc="PIO Line 16 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:desc="PIO Line 17 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:desc="PIO Line 18 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:desc="PIO Line 19 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:desc="PIO Line 20 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:desc="PIO Line 21 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:desc="PIO Line 22 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:desc="PIO Line 23 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:desc="PIO Line 24 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:desc="PIO Line 25 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:desc="PIO Line 26 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:desc="PIO Line 27 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:desc="PIO Line 28 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:desc="PIO Line 29 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:desc="PIO Line 30 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:desc="PIO Line 31 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008044" edc:access="-nn--nnn-----nnnnn---nnn-----nnn" edc:cname="PIO_GROUP1PIO_CFGR" edc:impl="0x6707C707" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="FUNC" edc:desc="I/O Line Function" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_E" edc:desc="Select the peripheral E for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_F" edc:desc="Select the peripheral F for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_G" edc:desc="Select the peripheral G for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Direction" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:desc="Pull-Up Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:desc="Pull-Down Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:desc="Open-Drain" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:desc="Schmitt Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:desc="Drive Strength" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="OUT_2m" edc:desc="Output drive is 2mA" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OUT_4m" edc:desc="Output drive is 4mA" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OUT_8m" edc:desc="Output drive is 8mA" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OUT_16m" edc:desc="Output drive is 16mA" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="OUT_24m" edc:desc="Output drive is 24mA" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="OUT_32m" edc:desc="Output drive is 32mA" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="OUT_40m" edc:desc="Output drive is 40mA" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="OUT_48m" edc:desc="Output drive is 48mA" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:desc="Event Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:desc="Physical Configuration Freeze Status (read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:desc="Interrupt Configuration Freeze Status (read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008048" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP1PIO_PDSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000804C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP1PIO_LOCKSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Lock Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008050" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP1PIO_SODR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008054" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP1PIO_CODR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008058" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PIO_GROUP1PIO_ODSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000805C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40008060" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP1PIO_IER" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008064" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP1PIO_IDR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008068" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP1PIO_IMR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000806C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP1PIO_ISR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40008070" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4000807C" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:cname="PIO_GROUP1PIO_IOFR" edc:impl="0xFFFFFF03" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="FPHY" edc:desc="Freeze Physical Configuration" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:desc="Freeze Interrupt Configuration" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:desc="Freeze Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008080" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PIO_GROUP2PIO_MSKR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="MSK0" edc:desc="PIO Line 0 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:desc="PIO Line 1 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:desc="PIO Line 2 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:desc="PIO Line 3 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:desc="PIO Line 4 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:desc="PIO Line 5 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:desc="PIO Line 6 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:desc="PIO Line 7 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:desc="PIO Line 8 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:desc="PIO Line 9 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:desc="PIO Line 10 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:desc="PIO Line 11 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:desc="PIO Line 12 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:desc="PIO Line 13 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:desc="PIO Line 14 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:desc="PIO Line 15 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:desc="PIO Line 16 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:desc="PIO Line 17 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:desc="PIO Line 18 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:desc="PIO Line 19 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:desc="PIO Line 20 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:desc="PIO Line 21 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:desc="PIO Line 22 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:desc="PIO Line 23 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:desc="PIO Line 24 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:desc="PIO Line 25 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:desc="PIO Line 26 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:desc="PIO Line 27 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:desc="PIO Line 28 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:desc="PIO Line 29 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:desc="PIO Line 30 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:desc="PIO Line 31 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008084" edc:access="-nn--nnn-----nnnnn---nnn-----nnn" edc:cname="PIO_GROUP2PIO_CFGR" edc:impl="0x6707C707" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="FUNC" edc:desc="I/O Line Function" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_E" edc:desc="Select the peripheral E for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_F" edc:desc="Select the peripheral F for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_G" edc:desc="Select the peripheral G for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Direction" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:desc="Pull-Up Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:desc="Pull-Down Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:desc="Open-Drain" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:desc="Schmitt Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:desc="Drive Strength" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="OUT_2m" edc:desc="Output drive is 2mA" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OUT_4m" edc:desc="Output drive is 4mA" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OUT_8m" edc:desc="Output drive is 8mA" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OUT_16m" edc:desc="Output drive is 16mA" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="OUT_24m" edc:desc="Output drive is 24mA" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="OUT_32m" edc:desc="Output drive is 32mA" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="OUT_40m" edc:desc="Output drive is 40mA" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="OUT_48m" edc:desc="Output drive is 48mA" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:desc="Event Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:desc="Physical Configuration Freeze Status (read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:desc="Interrupt Configuration Freeze Status (read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008088" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP2PIO_PDSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000808C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP2PIO_LOCKSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Lock Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008090" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP2PIO_SODR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008094" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP2PIO_CODR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40008098" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PIO_GROUP2PIO_ODSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000809C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x400080A0" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP2PIO_IER" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080A4" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP2PIO_IDR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080A8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP2PIO_IMR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080AC" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP2PIO_ISR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400080B0" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400080BC" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:cname="PIO_GROUP2PIO_IOFR" edc:impl="0xFFFFFF03" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="FPHY" edc:desc="Freeze Physical Configuration" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:desc="Freeze Interrupt Configuration" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:desc="Freeze Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080C0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PIO_GROUP3PIO_MSKR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="MSK0" edc:desc="PIO Line 0 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK1" edc:desc="PIO Line 1 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK2" edc:desc="PIO Line 2 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK3" edc:desc="PIO Line 3 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK4" edc:desc="PIO Line 4 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK5" edc:desc="PIO Line 5 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK6" edc:desc="PIO Line 6 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK7" edc:desc="PIO Line 7 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK8" edc:desc="PIO Line 8 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK9" edc:desc="PIO Line 9 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK10" edc:desc="PIO Line 10 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK11" edc:desc="PIO Line 11 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK12" edc:desc="PIO Line 12 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK13" edc:desc="PIO Line 13 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK14" edc:desc="PIO Line 14 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK15" edc:desc="PIO Line 15 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK16" edc:desc="PIO Line 16 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK17" edc:desc="PIO Line 17 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK18" edc:desc="PIO Line 18 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK19" edc:desc="PIO Line 19 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK20" edc:desc="PIO Line 20 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK21" edc:desc="PIO Line 21 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK22" edc:desc="PIO Line 22 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK23" edc:desc="PIO Line 23 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK24" edc:desc="PIO Line 24 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK25" edc:desc="PIO Line 25 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK26" edc:desc="PIO Line 26 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK27" edc:desc="PIO Line 27 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK28" edc:desc="PIO Line 28 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK29" edc:desc="PIO Line 29 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK30" edc:desc="PIO Line 30 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSK31" edc:desc="PIO Line 31 Mask" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx does not affect the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Writing the PIO_CFGRx, PIO_ODSRx or PIO_IOFRx updates the corresponding I/O line configuration." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080C4" edc:access="-nn--nnn-----nnnnn---nnn-----nnn" edc:cname="PIO_GROUP3PIO_CFGR" edc:impl="0x6707C707" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="FUNC" edc:desc="I/O Line Function" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="GPIO" edc:desc="Select the PIO mode for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_A" edc:desc="Select the peripheral A for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_B" edc:desc="Select the peripheral B for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_C" edc:desc="Select the peripheral C for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_D" edc:desc="Select the peripheral D for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_E" edc:desc="Select the peripheral E for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_F" edc:desc="Select the peripheral F for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="PERIPH_G" edc:desc="Select the peripheral G for the selected I/O lines." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Direction" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="INPUT" edc:desc="The selected I/O lines are pure inputs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="OUTPUT" edc:desc="The selected I/O lines are enabled in output." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PUEN" edc:desc="Pull-Up Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Up is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Up is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PDEN" edc:desc="Pull-Down Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Pull-Down is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Pull-Down is enabled for the selected I/O lines only if PUEN is 0." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="OPD" edc:desc="Open-Drain" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="The open-drain is disabled for the selected I/O lines. I/O lines are driven at high- and low-level." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="The open-drain is enabled for the selected I/O lines. I/O lines are driven at low-level only." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCHMITT" edc:desc="Schmitt Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Schmitt trigger is enabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Schmitt trigger is disabled for the selected I/O lines." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:desc="Drive Strength" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="OUT_2m" edc:desc="Output drive is 2mA" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OUT_4m" edc:desc="Output drive is 4mA" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OUT_8m" edc:desc="Output drive is 8mA" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OUT_16m" edc:desc="Output drive is 16mA" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="OUT_24m" edc:desc="Output drive is 24mA" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="OUT_32m" edc:desc="Output drive is 32mA" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="OUT_40m" edc:desc="Output drive is 40mA" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="OUT_48m" edc:desc="Output drive is 48mA" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="EVTSEL" edc:desc="Event Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Event detection on input falling edge" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Event detection on input rising edge" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Event detection on input both edge" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Event detection on low level input" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Event detection on high level input" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PCFS" edc:desc="Physical Configuration Freeze Status (read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ICFS" edc:desc="Interrupt Configuration Freeze Status (read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_FROZEN" edc:desc="The fields are not frozen and can be written for this I/O line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="The fields are frozen and cannot be written for this I/O line. Only a hardware reset can release these fields." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080C8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP3PIO_PDSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Data Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080CC" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP3PIO_LOCKSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Lock Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080D0" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP3PIO_SODR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Set Output Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080D4" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP3PIO_CODR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Clear Output Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080D8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PIO_GROUP3PIO_ODSR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Output Data Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400080DC" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x400080E0" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP3PIO_IER" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080E4" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PIO_GROUP3PIO_IDR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080E8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP3PIO_IMR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400080EC" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PIO_GROUP3PIO_ISR" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="P0" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P1" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P2" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P3" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P4" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P5" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P6" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P7" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P8" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P9" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P10" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P11" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P12" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P13" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P14" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P15" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P16" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P17" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P18" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P19" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P20" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P21" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P22" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P23" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P24" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P25" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P26" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P27" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P28" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P29" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P30" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="P31" edc:desc="Input Change Interrupt Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400080F0" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400080FC" edc:access="wwwwwwwwwwwwwwwwwwwwwwww------ww" edc:cname="PIO_GROUP3PIO_IOFR" edc:impl="0xFFFFFF03" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="FPHY" edc:desc="Freeze Physical Configuration" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FINT" edc:desc="Freeze Interrupt Configuration" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="FRZKEY" edc:desc="Freeze Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit." edc:when="(field &amp; 0xFFFFFF) == 0x494F46"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40008100" edc:offset="0x400"/>
      <edc:SFRDef edc:_addr="0x40008500" edc:access="------------------nnnnnnnnnnnnnn" edc:cname="PIO_SCDR" edc:impl="0x3FFF" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="DIV" edc:desc="Slow Clock Divider Selection for Debouncing" edc:nzwidth="0xE"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40008504" edc:offset="0xDC"/>
      <edc:SFRDef edc:_addr="0x400085E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:cname="PIO_WPMR" edc:impl="0xFFFFFF03" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x50494F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400085E4" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="PIO_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="PIO">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PIO">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400085E8" edc:offset="0x3A18"/>
      <edc:SFRDef edc:_addr="0x4000C000" edc:access="--------------------wwww--------" edc:cname="PMC_SCER" edc:impl="0xF00" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PCK0" edc:desc="Programmable Clock 0 Output Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK1" edc:desc="Programmable Clock 1 Output Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK2" edc:desc="Programmable Clock 2 Output Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK3" edc:desc="Programmable Clock 3 Output Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C004" edc:access="--------------------wwww--------" edc:cname="PMC_SCDR" edc:impl="0xF00" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PCK0" edc:desc="Programmable Clock 0 Output Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK1" edc:desc="Programmable Clock 1 Output Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK2" edc:desc="Programmable Clock 2 Output Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK3" edc:desc="Programmable Clock 3 Output Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C008" edc:access="--------------------rrrr--------" edc:cname="PMC_SCSR" edc:impl="0xF00" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PCK0" edc:desc="Programmable Clock 0 Output Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK1" edc:desc="Programmable Clock 1 Output Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK2" edc:desc="Programmable Clock 2 Output Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCK3" edc:desc="Programmable Clock 3 Output Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C00C" edc:offset="0x14"/>
      <edc:SFRDef edc:_addr="0x4000C020" edc:access="---nnnnnnnnnnnnnnnnnnnnn-nnnn-nn" edc:cname="CKGR_MOR" edc:impl="0x1FFFFF7B" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTEN" edc:desc="Main Crystal Oscillator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ZERO" edc:desc="Shall be always write at '0'" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MOSCRCEN" edc:desc="Main RC Oscillator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MOSCRCF" edc:desc="Main RC Oscillator Frequency Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_4_MHz" edc:desc="The RC oscillator frequency is at 4 MHz" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_8_MHz" edc:desc="The RC oscillator frequency is at 8 MHz" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_10_MHz" edc:desc="The RC oscillator frequency is at 10 MHz" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_12_MHz" edc:desc="The RC oscillator frequency is at 12 MHz" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MOSCXTST" edc:desc="Main Crystal Oscillator Startup Time" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:desc="Write Access Password" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFF) == 0x37"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MOSCSEL" edc:desc="Main Clock Oscillator Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFDEN" edc:desc="Clock Failure Detector Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EXT32KFME" edc:desc="32.768 kHz External Slow clock Frequency Monitoring Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BCPURST" edc:desc="Bad CPU Clock Reset Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BCPUNMIC" edc:desc="Bad CPU Clock Interrupt to NMIC Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C024" edc:access="-------n---n---nnnnnnnnnnnnnnnnn" edc:cname="CKGR_MCFR" edc:impl="0x111FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MAINF" edc:desc="Main Clock Frequency" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="MAINFRDY" edc:desc="Main Clock Frequency Measure Ready" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RCMEAS" edc:desc="RC Oscillator Frequency Measure (write-only)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CCSS" edc:desc="Counter Clock Source Selection" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C028" edc:access="--n--nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="CKGR_PLLAR" edc:impl="0x27FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="DIVA" edc:desc="PLLA Front End Divider" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="_0" edc:desc="PLLA is disabled." edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="BYPASS" edc:desc="Divider is bypassed (divide by 1) and PLLA is enabled." edc:when="(field &amp; 0xFF) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PLLACOUNT" edc:desc="PLLA Counter" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="FREQ_VCO" edc:desc="VCO Frequency Configuratio" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="VCO0" edc:desc="Frequency range: 40-80 MHz" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="VCO1" edc:desc="Frequency range: 70-150 MHz" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="VCO2" edc:desc="Frequency range: 125-275 MHz" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="VCO3" edc:desc="Frequency range: 250-450 MHz" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MULA" edc:desc="PLLA Multiplier" edc:nzwidth="0xB"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="Must Be Set to 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C02C" edc:access="-nn--nnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="CKGR_PLLBR" edc:impl="0x67FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="DIVB" edc:desc="PLLB Front End Divider" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="_0" edc:desc="PLLBis disabled." edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="BYPASS" edc:desc="Divider is bypassed (divide by 1) and PLLB is enabled." edc:when="(field &amp; 0xFF) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PLLBCOUNT" edc:desc="PLLB Counter" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="FREQ_VCO" edc:desc="VCO Frequency Configuration" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="VCO0" edc:desc="Frequency range: 40-80 MHz" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="VCO1" edc:desc="Frequency range: 70-150 MHz" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="VCO2" edc:desc="Frequency range: 125-275 MHz" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="VCO3" edc:desc="Frequency range: 250-450 MHz" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MULB" edc:desc="PLLB Multiplier" edc:nzwidth="0xB"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SRCB" edc:desc="PLLB Source Clock Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MAINCK" edc:desc="MAINCK is the source clock of PLLB." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RC2CK" edc:desc="RC2CK is the source clock of PLLB." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C030" edc:access="------------------n----n-nnn--nn" edc:cname="PMC_MCKR" edc:impl="0x2173" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:desc="Master Clock Source Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MAIN_CLK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PLLA_CLK" edc:desc="PLLACK is selected" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:desc="Processor Clock Prescaler" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CLK_1" edc:desc="Selected clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CLK_2" edc:desc="Selected clock divided by 2" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLK_4" edc:desc="Selected clock divided by 4" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CLK_8" edc:desc="Selected clock divided by 8" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CLK_16" edc:desc="Selected clock divided by 16" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CLK_32" edc:desc="Selected clock divided by 32" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CLK_64" edc:desc="Selected clock divided by 64" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MDIV" edc:desc="Master Clock Division" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="EQ_PCK" edc:desc="MCK is FCLK divided by 1." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PCK_DIV2" edc:desc="MCK is FCLK divided by 2." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ZERO" edc:desc="Shall be always write at '0'" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C034" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4000C040" edc:access="--------------------nnnnnnnn-nnn" edc:cname="PMC_PCK0" edc:impl="0xFF7" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:desc="Programmable Clock Source Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MAIN_CLK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PLLA_CLK" edc:desc="PLLACK is selected" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PLLB_CLK" edc:desc="PLLBCKDIV is selected" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="MCK is selected" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:desc="Programmable Clock Prescaler" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C044" edc:access="--------------------nnnnnnnn-nnn" edc:cname="PMC_PCK1" edc:impl="0xFF7" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:desc="Programmable Clock Source Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MAIN_CLK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PLLA_CLK" edc:desc="PLLACK is selected" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PLLB_CLK" edc:desc="PLLBCKDIV is selected" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="MCK is selected" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:desc="Programmable Clock Prescaler" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C048" edc:access="--------------------nnnnnnnn-nnn" edc:cname="PMC_PCK2" edc:impl="0xFF7" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:desc="Programmable Clock Source Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MAIN_CLK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PLLA_CLK" edc:desc="PLLACK is selected" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PLLB_CLK" edc:desc="PLLBCKDIV is selected" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="MCK is selected" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:desc="Programmable Clock Prescaler" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C04C" edc:access="--------------------nnnnnnnn-nnn" edc:cname="PMC_PCK3" edc:impl="0xFF7" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CSS" edc:desc="Programmable Clock Source Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MAIN_CLK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PLLA_CLK" edc:desc="PLLACK is selected" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PLLB_CLK" edc:desc="PLLBCKDIV is selected" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="MCK is selected" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRES" edc:desc="Programmable Clock Prescaler" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C050" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x4000C060" edc:access="--------w-w--www----wwww----wwww" edc:cname="PMC_IER" edc:impl="0xA70F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTS" edc:desc="Main Crystal Oscillator Status Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKA" edc:desc="PLLA Lock Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKB" edc:desc="PLLB Lock Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCKRDY" edc:desc="Master Clock Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PCKRDY0" edc:desc="Programmable Clock Ready 0 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY1" edc:desc="Programmable Clock Ready 1 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY2" edc:desc="Programmable Clock Ready 2 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY3" edc:desc="Programmable Clock Ready 3 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCSELS" edc:desc="Main Clock Source Oscillator Selection Status Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MOSCRCS" edc:desc="Main RC Oscillator Status Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFDEV" edc:desc="Clock Failure Detector Event Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EXT32KERR" edc:desc="32.768 kHz external slow clock Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPUMON" edc:desc="CPU Clock Monitor Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C064" edc:access="--------w-w--www----wwww----wwww" edc:cname="PMC_IDR" edc:impl="0xA70F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTS" edc:desc="Main Crystal Oscillator Status Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKA" edc:desc="PLLA Lock Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKB" edc:desc="PLLB Lock Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCKRDY" edc:desc="Master Clock Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PCKRDY0" edc:desc="Programmable Clock Ready 0 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY1" edc:desc="Programmable Clock Ready 1 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY2" edc:desc="Programmable Clock Ready 2 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY3" edc:desc="Programmable Clock Ready 3 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCSELS" edc:desc="Main Clock Source Oscillator Selection Status Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MOSCRCS" edc:desc="Main RC Status Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFDEV" edc:desc="Clock Failure Detector Event Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EXT32KERR" edc:desc="32.768 kHz external slow clock Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPUMON" edc:desc="CPU Clock Monitor Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C068" edc:access="--------r-rrrrrr----rrrrr---rrrr" edc:cname="PMC_SR" edc:impl="0xBF0F8F" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTS" edc:desc="Main Crystal Oscillator Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKA" edc:desc="PLLA Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKB" edc:desc="PLLB Lock Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCKRDY" edc:desc="Master Clock Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="OSCSELS" edc:desc="Monitoring Domain Slow Clock Source Oscillator Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY0" edc:desc="Programmable Clock Ready Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY1" edc:desc="Programmable Clock Ready Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY2" edc:desc="Programmable Clock Ready Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY3" edc:desc="Programmable Clock Ready Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCSELS" edc:desc="Main Clock Source Oscillator Selection Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MOSCRCS" edc:desc="Main RC Oscillator Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFDEV" edc:desc="Clock Failure Detector Event" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFDS" edc:desc="Clock Failure Detector Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FOS" edc:desc="Clock Failure Detector Fault Output Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EXT32KERR" edc:desc="External Slow Clock Error" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPUMON" edc:desc="CPU Clock Monitor Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C06C" edc:access="--------r-r--rrr----rrrr----rrrr" edc:cname="PMC_IMR" edc:impl="0xA70F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="MOSCXTS" edc:desc="Main Crystal Oscillator Status Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKA" edc:desc="PLLA Lock Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKB" edc:desc="PLLB Lock Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCKRDY" edc:desc="Master Clock Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PCKRDY0" edc:desc="Programmable Clock Ready 0 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY1" edc:desc="Programmable Clock Ready 1 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY2" edc:desc="Programmable Clock Ready 2 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCKRDY3" edc:desc="Programmable Clock Ready 3 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MOSCSELS" edc:desc="Main Clock Source Oscillator Selection Status Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MOSCRCS" edc:desc="Main RC Status Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFDEV" edc:desc="Clock Failure Detector Event Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EXT32KERR" edc:desc="32.768 kHz Slow Clock Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPUMON" edc:desc="CPU Clock Monitor Error Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C070" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4000C078" edc:access="-------------------------------w" edc:cname="PMC_FOCR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="FOCLR" edc:desc="Fault Output Clear" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C07C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x4000C080" edc:access="nnnn--------nnnnnnnn--------nnnn" edc:cname="PMC_PLL_CFG" edc:impl="0xF00FF00F" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="OUTCUR_PLLA" edc:desc="PLLA Output Current" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="ICP0" edc:desc="0.5 mA" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ICP1" edc:desc="0.75 mA" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ICP2" edc:desc="1 mA" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ICP3" edc:desc="1.25 mA" edc:when="(field &amp; 0xF) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SCA" edc:desc="Internal Filter PLL - Select Internal Capaticance Value" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SC_VAL_20p" edc:desc="20 pF" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SC_VAL_40p" edc:desc="40 pF" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SC_VAL_30p" edc:desc="30 pF" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SC_VAL_60p" edc:desc="60 pF" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SRA" edc:desc="Internal Filter PLL - Select Internal Resistor Value" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SR_VAL_24K" edc:desc="24 Ohms" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SR_VAL_6K" edc:desc="6 Ohms" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SR_VAL_3K" edc:desc="3 Ohms" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SR_VAL_12K" edc:desc="12 Ohms" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OUTCUR_PLLB" edc:desc="PLLB Output Current" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="ICP0" edc:desc="0.5 mA" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ICP1" edc:desc="0.75 mA" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ICP2" edc:desc="1 mA" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ICP3" edc:desc="1.25 mA" edc:when="(field &amp; 0xF) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SCB" edc:desc="Internal Filter PLL - Select Internal Capaticance Value" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SC_VAL_20p" edc:desc="20 pF" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SC_VAL_40p" edc:desc="40 pF" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SC_VAL_30p" edc:desc="30 pF" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SC_VAL_60p" edc:desc="60 pF" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SRB" edc:desc="Internal Filter PLL - Select Internal Resistor Value" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SR_VAL_24K" edc:desc="24 Ohms" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SR_VAL_6K" edc:desc="6 Ohms" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SR_VAL_3K" edc:desc="3 Ohms" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SR_VAL_12K" edc:desc="12 Ohms" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C084" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0x4000C0E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:cname="PMC_WPMR" edc:impl="0xFFFFFF03" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504D43"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C0E8" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="PMC_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C0EC" edc:offset="0x20"/>
      <edc:SFRDef edc:_addr="0x4000C10C" edc:access="--nnnnnnnnnn-------n-nnn-nnnnnnn" edc:cname="PMC_PCR" edc:impl="0x3FF0177F" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="PID" edc:desc="Peripheral ID" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GCLKCSS" edc:desc="Generic Clock Source Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="SLOW_CLK" edc:desc="MD_SLCK is selected" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MAIN_CLK" edc:desc="MAINCK is selected" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PLLA_CLK" edc:desc="PLLACK is selected" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PLLB_CLK" edc:desc="PLLBCK is selected" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_CLK" edc:desc="MCK is selected" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_RC2" edc:desc="RC2 is selected" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:desc="Command" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="GCLKDIV" edc:desc="Generic Clock Division Ratio" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GCLKEN" edc:desc="Generic Clock Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C110" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PMC_OCR1" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CAL4" edc:desc="Main RC Oscillator Calibration Bits for 4 MHz" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SEL4" edc:desc="Selection of Main RC Oscillator Calibration Bits for 4 MHz" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CAL8" edc:desc="Main RC Oscillator Calibration Bits for 8 MHz" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SEL8" edc:desc="Selection of Main RC Oscillator Calibration Bits for 8 MHz" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CAL12" edc:desc="Main RC Oscillator Calibration Bits for 12 MHz" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SEL10" edc:desc="Selection of Main RC Oscillator Calibration Bits for 10 MHz" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CAL10" edc:desc="Main RC Oscillator Calibration Bits for 10 MHz" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SEL12" edc:desc="Selection of Main RC Oscillator Calibration Bits for 12 MHz" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C114" edc:offset="0x1C"/>
      <edc:SFRDef edc:_addr="0x4000C130" edc:access="-----nnnnnnnnnnn-----nnnnnnnnnnn" edc:cname="PMC_PMMR" edc:impl="0x7FF07FF" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="PLLA_MMAX" edc:desc="PLLA Maximum Allowed Multiplier Value" edc:nzwidth="0xB"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="PLLB_MMAX" edc:desc="PLLB Maximum Allowed Multiplier Value" edc:nzwidth="0xB"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C134" edc:offset="0x2C"/>
      <edc:SFRDef edc:_addr="0x4000C160" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PMC_CPULIM" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CPU_LOW_IT" edc:desc="CPU Monitoring Low IT Limit" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CPU_HIGH_IT" edc:desc="CPU Monitoring High IT Limit" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CPU_LOW_RES" edc:desc="CPU Monitoring Low RESET Limit" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CPU_HIGH_RES" edc:desc="CPU Monitoring High Reset Limit" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C164" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4000C170" edc:access="rrrrrrrrrr-------rr--rrrr-------" edc:cname="PMC_CSR0" edc:impl="0xFFC06780" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="PID7" edc:desc="Peripheral Clock 7 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID8" edc:desc="Peripheral Clock 8 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID9" edc:desc="Peripheral Clock 9 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID10" edc:desc="Peripheral Clock 10 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PID13" edc:desc="Peripheral Clock 13 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID14" edc:desc="Peripheral Clock 14 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="PID22" edc:desc="Peripheral Clock 22 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID23" edc:desc="Peripheral Clock 23 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID24" edc:desc="Peripheral Clock 24 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID25" edc:desc="Peripheral Clock 25 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID26" edc:desc="Peripheral Clock 26 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID27" edc:desc="Peripheral Clock 27 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID28" edc:desc="Peripheral Clock 28 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID29" edc:desc="Peripheral Clock 29 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID30" edc:desc="Peripheral Clock 30 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID31" edc:desc="Peripheral Clock 31 Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C174" edc:access="r---r---rrr--r----rr-----r-r--rr" edc:cname="PMC_CSR1" edc:impl="0x88E43053" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="PID32" edc:desc="Peripheral Clock 32 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID33" edc:desc="Peripheral Clock 33 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PID36" edc:desc="Peripheral Clock 36 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID38" edc:desc="Peripheral Clock 38 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="PID44" edc:desc="Peripheral Clock 44 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID45" edc:desc="Peripheral Clock 45 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PID50" edc:desc="Peripheral Clock 50 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PID53" edc:desc="Peripheral Clock 53 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID54" edc:desc="Peripheral Clock 54 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID55" edc:desc="Peripheral Clock 55 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PID59" edc:desc="Peripheral Clock 59 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PID63" edc:desc="Peripheral Clock 63 Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C178" edc:access="---------------------------r-rrr" edc:cname="PMC_CSR2" edc:impl="0x17" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="PID64" edc:desc="Peripheral Clock 64 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID65" edc:desc="Peripheral Clock 65 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PID66" edc:desc="Peripheral Clock 66 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PID68" edc:desc="Peripheral Clock 68 Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C17C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PMC_CSR3" edc:nzwidth="0x20" ltx:memberofperipheral="PMC"/>
      <edc:AdjustPoint edc:_addr="0x4000C180" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x4000C190" edc:access="---r--r-r--------rr---rrr-------" edc:cname="PMC_GCSR0" edc:impl="0x12806380" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="GPID7" edc:desc="Generic Clock 7 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID8" edc:desc="Generic Clock 8 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID9" edc:desc="Generic Clock 9 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="GPID13" edc:desc="Generic Clock 13 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID14" edc:desc="Generic Clock 14 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="GPID23" edc:desc="Generic Clock 23 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID25" edc:desc="Generic Clock 25 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GPID28" edc:desc="Generic Clock 28 Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C194" edc:access="----------r--r-----------r-r----" edc:cname="PMC_GCSR1" edc:impl="0x240050" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="GPID36" edc:desc="Generic Clock 36 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID38" edc:desc="Generic Clock 38 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="GPID50" edc:desc="Generic Clock 50 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GPID53" edc:desc="Generic Clock 53 Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C198" edc:access="---------------------------r-rr-" edc:cname="PMC_GCSR2" edc:impl="0x16" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID65" edc:desc="Generic Clock 65 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID66" edc:desc="Generic Clock 66 Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GPID68" edc:desc="Generic Clock 68 Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C19C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PMC_GCSR3" edc:nzwidth="0x20" ltx:memberofperipheral="PMC"/>
      <edc:AdjustPoint edc:_addr="0x4000C1A0" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x4000C1B0" edc:access="--------nnnnnnnn-------n--nn---n" edc:cname="PMC_OSC2" edc:impl="0xFF0131" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="OSCRCF" edc:desc="2nd Oscillator Frequency Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="_4_MHz" edc:desc="The 2nd RC oscillator frequency is at 4 MHz" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_8_MHz" edc:desc="The 2nd RC oscillator frequency is at 8 MHz" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_10_MHz" edc:desc="The 2nd RC oscillator frequency is at 10 MHz" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_12_MHz" edc:desc="The 2nd RC oscillator frequency is at 12 MHz" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EN_WR_CALIB" edc:desc="Enable Calibration Register Write" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:desc="Register Write Access Password" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation.Always reads as 0." edc:when="(field &amp; 0xFF) == 0x37"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4000C1B4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PMC_OCR2" edc:nzwidth="0x20" ltx:memberofperipheral="PMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PMC">
            <edc:SFRFieldDef edc:cname="CAL4" edc:desc="Main RC Oscillator Calibration Bits for 4 MHz" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SEL4" edc:desc="Selection of Main RC Oscillator Calibration Bits for 4 MHz" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CAL8" edc:desc="Main RC Oscillator Calibration Bits for 8 MHz" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SEL8" edc:desc="Selection of Main RC Oscillator Calibration Bits for 8 MHz" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CAL12" edc:desc="Main RC Oscillator Calibration Bits for 12 MHz" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SEL12" edc:desc="Selection of Main RC Oscillator Calibration Bits for 12 MHz" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CAL10" edc:desc="Main RC Oscillator Calibration Bits for 10 MHz" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SEL10" edc:desc="Selection of Main RC Oscillator Calibration Bits for 10 MHz" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4000C1B8" edc:offset="0x7E48"/>
      <edc:SFRDef edc:_addr="0x40014000" edc:access="-------------------------------w" edc:cname="DACC_CR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="Software Reset" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40014004" edc:access="--nnnnnn-nnn--nn-------n---nnnnn" edc:cname="DACC_MR" edc:impl="0x3F73011F" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="TRGEN" edc:desc="Trigger Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="External trigger mode disabled. DACC in free-running mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="EN" edc:desc="External trigger mode enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGSEL" edc:desc="Trigger Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TRGSEL0" edc:desc="External trigger" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRGSEL1" edc:desc="TIOA Output of the Timer Counter Channel 0" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TRGSEL2" edc:desc="TIOA Output of the Timer Counter Channel 1" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TRGSEL3" edc:desc="TIOA Output of the Timer Counter Channel 2" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TRGSEL4" edc:desc="PWM Event Line 0" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="TRGSEL5" edc:desc="PWM Event Line 1" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WORD" edc:desc="Word Transfer" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Half-word transfer" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="Word transfer" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="Must Be Set to 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="USER_SEL" edc:desc="User Channel Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Channel 2" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TAG" edc:desc="Tag Selection Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Tag selection mode disabled. Using USER_SEL to select the channel for the conversion." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Tag selection mode enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MAXS" edc:desc="Maximum Speed Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MAXIMUM" edc:desc="Maximum speed mode enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKDIV" edc:desc="Shall be always write at '0'" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:desc="Startup Time Selection" edc:nzwidth="0x6">
              <edc:SFRFieldSemantic edc:cname="_0" edc:desc="0 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_8" edc:desc="8 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16" edc:desc="16 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_24" edc:desc="24 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_64" edc:desc="64 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_80" edc:desc="80 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_96" edc:desc="96 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_112" edc:desc="112 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="_512" edc:desc="512 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="_576" edc:desc="576 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="_640" edc:desc="640 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="_704" edc:desc="704 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="_768" edc:desc="768 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="_832" edc:desc="832 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0xD"/>
              <edc:SFRFieldSemantic edc:cname="_896" edc:desc="896 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0xE"/>
              <edc:SFRFieldSemantic edc:cname="_960" edc:desc="960 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0xF"/>
              <edc:SFRFieldSemantic edc:cname="_1024" edc:desc="1024 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="_1088" edc:desc="1088 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="_1152" edc:desc="1152 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="_1216" edc:desc="1216 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="_1280" edc:desc="1280 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="_1344" edc:desc="1344 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="_1408" edc:desc="1408 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="_1472" edc:desc="1472 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="_1536" edc:desc="1536 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="_1600" edc:desc="1600 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="_1664" edc:desc="1664 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="_1728" edc:desc="1728 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="_1792" edc:desc="1792 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="_1856" edc:desc="1856 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="_1920" edc:desc="1920 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="_1984" edc:desc="1984 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="_2048" edc:desc="2048 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="_2112" edc:desc="2112 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x21"/>
              <edc:SFRFieldSemantic edc:cname="_2176" edc:desc="2176 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x22"/>
              <edc:SFRFieldSemantic edc:cname="_2240" edc:desc="2240 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x23"/>
              <edc:SFRFieldSemantic edc:cname="_2304" edc:desc="2304 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x24"/>
              <edc:SFRFieldSemantic edc:cname="_2368" edc:desc="2368 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x25"/>
              <edc:SFRFieldSemantic edc:cname="_2432" edc:desc="2432 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x26"/>
              <edc:SFRFieldSemantic edc:cname="_2496" edc:desc="2496 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x27"/>
              <edc:SFRFieldSemantic edc:cname="_2560" edc:desc="2560 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x28"/>
              <edc:SFRFieldSemantic edc:cname="_2624" edc:desc="2624 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x29"/>
              <edc:SFRFieldSemantic edc:cname="_2688" edc:desc="2688 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x2A"/>
              <edc:SFRFieldSemantic edc:cname="_2752" edc:desc="2752 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x2B"/>
              <edc:SFRFieldSemantic edc:cname="_2816" edc:desc="2816 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x2C"/>
              <edc:SFRFieldSemantic edc:cname="_2880" edc:desc="2880 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x2D"/>
              <edc:SFRFieldSemantic edc:cname="_2944" edc:desc="2944 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x2E"/>
              <edc:SFRFieldSemantic edc:cname="_3008" edc:desc="3008 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x2F"/>
              <edc:SFRFieldSemantic edc:cname="_3072" edc:desc="3072 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x30"/>
              <edc:SFRFieldSemantic edc:cname="_3136" edc:desc="3136 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x31"/>
              <edc:SFRFieldSemantic edc:cname="_3200" edc:desc="3200 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x32"/>
              <edc:SFRFieldSemantic edc:cname="_3264" edc:desc="3264 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x33"/>
              <edc:SFRFieldSemantic edc:cname="_3328" edc:desc="3328 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x34"/>
              <edc:SFRFieldSemantic edc:cname="_3392" edc:desc="3392 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x35"/>
              <edc:SFRFieldSemantic edc:cname="_3456" edc:desc="3456 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x36"/>
              <edc:SFRFieldSemantic edc:cname="_3520" edc:desc="3520 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x37"/>
              <edc:SFRFieldSemantic edc:cname="_3584" edc:desc="3584 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x38"/>
              <edc:SFRFieldSemantic edc:cname="_3648" edc:desc="3648 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x39"/>
              <edc:SFRFieldSemantic edc:cname="_3712" edc:desc="3712 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x3A"/>
              <edc:SFRFieldSemantic edc:cname="_3776" edc:desc="3776 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x3B"/>
              <edc:SFRFieldSemantic edc:cname="_3840" edc:desc="3840 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x3C"/>
              <edc:SFRFieldSemantic edc:cname="_3904" edc:desc="3904 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x3D"/>
              <edc:SFRFieldSemantic edc:cname="_3968" edc:desc="3968 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x3E"/>
              <edc:SFRFieldSemantic edc:cname="_4032" edc:desc="4032 periods of peripheral clock" edc:when="(field &amp; 0x3F) == 0x3F"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40014008" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40014010" edc:access="-----------------------------www" edc:cname="DACC_CHER" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="CH0" edc:desc="Channel 0 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:desc="Channel 1 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:desc="Channel 2 Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40014014" edc:access="-----------------------------www" edc:cname="DACC_CHDR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="CH0" edc:desc="Channel 0 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:desc="Channel 1 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:desc="Channel 2 Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40014018" edc:access="-----------------------------rrr" edc:cname="DACC_CHSR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="CH0" edc:desc="Channel 0 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:desc="Channel 1 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:desc="Channel 2 Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4001401C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40014020" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="DACC_CDR" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Data to Convert" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40014024" edc:access="------------------------------ww" edc:cname="DACC_IER" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC" edc:desc="End of Conversion Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40014028" edc:access="------------------------------ww" edc:cname="DACC_IDR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Ready Interrupt Disable." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC" edc:desc="End of Conversion Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001402C" edc:access="------------------------------rr" edc:cname="DACC_IMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC" edc:desc="End of Conversion Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40014030" edc:access="------------------------------rr" edc:cname="DACC_ISR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Ready Interrupt Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC" edc:desc="End of Conversion Interrupt Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40014034" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0x40014094" edc:access="----------------------nn--nnnnnn" edc:cname="DACC_ACR" edc:impl="0x33F" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="IBCTLCH0" edc:desc="Analog Output Current Control" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="IBCTLCH1" edc:desc="Analog Output Current Control" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="IBCTLCH2" edc:desc="Analog Output Current Control" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="IBCTLDACCORE" edc:desc="Bias Current Control for DAC Core" edc:nzwidth="0x2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40014098" edc:offset="0x4C"/>
      <edc:SFRDef edc:_addr="0x400140E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="DACC_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x444143"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400140E8" edc:access="----------------rrrrrrrr-------r" edc:cname="DACC_WPSR" edc:impl="0xFF01" edc:nzwidth="0x20" ltx:memberofperipheral="DACC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DACC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400140EC" edc:offset="0x3F14"/>
      <edc:SFRDef edc:_addr="0x40018000" edc:access="nnnnnnnnnnnnnnnnnnnnnnn---------" edc:cname="CRCCU_DSCR" edc:impl="0xFFFFFE00" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="DSCR" edc:desc="Descriptor Base Address" edc:nzwidth="0x17"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40018004" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40018008" edc:access="-------------------------------w" edc:cname="CRCCU_DMA_EN" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="DMAEN" edc:desc="DMA Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001800C" edc:access="-------------------------------w" edc:cname="CRCCU_DMA_DIS" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="DMADIS" edc:desc="DMA Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40018010" edc:access="-------------------------------r" edc:cname="CRCCU_DMA_SR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="DMASR" edc:desc="DMA Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40018014" edc:access="-------------------------------w" edc:cname="CRCCU_DMA_IER" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="DMAIER" edc:desc="Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40018018" edc:access="-------------------------------w" edc:cname="CRCCU_DMA_IDR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="DMAIDR" edc:desc="Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001801C" edc:access="-------------------------------r" edc:cname="CRCCU_DMA_IMR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="DMAIMR" edc:desc="Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40018020" edc:access="-------------------------------r" edc:cname="CRCCU_DMA_ISR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="DMAISR" edc:desc="Interrupt Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40018024" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x40018034" edc:access="-------------------------------w" edc:cname="CRCCU_CR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="RESET" edc:desc="CRC Computation Reset" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40018038" edc:access="--------------n---------nnnnnnnn" edc:cname="CRCCU_MR" edc:impl="0x200FF" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="CRC Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="COMPARE" edc:desc="CRC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PTYPE" edc:desc="Primitive Polynomial" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="CCITT8023" edc:desc="Polynom 0x04C11DB7" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CASTAGNOLI" edc:desc="Polynom 0x1EDC6F41" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CCITT16" edc:desc="Polynom 0x1021" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIVIDER" edc:desc="Request Divider" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="BITORDER" edc:desc="Precomputation Bit Swap Operation of the CRC" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MSBFIRST" edc:desc="CRC computation is performed from the most significant bit to the least significant bit" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LSBFIRST" edc:desc="CRC computation is performed from the least significant bit to the most significant bit" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001803C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="CRCCU_SR" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="CRC" edc:desc="Cyclic Redundancy Check Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40018040" edc:access="-------------------------------w" edc:cname="CRCCU_IER" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="ERRIER" edc:desc="CRC Error Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40018044" edc:access="-------------------------------w" edc:cname="CRCCU_IDR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="ERRIDR" edc:desc="CRC Error Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40018048" edc:access="-------------------------------r" edc:cname="CRCCU_IMR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="ERRIMR" edc:desc="CRC Error Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001804C" edc:access="-------------------------------r" edc:cname="CRCCU_ISR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="CRCCU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCCU">
            <edc:SFRFieldDef edc:cname="ERRISR" edc:desc="CRC Error Interrupt Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40018050" edc:offset="0x3FB0"/>
      <edc:SFRDef edc:_addr="0x4001C000" edc:access="------------nnnn----nnnn--nn---n" edc:cname="PCC_MR" edc:impl="0xF0F31" edc:nzwidth="0x20" ltx:memberofperipheral="PCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCC">
            <edc:SFRFieldDef edc:cname="PCEN" edc:desc="Parallele Capture Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DSIZE" edc:desc="Data Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="_1_DATA" edc:desc="1 data is read in the PCC_RHR" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_2_DATA" edc:desc="2 data are read in the PCC_RHR" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_4_DATA" edc:desc="4 data are read in the PCC_RHR (only for 8 bits data size, ISIZE = 0)" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SCALE" edc:desc="Scale Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ALWYS" edc:desc="Always Sampling" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HALFS" edc:desc="Half Sampling" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRSTS" edc:desc="First Sample" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ISIZE" edc:desc="Input Data Size" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="_8_BITS" edc:desc="Input data bus size is 8 bits" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_10_BITS" edc:desc="Input data bus size is 10 bits" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_12_BITS" edc:desc="Input data bus size is 12 bits" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_14_BITS" edc:desc="Input data bus size is 14 bits" edc:when="(field &amp; 0xF) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001C004" edc:access="------------------------------ww" edc:cname="PCC_IER" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="PCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCC">
            <edc:SFRFieldDef edc:cname="DRDY" edc:desc="Data Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001C008" edc:access="------------------------------ww" edc:cname="PCC_IDR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="PCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCC">
            <edc:SFRFieldDef edc:cname="DRDY" edc:desc="Data Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001C00C" edc:access="------------------------------rr" edc:cname="PCC_IMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="PCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCC">
            <edc:SFRFieldDef edc:cname="DRDY" edc:desc="Data Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001C010" edc:access="------------------------------rr" edc:cname="PCC_ISR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="PCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCC">
            <edc:SFRFieldDef edc:cname="DRDY" edc:desc="Data Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error." edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001C014" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PCC_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="PCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCC">
            <edc:SFRFieldDef edc:cname="RDATA" edc:desc="Reception Data." edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4001C018" edc:offset="0xC8"/>
      <edc:SFRDef edc:_addr="0x4001C0E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="PCC_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="PCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key." edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x504343"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4001C0E4" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="PCC_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="PCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PCC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4001C0E8" edc:offset="0x3F18"/>
      <edc:SFRDef edc:_addr="0x40020000" edc:access="------------------------------nn" edc:cname="FLEX_MR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:desc="FLEXCOM Operating Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, ) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020004" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40020010" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="FLEX_RHR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:desc="Receive Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020014" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40020020" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="FLEX_THR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020024" edc:offset="0x1DC"/>
      <edc:SFRDef edc:_addr="0x40020200" edc:access="ww-w-www----ww--w--wwwwwwwwwww--" edc:cname="FLEX_US_CR" edc:impl="0xD70C9FFC" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:desc="Reset Receiver" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:desc="Reset Transmitter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:desc="Receiver Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:desc="Receiver Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:desc="Transmitter Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:desc="Transmitter Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:desc="Reset Status Bits" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:desc="Start Break" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:desc="Stop Break" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:desc="Send Address" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:desc="Start Timeout Immediately" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:desc="Request to Send Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:desc="Request to Send Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:desc="Transmit FIFO Lock CLEAR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:desc="Request to Clear the Comparison Trigger" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020204" edc:access="nnnn-----n--nnn-nnnnnnnnnnnnnnnn" edc:cname="FLEX_US_MR" edc:impl="0xF04EFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:desc="USART Mode of Operation" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RS485" edc:desc="RS485" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HW_HANDSHAKING" edc:desc="Hardware handshaking" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:desc="Clock Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV = 8) is selected" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="PMC generic clock is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="External pin SCK is selected" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:desc="Character Length" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="Character length is 5 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="Character length is 6 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="Character length is 7 bits" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="Character length is 8 bits" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:desc="Synchronous Mode Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:desc="Parity Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:desc="Number of Stop Bits" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:desc="Channel Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:desc="9-bit Character Length" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:desc="Clock Output Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:desc="Oversampling Mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:desc="Receive Line Filter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:desc="Manchester Encoder/Decoder Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:desc="Manchester Synchronization Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:desc="Start Frame Delimiter Selector" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020208" edc:access="-------w-w--w---------wwwww--www" edc:cname="FLEX_US_IER" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002020C" edc:access="-------w-w--w---------wwwww--www" edc:cname="FLEX_US_IDR" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020210" edc:access="-------r-r--r---------rrrrr--rrr" edc:cname="FLEX_US_IMR" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020214" edc:access="-------rrr--r---------rrrrr--rrr" edc:cname="FLEX_US_CSR" edc:impl="0x1C803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Break Received/End of Break" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Receiver Timeout" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Flag" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:desc="Image of CTS Input" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020218" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:desc="Received Sync" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:desc="Received Character" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002021C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:desc="Sync Field to be Transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020220" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_US_BRGR" edc:impl="0x7FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CD" edc:desc="Clock Divider" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="FP" edc:desc="Fractional Part" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020224" edc:access="------------------------nnnnnnnn" edc:cname="FLEX_US_RTOR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TO" edc:desc="Timeout Value" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020228" edc:access="------------------------nnnnnnnn" edc:cname="FLEX_US_TTGR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TG" edc:desc="Timeguard Value" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002022C" edc:offset="0x24"/>
      <edc:SFRDef edc:_addr="0x40020250" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:cname="FLEX_US_MAN" edc:impl="0xF30F130F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:desc="Transmitter Preamble Length" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:desc="Transmitter Preamble Pattern" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:desc="Transmitter Manchester Polarity" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:desc="Receiver Preamble Length" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:desc="Receiver Preamble Pattern detected" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:desc="Receiver Manchester Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="Must Be Set to 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:desc="Drift Compensation" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:desc="Receiver Idle Value" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020254" edc:offset="0x3C"/>
      <edc:SFRDef edc:_addr="0x40020290" edc:access="-------nnnnnnnnn-n-n---nnnnnnnnn" edc:cname="FLEX_US_CMPR" edc:impl="0x1FF51FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="VAL1" edc:desc="First Comparison Value for Received Character" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:desc="Compare Parity" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:desc="Second Comparison Value for Received Character" edc:nzwidth="0x9"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020294" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400202A0" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:cname="FLEX_US_FMR" edc:impl="0x3F3F3FB3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmitter Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receiver Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:desc="Receive FIFO Threshold 2" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400202A4" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_US_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400202A8" edc:access="----------------------w-wwwwwwww" edc:cname="FLEX_US_FIER" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400202AC" edc:access="----------------------w-wwwwwwww" edc:cname="FLEX_US_FIDR" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400202B0" edc:access="----------------------r-rrrrrrrr" edc:cname="FLEX_US_FIMR" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400202B4" edc:access="----------------------rrrrrrrrrr" edc:cname="FLEX_US_FESR" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:desc="Transmit FIFO Lock" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400202B8" edc:offset="0x2C"/>
      <edc:SFRDef edc:_addr="0x400202E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="FLEX_US_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bit WPEN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400202E8" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="FLEX_US_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400202EC" edc:offset="0x114"/>
      <edc:SFRDef edc:_addr="0x40020400" edc:access="ww-----w------ww---w----w-----ww" edc:cname="FLEX_SPI_CR" edc:impl="0xC1031083" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:desc="SPI Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:desc="SPI Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="SPI Software Reset" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:desc="Request to Clear the Comparison Trigger" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:desc="Last Transfer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020404" edc:access="nnnnnnnn----nnnn---n----n-nnnnnn" edc:cname="FLEX_SPI_MR" edc:impl="0xFF0F10BF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="MSTR" edc:desc="Master/Slave Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PS" edc:desc="Peripheral Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:desc="Chip Select Decode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:desc="Bit Rate Source Clock" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:desc="Mode Fault Detection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:desc="Wait Data Read Before Transfer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:desc="Local Loopback Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:desc="Peripheral Chip Select" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:desc="Delay Between Chip Selects" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020408" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RD16_0" edc:desc="Receive Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD8_1" edc:desc="Receive Data" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RD16_1" edc:desc="Receive Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD8_3" edc:desc="Receive Data" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002040C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TD0" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:desc="Last Transfer" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020410" edc:access="rrrrrrrr-------r---rrrrr----rrrr" edc:cname="FLEX_SPI_SR" edc:impl="0xFF011F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Status (Slave mode only) (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:desc="Slave Frame Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:desc="SPI Enable Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020414" edc:access="wwwwwwww------------wwww----wwww" edc:cname="FLEX_SPI_IER" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020418" edc:access="wwwwwwww------------wwww----wwww" edc:cname="FLEX_SPI_IDR" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002041C" edc:access="rrrrrrrr------------rrrr----rrrr" edc:cname="FLEX_SPI_IMR" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020420" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x40020430" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020434" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020438" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR2" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002043C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020440" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:cname="FLEX_SPI_FMR" edc:impl="0x3F3F0033" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmit Data Register Empty Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the Transmit FIFO." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the Transmit FIFO. Cannot be used if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receive Data Register Full Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the Receive FIFO." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the Receive FIFO. Cannot be used when FLEX_SPI_MR.MSTR =1, or if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the Receive FIFO. Cannot be used when FLEX_SPI_CSRx.BITS is greater than 0, or if FLEX_SPI_MR.MSTR =1, or if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020444" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_SPI_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020448" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="VAL1" edc:desc="First Comparison Value for Received Character" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:desc="Second Comparison Value for Received Character" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002044C" edc:offset="0x98"/>
      <edc:SFRDef edc:_addr="0x400204E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="FLEX_SPI_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400204E8" edc:access="----------------rrrrrrrr-------r" edc:cname="FLEX_SPI_WPSR" edc:impl="0xFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400204EC" edc:offset="0x114"/>
      <edc:SFRDef edc:_addr="0x40020600" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:cname="FLEX_TWI_CR" edc:impl="0x3703FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="START" edc:desc="Send a START Condition" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:desc="Send a STOP Condition" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:desc="TWI Master Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:desc="TWI Master Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:desc="TWI Slave Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:desc="TWI Slave Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:desc="SMBus Quick Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="Software Reset" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:desc="TWI High-Speed Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:desc="TWI High-Speed Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:desc="SMBus Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:desc="SMBus Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:desc="Packet Error Checking Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:desc="Packet Error Checking Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:desc="PEC Request" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:desc="Bus CLEAR Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:desc="Alternative Command Mode Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:desc="Alternative Command Mode Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:desc="Transmit FIFO Lock CLEAR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020604" edc:access="-------n-nnnnnnn---n--nn--------" edc:cname="FLEX_TWI_MMR" edc:impl="0x17F1300" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:desc="Internal Device Address Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:desc="Master Read Direction" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:desc="Device Address" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:desc="No Auto-Stop On NACK Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020608" edc:access="---------nnnnnnn-nnnnnnnnnnnnn-n" edc:cname="FLEX_TWI_SMR" edc:impl="0x7F7FFD" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:desc="Slave Receiver Data Phase NACK Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:desc="SMBus Default Address" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:desc="SMBus Host Header" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:desc="Slave Address Treated as Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:desc="TWI Bus Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:desc="Clock Wait State Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:desc="Slave Sniffer Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Slave Address Mask" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:desc="Slave Address" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002060C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_TWI_IADR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="IADR" edc:desc="Internal Address" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020610" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_TWI_CWGR" edc:impl="0x3F17FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:desc="Clock Low Divider" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:desc="Clock High Divider" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:desc="Clock Divider" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:desc="Bit Rate Source Clock" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:desc="TWD Hold Time Versus TWCK Falling" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020614" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40020620" edc:access="-----rrrr-rrrrrr----rrrrrrrrrrrr" edc:cname="FLEX_TWI_SR" edc:impl="0x7BF0FFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:desc="Slave Read" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledged (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:desc="Clock Wait State" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:desc="SMBus Alert Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:desc="Transmit FIFO Lock" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:desc="SCL Line Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:desc="SDA Line Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR" edc:desc="Start Repeated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020624" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:cname="FLEX_TWI_IER" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020628" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:cname="FLEX_TWI_IDR" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002062C" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:cname="FLEX_TWI_IMR" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020630" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:desc="Master or Slave Receive Holding Data 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:desc="Master or Slave Receive Holding Data 1" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:desc="Stop State (Slave Sniffer Mode only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:desc="Acknowledge State (Slave Sniffer Mode only)" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:desc="Master or Slave Receive Holding Data 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:desc="Master or Slave Receive Holding Data 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020634" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:desc="Master or Slave Transmit Holding Data 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:desc="Master or Slave Transmit Holding Data 1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:desc="Master or Slave Transmit Holding Data 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:desc="Master or Slave Transmit Holding Data 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020638" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:cname="FLEX_TWI_SMBTR" edc:impl="0xFFFFFF0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="PRESC" edc:desc="SMBus Clock Prescaler" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:desc="Slave Clock Stretch Maximum Cycles" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:desc="Master Clock Stretch Maximum Cycles" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:desc="Clock High Maximum Cycles" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002063C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40020640" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:cname="FLEX_TWI_ACR" edc:impl="0x3FF03FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="DATAL" edc:desc="Data Length" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Transfer Direction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:desc="PEC Request (SMBus Mode only)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:desc="Next Data Length" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:desc="Next Transfer Direction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:desc="Next PEC Request (SMBus Mode only)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020644" edc:access="---------------------nnn------nn" edc:cname="FLEX_TWI_FILTR" edc:impl="0x703" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="FILT" edc:desc="RX Digital Filter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:desc="PAD Filter Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:desc="Digital Filter Threshold" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020648" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40020650" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:cname="FLEX_TWI_FMR" edc:impl="0x3F3F0033" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmitter Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receiver Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020654" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_TWI_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020658" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40020660" edc:access="------------------------rrrrrrrr" edc:cname="FLEX_TWI_FSR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020664" edc:access="------------------------wwwwwwww" edc:cname="FLEX_TWI_FIER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40020668" edc:access="------------------------wwwwwwww" edc:cname="FLEX_TWI_FIDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002066C" edc:access="------------------------rrrrrrrr" edc:cname="FLEX_TWI_FIMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40020670" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0x400206D0" edc:access="----------------------------rrrr" edc:cname="FLEX_TWI_DR" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="SWEN" edc:desc="SleepWalking Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKRQ" edc:desc="Clock Request" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWMATCH" edc:desc="SleepWalking Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP" edc:desc="Transfer Pending" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400206D4" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x400206E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="FLEX_TWI_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400206E8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:cname="FLEX_TWI_WPSR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM0">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protect Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400206EC" edc:offset="0x3914"/>
      <edc:SFRDef edc:_addr="0x40024000" edc:access="------------------------------nn" edc:cname="FLEX_MR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:desc="FLEXCOM Operating Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, ) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024004" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40024010" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="FLEX_RHR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:desc="Receive Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024014" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40024020" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="FLEX_THR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024024" edc:offset="0x1DC"/>
      <edc:SFRDef edc:_addr="0x40024200" edc:access="ww-w-www----ww--w--wwwwwwwwwww--" edc:cname="FLEX_US_CR" edc:impl="0xD70C9FFC" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:desc="Reset Receiver" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:desc="Reset Transmitter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:desc="Receiver Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:desc="Receiver Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:desc="Transmitter Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:desc="Transmitter Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:desc="Reset Status Bits" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:desc="Start Break" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:desc="Stop Break" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:desc="Send Address" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:desc="Start Timeout Immediately" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:desc="Request to Send Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:desc="Request to Send Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:desc="Transmit FIFO Lock CLEAR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:desc="Request to Clear the Comparison Trigger" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024204" edc:access="nnnn-----n--nnn-nnnnnnnnnnnnnnnn" edc:cname="FLEX_US_MR" edc:impl="0xF04EFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:desc="USART Mode of Operation" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RS485" edc:desc="RS485" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HW_HANDSHAKING" edc:desc="Hardware handshaking" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:desc="Clock Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV = 8) is selected" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="PMC generic clock is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="External pin SCK is selected" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:desc="Character Length" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="Character length is 5 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="Character length is 6 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="Character length is 7 bits" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="Character length is 8 bits" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:desc="Synchronous Mode Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:desc="Parity Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:desc="Number of Stop Bits" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:desc="Channel Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:desc="9-bit Character Length" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:desc="Clock Output Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:desc="Oversampling Mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:desc="Receive Line Filter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:desc="Manchester Encoder/Decoder Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:desc="Manchester Synchronization Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:desc="Start Frame Delimiter Selector" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024208" edc:access="-------w-w--w---------wwwww--www" edc:cname="FLEX_US_IER" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002420C" edc:access="-------w-w--w---------wwwww--www" edc:cname="FLEX_US_IDR" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024210" edc:access="-------r-r--r---------rrrrr--rrr" edc:cname="FLEX_US_IMR" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024214" edc:access="-------rrr--r---------rrrrr--rrr" edc:cname="FLEX_US_CSR" edc:impl="0x1C803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Break Received/End of Break" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Receiver Timeout" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Flag" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:desc="Image of CTS Input" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024218" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:desc="Received Sync" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:desc="Received Character" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002421C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:desc="Sync Field to be Transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024220" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_US_BRGR" edc:impl="0x7FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CD" edc:desc="Clock Divider" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="FP" edc:desc="Fractional Part" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024224" edc:access="------------------------nnnnnnnn" edc:cname="FLEX_US_RTOR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TO" edc:desc="Timeout Value" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024228" edc:access="------------------------nnnnnnnn" edc:cname="FLEX_US_TTGR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TG" edc:desc="Timeguard Value" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002422C" edc:offset="0x24"/>
      <edc:SFRDef edc:_addr="0x40024250" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:cname="FLEX_US_MAN" edc:impl="0xF30F130F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:desc="Transmitter Preamble Length" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:desc="Transmitter Preamble Pattern" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:desc="Transmitter Manchester Polarity" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:desc="Receiver Preamble Length" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:desc="Receiver Preamble Pattern detected" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:desc="Receiver Manchester Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="Must Be Set to 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:desc="Drift Compensation" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:desc="Receiver Idle Value" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024254" edc:offset="0x3C"/>
      <edc:SFRDef edc:_addr="0x40024290" edc:access="-------nnnnnnnnn-n-n---nnnnnnnnn" edc:cname="FLEX_US_CMPR" edc:impl="0x1FF51FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="VAL1" edc:desc="First Comparison Value for Received Character" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:desc="Compare Parity" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:desc="Second Comparison Value for Received Character" edc:nzwidth="0x9"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024294" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400242A0" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:cname="FLEX_US_FMR" edc:impl="0x3F3F3FB3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmitter Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receiver Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:desc="Receive FIFO Threshold 2" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400242A4" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_US_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400242A8" edc:access="----------------------w-wwwwwwww" edc:cname="FLEX_US_FIER" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400242AC" edc:access="----------------------w-wwwwwwww" edc:cname="FLEX_US_FIDR" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400242B0" edc:access="----------------------r-rrrrrrrr" edc:cname="FLEX_US_FIMR" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400242B4" edc:access="----------------------rrrrrrrrrr" edc:cname="FLEX_US_FESR" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:desc="Transmit FIFO Lock" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400242B8" edc:offset="0x2C"/>
      <edc:SFRDef edc:_addr="0x400242E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="FLEX_US_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bit WPEN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400242E8" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="FLEX_US_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400242EC" edc:offset="0x114"/>
      <edc:SFRDef edc:_addr="0x40024400" edc:access="ww-----w------ww---w----w-----ww" edc:cname="FLEX_SPI_CR" edc:impl="0xC1031083" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:desc="SPI Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:desc="SPI Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="SPI Software Reset" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:desc="Request to Clear the Comparison Trigger" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:desc="Last Transfer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024404" edc:access="nnnnnnnn----nnnn---n----n-nnnnnn" edc:cname="FLEX_SPI_MR" edc:impl="0xFF0F10BF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="MSTR" edc:desc="Master/Slave Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PS" edc:desc="Peripheral Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:desc="Chip Select Decode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:desc="Bit Rate Source Clock" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:desc="Mode Fault Detection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:desc="Wait Data Read Before Transfer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:desc="Local Loopback Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:desc="Peripheral Chip Select" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:desc="Delay Between Chip Selects" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024408" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RD16_0" edc:desc="Receive Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD8_1" edc:desc="Receive Data" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RD16_1" edc:desc="Receive Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD8_3" edc:desc="Receive Data" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002440C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TD0" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:desc="Last Transfer" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024410" edc:access="rrrrrrrr-------r---rrrrr----rrrr" edc:cname="FLEX_SPI_SR" edc:impl="0xFF011F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Status (Slave mode only) (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:desc="Slave Frame Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:desc="SPI Enable Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024414" edc:access="wwwwwwww------------wwww----wwww" edc:cname="FLEX_SPI_IER" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024418" edc:access="wwwwwwww------------wwww----wwww" edc:cname="FLEX_SPI_IDR" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002441C" edc:access="rrrrrrrr------------rrrr----rrrr" edc:cname="FLEX_SPI_IMR" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024420" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x40024430" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024434" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024438" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR2" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002443C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024440" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:cname="FLEX_SPI_FMR" edc:impl="0x3F3F0033" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmit Data Register Empty Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the Transmit FIFO." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the Transmit FIFO. Cannot be used if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receive Data Register Full Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the Receive FIFO." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the Receive FIFO. Cannot be used when FLEX_SPI_MR.MSTR =1, or if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the Receive FIFO. Cannot be used when FLEX_SPI_CSRx.BITS is greater than 0, or if FLEX_SPI_MR.MSTR =1, or if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024444" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_SPI_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024448" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="VAL1" edc:desc="First Comparison Value for Received Character" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:desc="Second Comparison Value for Received Character" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002444C" edc:offset="0x98"/>
      <edc:SFRDef edc:_addr="0x400244E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="FLEX_SPI_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400244E8" edc:access="----------------rrrrrrrr-------r" edc:cname="FLEX_SPI_WPSR" edc:impl="0xFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400244EC" edc:offset="0x114"/>
      <edc:SFRDef edc:_addr="0x40024600" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:cname="FLEX_TWI_CR" edc:impl="0x3703FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="START" edc:desc="Send a START Condition" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:desc="Send a STOP Condition" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:desc="TWI Master Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:desc="TWI Master Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:desc="TWI Slave Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:desc="TWI Slave Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:desc="SMBus Quick Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="Software Reset" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:desc="TWI High-Speed Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:desc="TWI High-Speed Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:desc="SMBus Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:desc="SMBus Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:desc="Packet Error Checking Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:desc="Packet Error Checking Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:desc="PEC Request" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:desc="Bus CLEAR Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:desc="Alternative Command Mode Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:desc="Alternative Command Mode Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:desc="Transmit FIFO Lock CLEAR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024604" edc:access="-------n-nnnnnnn---n--nn--------" edc:cname="FLEX_TWI_MMR" edc:impl="0x17F1300" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:desc="Internal Device Address Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:desc="Master Read Direction" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:desc="Device Address" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:desc="No Auto-Stop On NACK Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024608" edc:access="---------nnnnnnn-nnnnnnnnnnnnn-n" edc:cname="FLEX_TWI_SMR" edc:impl="0x7F7FFD" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:desc="Slave Receiver Data Phase NACK Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:desc="SMBus Default Address" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:desc="SMBus Host Header" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:desc="Slave Address Treated as Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:desc="TWI Bus Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:desc="Clock Wait State Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:desc="Slave Sniffer Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Slave Address Mask" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:desc="Slave Address" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002460C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_TWI_IADR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="IADR" edc:desc="Internal Address" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024610" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_TWI_CWGR" edc:impl="0x3F17FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:desc="Clock Low Divider" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:desc="Clock High Divider" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:desc="Clock Divider" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:desc="Bit Rate Source Clock" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:desc="TWD Hold Time Versus TWCK Falling" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024614" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40024620" edc:access="-----rrrr-rrrrrr----rrrrrrrrrrrr" edc:cname="FLEX_TWI_SR" edc:impl="0x7BF0FFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:desc="Slave Read" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledged (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:desc="Clock Wait State" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:desc="SMBus Alert Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:desc="Transmit FIFO Lock" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:desc="SCL Line Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:desc="SDA Line Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR" edc:desc="Start Repeated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024624" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:cname="FLEX_TWI_IER" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024628" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:cname="FLEX_TWI_IDR" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002462C" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:cname="FLEX_TWI_IMR" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024630" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:desc="Master or Slave Receive Holding Data 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:desc="Master or Slave Receive Holding Data 1" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:desc="Stop State (Slave Sniffer Mode only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:desc="Acknowledge State (Slave Sniffer Mode only)" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:desc="Master or Slave Receive Holding Data 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:desc="Master or Slave Receive Holding Data 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024634" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:desc="Master or Slave Transmit Holding Data 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:desc="Master or Slave Transmit Holding Data 1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:desc="Master or Slave Transmit Holding Data 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:desc="Master or Slave Transmit Holding Data 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024638" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:cname="FLEX_TWI_SMBTR" edc:impl="0xFFFFFF0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="PRESC" edc:desc="SMBus Clock Prescaler" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:desc="Slave Clock Stretch Maximum Cycles" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:desc="Master Clock Stretch Maximum Cycles" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:desc="Clock High Maximum Cycles" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002463C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40024640" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:cname="FLEX_TWI_ACR" edc:impl="0x3FF03FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="DATAL" edc:desc="Data Length" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Transfer Direction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:desc="PEC Request (SMBus Mode only)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:desc="Next Data Length" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:desc="Next Transfer Direction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:desc="Next PEC Request (SMBus Mode only)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024644" edc:access="---------------------nnn------nn" edc:cname="FLEX_TWI_FILTR" edc:impl="0x703" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="FILT" edc:desc="RX Digital Filter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:desc="PAD Filter Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:desc="Digital Filter Threshold" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024648" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40024650" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:cname="FLEX_TWI_FMR" edc:impl="0x3F3F0033" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmitter Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receiver Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024654" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_TWI_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024658" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40024660" edc:access="------------------------rrrrrrrr" edc:cname="FLEX_TWI_FSR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024664" edc:access="------------------------wwwwwwww" edc:cname="FLEX_TWI_FIER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40024668" edc:access="------------------------wwwwwwww" edc:cname="FLEX_TWI_FIDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002466C" edc:access="------------------------rrrrrrrr" edc:cname="FLEX_TWI_FIMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40024670" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0x400246D0" edc:access="----------------------------rrrr" edc:cname="FLEX_TWI_DR" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="SWEN" edc:desc="SleepWalking Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKRQ" edc:desc="Clock Request" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWMATCH" edc:desc="SleepWalking Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP" edc:desc="Transfer Pending" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400246D4" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x400246E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="FLEX_TWI_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400246E8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:cname="FLEX_TWI_WPSR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM1">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protect Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400246EC" edc:offset="0x3914"/>
      <edc:SFRDef edc:_addr="0x40028000" edc:access="------------------------------nn" edc:cname="FLEX_MR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:desc="FLEXCOM Operating Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, ) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028004" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40028010" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="FLEX_RHR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:desc="Receive Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028014" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40028020" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="FLEX_THR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028024" edc:offset="0x1DC"/>
      <edc:SFRDef edc:_addr="0x40028200" edc:access="ww-w-www----ww--w--wwwwwwwwwww--" edc:cname="FLEX_US_CR" edc:impl="0xD70C9FFC" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:desc="Reset Receiver" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:desc="Reset Transmitter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:desc="Receiver Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:desc="Receiver Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:desc="Transmitter Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:desc="Transmitter Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:desc="Reset Status Bits" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:desc="Start Break" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:desc="Stop Break" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:desc="Send Address" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:desc="Start Timeout Immediately" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:desc="Request to Send Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:desc="Request to Send Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:desc="Transmit FIFO Lock CLEAR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:desc="Request to Clear the Comparison Trigger" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028204" edc:access="nnnn-----n--nnn-nnnnnnnnnnnnnnnn" edc:cname="FLEX_US_MR" edc:impl="0xF04EFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:desc="USART Mode of Operation" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RS485" edc:desc="RS485" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HW_HANDSHAKING" edc:desc="Hardware handshaking" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:desc="Clock Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV = 8) is selected" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="PMC generic clock is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="External pin SCK is selected" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:desc="Character Length" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="Character length is 5 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="Character length is 6 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="Character length is 7 bits" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="Character length is 8 bits" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:desc="Synchronous Mode Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:desc="Parity Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:desc="Number of Stop Bits" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:desc="Channel Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:desc="9-bit Character Length" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:desc="Clock Output Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:desc="Oversampling Mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:desc="Receive Line Filter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:desc="Manchester Encoder/Decoder Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:desc="Manchester Synchronization Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:desc="Start Frame Delimiter Selector" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028208" edc:access="-------w-w--w---------wwwww--www" edc:cname="FLEX_US_IER" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002820C" edc:access="-------w-w--w---------wwwww--www" edc:cname="FLEX_US_IDR" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028210" edc:access="-------r-r--r---------rrrrr--rrr" edc:cname="FLEX_US_IMR" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028214" edc:access="-------rrr--r---------rrrrr--rrr" edc:cname="FLEX_US_CSR" edc:impl="0x1C803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Break Received/End of Break" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Receiver Timeout" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Flag" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:desc="Image of CTS Input" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028218" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:desc="Received Sync" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:desc="Received Character" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002821C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:desc="Sync Field to be Transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028220" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_US_BRGR" edc:impl="0x7FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CD" edc:desc="Clock Divider" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="FP" edc:desc="Fractional Part" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028224" edc:access="------------------------nnnnnnnn" edc:cname="FLEX_US_RTOR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TO" edc:desc="Timeout Value" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028228" edc:access="------------------------nnnnnnnn" edc:cname="FLEX_US_TTGR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TG" edc:desc="Timeguard Value" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002822C" edc:offset="0x24"/>
      <edc:SFRDef edc:_addr="0x40028250" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:cname="FLEX_US_MAN" edc:impl="0xF30F130F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:desc="Transmitter Preamble Length" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:desc="Transmitter Preamble Pattern" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:desc="Transmitter Manchester Polarity" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:desc="Receiver Preamble Length" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:desc="Receiver Preamble Pattern detected" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:desc="Receiver Manchester Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="Must Be Set to 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:desc="Drift Compensation" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:desc="Receiver Idle Value" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028254" edc:offset="0x3C"/>
      <edc:SFRDef edc:_addr="0x40028290" edc:access="-------nnnnnnnnn-n-n---nnnnnnnnn" edc:cname="FLEX_US_CMPR" edc:impl="0x1FF51FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="VAL1" edc:desc="First Comparison Value for Received Character" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:desc="Compare Parity" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:desc="Second Comparison Value for Received Character" edc:nzwidth="0x9"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028294" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400282A0" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:cname="FLEX_US_FMR" edc:impl="0x3F3F3FB3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmitter Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receiver Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:desc="Receive FIFO Threshold 2" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400282A4" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_US_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400282A8" edc:access="----------------------w-wwwwwwww" edc:cname="FLEX_US_FIER" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400282AC" edc:access="----------------------w-wwwwwwww" edc:cname="FLEX_US_FIDR" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400282B0" edc:access="----------------------r-rrrrrrrr" edc:cname="FLEX_US_FIMR" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400282B4" edc:access="----------------------rrrrrrrrrr" edc:cname="FLEX_US_FESR" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:desc="Transmit FIFO Lock" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400282B8" edc:offset="0x2C"/>
      <edc:SFRDef edc:_addr="0x400282E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="FLEX_US_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bit WPEN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400282E8" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="FLEX_US_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400282EC" edc:offset="0x114"/>
      <edc:SFRDef edc:_addr="0x40028400" edc:access="ww-----w------ww---w----w-----ww" edc:cname="FLEX_SPI_CR" edc:impl="0xC1031083" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:desc="SPI Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:desc="SPI Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="SPI Software Reset" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:desc="Request to Clear the Comparison Trigger" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:desc="Last Transfer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028404" edc:access="nnnnnnnn----nnnn---n----n-nnnnnn" edc:cname="FLEX_SPI_MR" edc:impl="0xFF0F10BF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="MSTR" edc:desc="Master/Slave Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PS" edc:desc="Peripheral Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:desc="Chip Select Decode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:desc="Bit Rate Source Clock" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:desc="Mode Fault Detection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:desc="Wait Data Read Before Transfer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:desc="Local Loopback Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:desc="Peripheral Chip Select" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:desc="Delay Between Chip Selects" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028408" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RD16_0" edc:desc="Receive Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD8_1" edc:desc="Receive Data" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RD16_1" edc:desc="Receive Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD8_3" edc:desc="Receive Data" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002840C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TD0" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:desc="Last Transfer" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028410" edc:access="rrrrrrrr-------r---rrrrr----rrrr" edc:cname="FLEX_SPI_SR" edc:impl="0xFF011F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Status (Slave mode only) (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:desc="Slave Frame Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:desc="SPI Enable Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028414" edc:access="wwwwwwww------------wwww----wwww" edc:cname="FLEX_SPI_IER" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028418" edc:access="wwwwwwww------------wwww----wwww" edc:cname="FLEX_SPI_IDR" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002841C" edc:access="rrrrrrrr------------rrrr----rrrr" edc:cname="FLEX_SPI_IMR" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028420" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x40028430" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028434" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028438" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR2" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002843C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028440" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:cname="FLEX_SPI_FMR" edc:impl="0x3F3F0033" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmit Data Register Empty Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the Transmit FIFO." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the Transmit FIFO. Cannot be used if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receive Data Register Full Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the Receive FIFO." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the Receive FIFO. Cannot be used when FLEX_SPI_MR.MSTR =1, or if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the Receive FIFO. Cannot be used when FLEX_SPI_CSRx.BITS is greater than 0, or if FLEX_SPI_MR.MSTR =1, or if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028444" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_SPI_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028448" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="VAL1" edc:desc="First Comparison Value for Received Character" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:desc="Second Comparison Value for Received Character" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002844C" edc:offset="0x98"/>
      <edc:SFRDef edc:_addr="0x400284E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="FLEX_SPI_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400284E8" edc:access="----------------rrrrrrrr-------r" edc:cname="FLEX_SPI_WPSR" edc:impl="0xFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400284EC" edc:offset="0x114"/>
      <edc:SFRDef edc:_addr="0x40028600" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:cname="FLEX_TWI_CR" edc:impl="0x3703FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="START" edc:desc="Send a START Condition" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:desc="Send a STOP Condition" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:desc="TWI Master Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:desc="TWI Master Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:desc="TWI Slave Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:desc="TWI Slave Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:desc="SMBus Quick Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="Software Reset" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:desc="TWI High-Speed Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:desc="TWI High-Speed Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:desc="SMBus Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:desc="SMBus Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:desc="Packet Error Checking Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:desc="Packet Error Checking Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:desc="PEC Request" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:desc="Bus CLEAR Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:desc="Alternative Command Mode Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:desc="Alternative Command Mode Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:desc="Transmit FIFO Lock CLEAR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028604" edc:access="-------n-nnnnnnn---n--nn--------" edc:cname="FLEX_TWI_MMR" edc:impl="0x17F1300" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:desc="Internal Device Address Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:desc="Master Read Direction" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:desc="Device Address" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:desc="No Auto-Stop On NACK Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028608" edc:access="---------nnnnnnn-nnnnnnnnnnnnn-n" edc:cname="FLEX_TWI_SMR" edc:impl="0x7F7FFD" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:desc="Slave Receiver Data Phase NACK Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:desc="SMBus Default Address" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:desc="SMBus Host Header" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:desc="Slave Address Treated as Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:desc="TWI Bus Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:desc="Clock Wait State Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:desc="Slave Sniffer Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Slave Address Mask" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:desc="Slave Address" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002860C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_TWI_IADR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="IADR" edc:desc="Internal Address" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028610" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_TWI_CWGR" edc:impl="0x3F17FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:desc="Clock Low Divider" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:desc="Clock High Divider" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:desc="Clock Divider" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:desc="Bit Rate Source Clock" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:desc="TWD Hold Time Versus TWCK Falling" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028614" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40028620" edc:access="-----rrrr-rrrrrr----rrrrrrrrrrrr" edc:cname="FLEX_TWI_SR" edc:impl="0x7BF0FFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:desc="Slave Read" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledged (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:desc="Clock Wait State" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:desc="SMBus Alert Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:desc="Transmit FIFO Lock" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:desc="SCL Line Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:desc="SDA Line Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR" edc:desc="Start Repeated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028624" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:cname="FLEX_TWI_IER" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028628" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:cname="FLEX_TWI_IDR" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002862C" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:cname="FLEX_TWI_IMR" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028630" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:desc="Master or Slave Receive Holding Data 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:desc="Master or Slave Receive Holding Data 1" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:desc="Stop State (Slave Sniffer Mode only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:desc="Acknowledge State (Slave Sniffer Mode only)" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:desc="Master or Slave Receive Holding Data 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:desc="Master or Slave Receive Holding Data 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028634" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:desc="Master or Slave Transmit Holding Data 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:desc="Master or Slave Transmit Holding Data 1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:desc="Master or Slave Transmit Holding Data 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:desc="Master or Slave Transmit Holding Data 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028638" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:cname="FLEX_TWI_SMBTR" edc:impl="0xFFFFFF0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="PRESC" edc:desc="SMBus Clock Prescaler" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:desc="Slave Clock Stretch Maximum Cycles" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:desc="Master Clock Stretch Maximum Cycles" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:desc="Clock High Maximum Cycles" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002863C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40028640" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:cname="FLEX_TWI_ACR" edc:impl="0x3FF03FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="DATAL" edc:desc="Data Length" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Transfer Direction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:desc="PEC Request (SMBus Mode only)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:desc="Next Data Length" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:desc="Next Transfer Direction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:desc="Next PEC Request (SMBus Mode only)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028644" edc:access="---------------------nnn------nn" edc:cname="FLEX_TWI_FILTR" edc:impl="0x703" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="FILT" edc:desc="RX Digital Filter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:desc="PAD Filter Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:desc="Digital Filter Threshold" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028648" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40028650" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:cname="FLEX_TWI_FMR" edc:impl="0x3F3F0033" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmitter Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receiver Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028654" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_TWI_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028658" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40028660" edc:access="------------------------rrrrrrrr" edc:cname="FLEX_TWI_FSR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028664" edc:access="------------------------wwwwwwww" edc:cname="FLEX_TWI_FIER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40028668" edc:access="------------------------wwwwwwww" edc:cname="FLEX_TWI_FIDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002866C" edc:access="------------------------rrrrrrrr" edc:cname="FLEX_TWI_FIMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40028670" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0x400286D0" edc:access="----------------------------rrrr" edc:cname="FLEX_TWI_DR" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="SWEN" edc:desc="SleepWalking Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKRQ" edc:desc="Clock Request" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWMATCH" edc:desc="SleepWalking Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP" edc:desc="Transfer Pending" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400286D4" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x400286E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="FLEX_TWI_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400286E8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:cname="FLEX_TWI_WPSR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM2">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protect Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400286EC" edc:offset="0x3914"/>
      <edc:SFRDef edc:_addr="0x4002C000" edc:access="------------------------------nn" edc:cname="FLEX_MR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="OPMODE" edc:desc="FLEXCOM Operating Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NO_COM" edc:desc="No communication" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART" edc:desc="All UART related protocols are selected (RS232, RS485, ) SPI/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SPI" edc:desc="SPI operating mode is selected. USART/TWI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TWI" edc:desc="All TWI related protocols are selected (TWI, SMBus). USART/SPI related registers are not accessible and have no impact on IOs." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C004" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4002C010" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="FLEX_RHR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXDATA" edc:desc="Receive Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C014" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4002C020" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="FLEX_THR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXDATA" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C024" edc:offset="0x1DC"/>
      <edc:SFRDef edc:_addr="0x4002C200" edc:access="ww-w-www----ww--w--wwwwwwwwwww--" edc:cname="FLEX_US_CR" edc:impl="0xD70C9FFC" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RSTRX" edc:desc="Reset Receiver" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RSTTX" edc:desc="Reset Transmitter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:desc="Receiver Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXDIS" edc:desc="Receiver Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:desc="Transmitter Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXDIS" edc:desc="Transmitter Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RSTSTA" edc:desc="Reset Status Bits" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STTBRK" edc:desc="Start Break" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STPBRK" edc:desc="Stop Break" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STTTO" edc:desc="Clear TIMEOUT Flag and Start Timeout After Next Character Received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SENDA" edc:desc="Send Address" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RETTO" edc:desc="Start Timeout Immediately" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RTSEN" edc:desc="Request to Send Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTSDIS" edc:desc="Request to Send Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:desc="Transmit FIFO Lock CLEAR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:desc="Request to Clear the Comparison Trigger" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C204" edc:access="nnnn-----n--nnn-nnnnnnnnnnnnnnnn" edc:cname="FLEX_US_MR" edc:impl="0xF04EFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="USART_MODE" edc:desc="USART Mode of Operation" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RS485" edc:desc="RS485" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HW_HANDSHAKING" edc:desc="Hardware handshaking" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USCLKS" edc:desc="Clock Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock is selected" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV" edc:desc="Peripheral clock divided (DIV = 8) is selected" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="PMC generic clock is selected. If the SCK pin is driven (CLKO = 1), the CD field must be greater than 1." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SCK" edc:desc="External pin SCK is selected" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHRL" edc:desc="Character Length" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="Character length is 5 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="Character length is 6 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="Character length is 7 bits" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="Character length is 8 bits" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYNC" edc:desc="Synchronous Mode Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PAR" edc:desc="Parity Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even parity" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd parity" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SPACE" edc:desc="Parity forced to 0 (Space)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MARK" edc:desc="Parity forced to 1 (Mark)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No parity" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MULTIDROP" edc:desc="Multidrop mode" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NBSTOP" edc:desc="Number of Stop Bits" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_5_BIT" edc:desc="1.5 stop bit (SYNC = 0) or reserved (SYNC = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHMODE" edc:desc="Channel Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AUTOMATIC" edc:desc="Automatic Echo. Receiver input is connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LOCAL_LOOPBACK" edc:desc="Local Loopback. Transmitter output is connected to the Receiver Input." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="REMOTE_LOOPBACK" edc:desc="Remote Loopback. RXD pin is internally connected to the TXD pin." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MODE9" edc:desc="9-bit Character Length" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKO" edc:desc="Clock Output Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVER" edc:desc="Oversampling Mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="VAR_SYNC" edc:desc="Variable Synchronization of Command/Data Sync Start Frame Delimiter" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:desc="Receive Line Filter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MAN" edc:desc="Manchester Encoder/Decoder Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODSYNC" edc:desc="Manchester Synchronization Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONEBIT" edc:desc="Start Frame Delimiter Selector" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C208" edc:access="-------w-w--w---------wwwww--www" edc:cname="FLEX_US_IER" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C20C" edc:access="-------w-w--w---------wwwww--www" edc:cname="FLEX_US_IDR" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C210" edc:access="-------r-r--r---------rrrrr--rrr" edc:cname="FLEX_US_IMR" edc:impl="0x14803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="RXRDY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="TXRDY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Receiver Break Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Timeout Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TXEMPTY Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C214" edc:access="-------rrr--r---------rrrrr--rrr" edc:cname="FLEX_US_CSR" edc:impl="0x1C803E7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receiver Ready (cleared by reading FLEX_US_RHR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmitter Ready (cleared by writing FLEX_US_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:desc="Break Received/End of Break" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FRAME" edc:desc="Framing Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARE" edc:desc="Parity Error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Receiver Timeout" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmitter Empty (cleared by writing FLEX_US_THR)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:desc="Clear to Send Input Change Flag" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:desc="Image of CTS Input" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MANE" edc:desc="Manchester Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C218" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_US_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXCHR0" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXCHR1" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="RXSYNH" edc:desc="Received Sync" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXCHR2" edc:desc="Received Character" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXCHR3" edc:desc="Received Character" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C21C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_US_THR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCHR0" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXCHR1" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="TXSYNH" edc:desc="Sync Field to be Transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXCHR2" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXCHR3" edc:desc="Character to be Transmitted" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C220" edc:access="-------------nnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_US_BRGR" edc:impl="0x7FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CD" edc:desc="Clock Divider" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="FP" edc:desc="Fractional Part" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C224" edc:access="------------------------nnnnnnnn" edc:cname="FLEX_US_RTOR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TO" edc:desc="Timeout Value" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C228" edc:access="------------------------nnnnnnnn" edc:cname="FLEX_US_TTGR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TG" edc:desc="Timeguard Value" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C22C" edc:offset="0x24"/>
      <edc:SFRDef edc:_addr="0x4002C250" edc:access="nnnn--nn----nnnn---n--nn----nnnn" edc:cname="FLEX_US_MAN" edc:impl="0xF30F130F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TX_PL" edc:desc="Transmitter Preamble Length" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TX_PP" edc:desc="Transmitter Preamble Pattern" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TX_MPOL" edc:desc="Transmitter Manchester Polarity" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RX_PL" edc:desc="Receiver Preamble Length" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RX_PP" edc:desc="Receiver Preamble Pattern detected" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALL_ONE" edc:desc="The preamble is composed of '1's" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ALL_ZERO" edc:desc="The preamble is composed of '0's" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ZERO_ONE" edc:desc="The preamble is composed of '01's" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ONE_ZERO" edc:desc="The preamble is composed of '10's" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RX_MPOL" edc:desc="Receiver Manchester Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="Must Be Set to 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRIFT" edc:desc="Drift Compensation" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXIDLEV" edc:desc="Receiver Idle Value" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C254" edc:offset="0x3C"/>
      <edc:SFRDef edc:_addr="0x4002C290" edc:access="-------nnnnnnnnn-n-n---nnnnnnnnn" edc:cname="FLEX_US_CMPR" edc:impl="0x1FF51FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="VAL1" edc:desc="First Comparison Value for Received Character" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPPAR" edc:desc="Compare Parity" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:desc="Second Comparison Value for Received Character" edc:nzwidth="0x9"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C294" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4002C2A0" edc:access="--nnnnnn--nnnnnn--nnnnnnn-nn--nn" edc:cname="FLEX_US_FMR" edc:impl="0x3F3F3FB3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmitter Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receiver Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FRTSC" edc:desc="FIFO RTS Pin Control enable (Hardware Handshaking mode only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES2" edc:desc="Receive FIFO Threshold 2" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C2A4" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_US_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C2A8" edc:access="----------------------w-wwwwwwww" edc:cname="FLEX_US_FIER" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C2AC" edc:access="----------------------w-wwwwwwww" edc:cname="FLEX_US_FIDR" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C2B0" edc:access="----------------------r-rrrrrrrr" edc:cname="FLEX_US_FIMR" edc:impl="0x2FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="RXFTHF2 Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C2B4" edc:access="----------------------rrrrrrrrrr" edc:cname="FLEX_US_FESR" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:desc="Transmit FIFO Lock" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF2" edc:desc="Receive FIFO Threshold Flag 2 (cleared by writing the FLEX_US_CR.RSTSTA bit)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C2B8" edc:offset="0x2C"/>
      <edc:SFRDef edc:_addr="0x4002C2E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="FLEX_US_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bit WPEN. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x555341"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C2E8" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="FLEX_US_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C2EC" edc:offset="0x114"/>
      <edc:SFRDef edc:_addr="0x4002C400" edc:access="ww-----w------ww---w----w-----ww" edc:cname="FLEX_SPI_CR" edc:impl="0xC1031083" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="SPIEN" edc:desc="SPI Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPIDIS" edc:desc="SPI Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="SPI Software Reset" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="REQCLR" edc:desc="Request to Clear the Comparison Trigger" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:desc="Last Transfer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C404" edc:access="nnnnnnnn----nnnn---n----n-nnnnnn" edc:cname="FLEX_SPI_MR" edc:impl="0xFF0F10BF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="MSTR" edc:desc="Master/Slave Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PS" edc:desc="Peripheral Select" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PCSDEC" edc:desc="Chip Select Decode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:desc="Bit Rate Source Clock" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MODFDIS" edc:desc="Mode Fault Detection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDRBT" edc:desc="Wait Data Read Before Transfer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LLB" edc:desc="Local Loopback Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any character is received and comparison function drives CMP flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison condition must be met to start reception of all incoming characters until REQCLR is set." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PCS" edc:desc="Peripheral Chip Select" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DLYBCS" edc:desc="Delay Between Chip Selects" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C408" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_SPI_RDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RD16_0" edc:desc="Receive Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD8_1" edc:desc="Receive Data" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RD16_1" edc:desc="Receive Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="RD8_3" edc:desc="Receive Data" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C40C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_SPI_TDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TD0" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="TD1" edc:desc="Transmit Data" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="-8"/>
            <edc:SFRFieldDef edc:cname="LASTXFER" edc:desc="Last Transfer" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C410" edc:access="rrrrrrrr-------r---rrrrr----rrrr" edc:cname="FLEX_SPI_SR" edc:impl="0xFF011F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full (cleared by reading FLEX_SPI_RDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="Transmit Data Register Empty (cleared by writing FLEX_SPI_TDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty (cleared by writing FLEX_SPI_TDR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Status (Slave mode only) (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SFERR" edc:desc="Slave Frame Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SPIENS" edc:desc="SPI Enable Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C414" edc:access="wwwwwwww------------wwww----wwww" edc:cname="FLEX_SPI_IER" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C418" edc:access="wwwwwwww------------wwww----wwww" edc:cname="FLEX_SPI_IDR" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C41C" edc:access="rrrrrrrr------------rrrr----rrrr" edc:cname="FLEX_SPI_IMR" edc:impl="0xFF000F0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RDRF" edc:desc="Receive Data Register Full Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDRE" edc:desc="SPI Transmit Data Register Empty Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MODF" edc:desc="Mode Fault Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRES" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="NSSR" edc:desc="NSS Rising Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="Transmission Registers Empty Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNDES" edc:desc="Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMP" edc:desc="Comparison Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C420" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x4002C430" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR0" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C434" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR1" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C438" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR2" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C43C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CSR3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NCPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSNAAT" edc:desc="Chip Select Not Active After Transfer (Ignored if CSAAT = 1)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSAAT" edc:desc="Chip Select Active After Transfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BITS" edc:desc="Bits Per Transfer" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits for transfer" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits for transfer" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10_BIT" edc:desc="10 bits for transfer" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="11_BIT" edc:desc="11 bits for transfer" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="12_BIT" edc:desc="12 bits for transfer" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13 bits for transfer" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14 bits for transfer" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15 bits for transfer" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16 bits for transfer" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SCBR" edc:desc="Serial Clock Bit Rate" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBS" edc:desc="Delay Before SPCK" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DLYBCT" edc:desc="Delay Between Consecutive Transfers" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C440" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:cname="FLEX_SPI_FMR" edc:impl="0x3F3F0033" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmit Data Register Empty Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TDRE will be at level '1' when at least one data can be written in the Transmit FIFO." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TDRE will be at level '1' when at least two data can be written in the Transmit FIFO. Cannot be used if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receive Data Register Full Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RDRF will be at level '1' when at least one unread data is in the Receive FIFO." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RDRF will be at level '1' when at least two unread data are in the Receive FIFO. Cannot be used when FLEX_SPI_MR.MSTR =1, or if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RDRF will be at level '1' when at least four unread data are in the Receive FIFO. Cannot be used when FLEX_SPI_CSRx.BITS is greater than 0, or if FLEX_SPI_MR.MSTR =1, or if FLEX_SPI_MR.PS =1." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C444" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_SPI_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C448" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_SPI_CMPR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="VAL1" edc:desc="First Comparison Value for Received Character" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="VAL2" edc:desc="Second Comparison Value for Received Character" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C44C" edc:offset="0x98"/>
      <edc:SFRDef edc:_addr="0x4002C4E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="FLEX_SPI_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x535049"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C4E8" edc:access="----------------rrrrrrrr-------r" edc:cname="FLEX_SPI_WPSR" edc:impl="0xFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C4EC" edc:offset="0x114"/>
      <edc:SFRDef edc:_addr="0x4002C600" edc:access="--ww-www------wwwwwwwwwwwwwwwwww" edc:cname="FLEX_TWI_CR" edc:impl="0x3703FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="START" edc:desc="Send a START Condition" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:desc="Send a STOP Condition" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MSEN" edc:desc="TWI Master Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MSDIS" edc:desc="TWI Master Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVEN" edc:desc="TWI Slave Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVDIS" edc:desc="TWI Slave Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QUICK" edc:desc="SMBus Quick Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="Software Reset" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HSEN" edc:desc="TWI High-Speed Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HSDIS" edc:desc="TWI High-Speed Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBEN" edc:desc="SMBus Mode Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDIS" edc:desc="SMBus Mode Disabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECEN" edc:desc="Packet Error Checking Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECDIS" edc:desc="Packet Error Checking Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECRQ" edc:desc="PEC Request" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:desc="Bus CLEAR Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMEN" edc:desc="Alternative Command Mode Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACMDIS" edc:desc="Alternative Command Mode Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TXFCLR" edc:desc="Transmit FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFCLR" edc:desc="Receive FIFO Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLCLR" edc:desc="Transmit FIFO Lock CLEAR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFOEN" edc:desc="FIFO Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIFODIS" edc:desc="FIFO Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C604" edc:access="-------n-nnnnnnn---n--nn--------" edc:cname="FLEX_TWI_MMR" edc:impl="0x17F1300" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IADRSZ" edc:desc="Internal Device Address Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No internal device address" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="1_BYTE" edc:desc="One-byte internal device address" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="2_BYTE" edc:desc="Two-byte internal device address" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="3_BYTE" edc:desc="Three-byte internal device address" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MREAD" edc:desc="Master Read Direction" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DADR" edc:desc="Device Address" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NOAP" edc:desc="No Auto-Stop On NACK Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C608" edc:access="---------nnnnnnn-nnnnnnnnnnnnn-n" edc:cname="FLEX_TWI_SMR" edc:impl="0x7F7FFD" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="NACKEN" edc:desc="Slave Receiver Data Phase NACK Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SMDA" edc:desc="SMBus Default Address" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMHH" edc:desc="SMBus Host Header" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SADAT" edc:desc="Slave Address Treated as Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BSEL" edc:desc="TWI Bus Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLWSDIS" edc:desc="Clock Wait State Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SNIFF" edc:desc="Slave Sniffer Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Slave Address Mask" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SADR" edc:desc="Slave Address" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C60C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_TWI_IADR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="IADR" edc:desc="Internal Address" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C610" edc:access="--nnnnnn---n-nnnnnnnnnnnnnnnnnnn" edc:cname="FLEX_TWI_CWGR" edc:impl="0x3F17FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="CLDIV" edc:desc="Clock Low Divider" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CHDIV" edc:desc="Clock High Divider" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CKDIV" edc:desc="Clock Divider" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BRSRCCLK" edc:desc="Bit Rate Source Clock" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PERIPH_CLK" edc:desc="The peripheral clock is the source clock for the bit rate generation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK is the source clock for the bit rate generation, thus the bit rate can be independent of the core/peripheral clock." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="HOLD" edc:desc="TWD Hold Time Versus TWCK Falling" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C614" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4002C620" edc:access="-----rrrr-rrrrrr----rrrrrrrrrrrr" edc:cname="FLEX_TWI_SR" edc:impl="0x7BF0FFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed (cleared by writing FLEX_TWI_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready (cleared when reading FLEX_TWI_RHR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready (cleared by writing FLEX_TWI_THR)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVREAD" edc:desc="Slave Read" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledged (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLWS" edc:desc="Clock Wait State" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBAF" edc:desc="SMBus Alert Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFLOCK" edc:desc="Transmit FIFO Lock" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL" edc:desc="SCL Line Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SDA" edc:desc="SDA Line Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SR" edc:desc="Start Repeated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C624" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:cname="FLEX_TWI_IER" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C628" edc:access="----------wwww-wwwwwwwwwwwww-www" edc:cname="FLEX_TWI_IDR" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C62C" edc:access="----------rrrr-rrrrrrrrrrrrr-rrr" edc:cname="FLEX_TWI_IMR" edc:impl="0x3DFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXCOMP" edc:desc="Transmission Completed Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXRDY" edc:desc="Receive Holding Register Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXRDY" edc:desc="Transmit Holding Register Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SVACC" edc:desc="Slave Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GACC" edc:desc="General Call Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE" edc:desc="Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NACK" edc:desc="Not Acknowledge Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARBLST" edc:desc="Arbitration Lost Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SCL_WS" edc:desc="Clock Wait State Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOSACC" edc:desc="End Of Slave Access Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDRX" edc:desc="End of Receive Buffer Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENDTX" edc:desc="End of Transmit Buffer Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXBUFF" edc:desc="Receive Buffer Full Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXBUFE" edc:desc="Transmit Buffer Empty Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MCACK" edc:desc="Master Code Acknowledge Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TOUT" edc:desc="Timeout Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PECERR" edc:desc="PEC Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBDAM" edc:desc="SMBus Default Address Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SMBHHM" edc:desc="SMBus Host Header Address Match Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C630" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEX_TWI_RHR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="RXDATA0" edc:desc="Master or Slave Receive Holding Data 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXDATA1" edc:desc="Master or Slave Receive Holding Data 1" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="-6"/>
            <edc:SFRFieldDef edc:cname="PSTATE" edc:desc="Stop State (Slave Sniffer Mode only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ASTATE" edc:desc="Acknowledge State (Slave Sniffer Mode only)" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Acknowledge or Nacknowledge detected after previously logged data" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Acknowledge (A) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Nacknowledge (NA) detected after previously logged data" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UNDEF" edc:desc="Not defined" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RXDATA2" edc:desc="Master or Slave Receive Holding Data 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RXDATA3" edc:desc="Master or Slave Receive Holding Data 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C634" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="FLEX_TWI_THR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXDATA0" edc:desc="Master or Slave Transmit Holding Data 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA1" edc:desc="Master or Slave Transmit Holding Data 1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA2" edc:desc="Master or Slave Transmit Holding Data 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TXDATA3" edc:desc="Master or Slave Transmit Holding Data 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C638" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn----nnnn" edc:cname="FLEX_TWI_SMBTR" edc:impl="0xFFFFFF0F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="PRESC" edc:desc="SMBus Clock Prescaler" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TLOWS" edc:desc="Slave Clock Stretch Maximum Cycles" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TLOWM" edc:desc="Master Clock Stretch Maximum Cycles" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="THMAX" edc:desc="Clock High Maximum Cycles" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C63C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x4002C640" edc:access="------nnnnnnnnnn------nnnnnnnnnn" edc:cname="FLEX_TWI_ACR" edc:impl="0x3FF03FF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="DATAL" edc:desc="Data Length" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Transfer Direction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEC" edc:desc="PEC Request (SMBus Mode only)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="NDATAL" edc:desc="Next Data Length" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="NDIR" edc:desc="Next Transfer Direction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NPEC" edc:desc="Next PEC Request (SMBus Mode only)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C644" edc:access="---------------------nnn------nn" edc:cname="FLEX_TWI_FILTR" edc:impl="0x703" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="FILT" edc:desc="RX Digital Filter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PADFEN" edc:desc="PAD Filter Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="THRES" edc:desc="Digital Filter Threshold" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C648" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4002C650" edc:access="--nnnnnn--nnnnnn----------nn--nn" edc:cname="FLEX_TWI_FMR" edc:impl="0x3F3F0033" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXRDYM" edc:desc="Transmitter Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="TXRDY will be at level '1' when at least one data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="TXRDY will be at level '1' when at least two data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="TXRDY will be at level '1' when at least four data can be written in the Transmit FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXRDYM" edc:desc="Receiver Ready Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ONE_DATA" edc:desc="RXRDY will be at level '1' when at least one unread data is in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TWO_DATA" edc:desc="RXRDY will be at level '1' when at least two unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_DATA" edc:desc="RXRDY will be at level '1' when at least four unread data are in the Receive FIFO" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="TXFTHRES" edc:desc="Transmit FIFO Threshold" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXFTHRES" edc:desc="Receive FIFO Threshold" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C654" edc:access="----------rrrrrr----------rrrrrr" edc:cname="FLEX_TWI_FLR" edc:impl="0x3F003F" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFL" edc:desc="Transmit FIFO Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="RXFL" edc:desc="Receive FIFO Level" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C658" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4002C660" edc:access="------------------------rrrrrrrr" edc:cname="FLEX_TWI_FSR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="Transmit FIFO Empty Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="Transmit FIFO Full Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="Transmit FIFO Threshold Flag (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="Receive FIFO Empty Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="Receive FIFO Full Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="Receive FIFO Threshold Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="Transmit FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="Receive FIFO Pointer Error Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C664" edc:access="------------------------wwwwwwww" edc:cname="FLEX_TWI_FIER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C668" edc:access="------------------------wwwwwwww" edc:cname="FLEX_TWI_FIDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C66C" edc:access="------------------------rrrrrrrr" edc:cname="FLEX_TWI_FIMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="TXFEF" edc:desc="TXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFFF" edc:desc="TXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFTHF" edc:desc="TXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFEF" edc:desc="RXFEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFFF" edc:desc="RXFFF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFTHF" edc:desc="RXFTHF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXFPTEF" edc:desc="TXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RXFPTEF" edc:desc="RXFPTEF Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C670" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0x4002C6D0" edc:access="----------------------------rrrr" edc:cname="FLEX_TWI_DR" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="SWEN" edc:desc="SleepWalking Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKRQ" edc:desc="Clock Request" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWMATCH" edc:desc="SleepWalking Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP" edc:desc="Transfer Pending" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C6D4" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x4002C6E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="FLEX_TWI_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of bits WPEN, WPITEN and WPCREN. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x545749"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4002C6E8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrr-------r" edc:cname="FLEX_TWI_WPSR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXCOM3">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXCOM3">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protect Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4002C6EC" edc:offset="0xF914"/>
      <edc:SFRDef edc:_addr="0x4003C000" edc:access="--------------------nnnnnnnnnnnn" edc:cname="IP1553_CR" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="PT" edc:desc="POTermConf" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TA" edc:desc="TermAddressConf" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="TC" edc:desc="TRBitCmd" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SC" edc:desc="SSBitCmd" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BC" edc:desc="BusyBitCmd" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SRC" edc:desc="SREQBitCmd" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BEC" edc:desc="BCEnableCmd" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST" edc:desc="Soft Reset" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4003C004" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4003C00C" edc:access="----------------wwwwwwwwwwwwwwww" edc:cname="IP1553_CMDR1" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="DATAWORDCOUNT" edc:desc="DATA WORD COUNT" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="RTSUBADDRESS" edc:desc="RT SUBADDRESS" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="T_R" edc:desc="T/R" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTADDRESS" edc:desc="RT ADDRESS" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C010" edc:access="----------------wwwwwwwwwwwwwwww" edc:cname="IP1553_CMDR2" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="DATAWORDCOUNT" edc:desc="DATA WORD COUNT" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="RTSUBADDRESS" edc:desc="RT SUBADDRESS" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="T_R" edc:desc="R/T" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTADDRESS" edc:desc="RT ADDRESS" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C014" edc:access="----------------------------wwww" edc:cname="IP1553_CMDR3" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="BUS" edc:desc="bus used" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BCE" edc:desc="1553 emitter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BCR" edc:desc="1553 receiver" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ER" edc:desc="data or command transfer" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C018" edc:access="----------------wwwwwwwwwwwwwwww" edc:cname="IP1553_BITR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="TOBITWORD" edc:desc="to bit word" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C01C" edc:access="----------------wwwwwwwwwwwwwwww" edc:cname="IP1553_VWR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="TOVECTORWORD" edc:desc="to vector word" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C020" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="IP1553_IER" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="EMT" edc:desc="EndMemTransfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTE" edc:desc="MemTransferErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ERX" edc:desc="End reception" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETX" edc:desc="EndTransmission" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRANS" edc:desc="EndTransfer" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="TE" edc:desc="TransErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCE" edc:desc="TransCodingErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TPE" edc:desc="TransParityErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDE" edc:desc="TransDataTypeErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TTE" edc:desc="TransTimeOutErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TWE" edc:desc="TransWordCounterErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BE" edc:desc="BufIFErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITR" edc:desc="IllegalTransferReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TVR" edc:desc="TransVecWordReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DBR" edc:desc="DynamicBusContReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STR" edc:desc="InitSelfTestReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSR" edc:desc="TranShutdownReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSR" edc:desc="OvTranShutdownReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SDR" edc:desc="SyncWithDataReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWD" edc:desc="SyncWithoutDataReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RRT" edc:desc="ResetRTReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITF" edc:desc="InhibitTermFlagReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OTF" edc:desc="OvInhibitTermFlagReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IPB" edc:desc="IPBusy" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C024" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="IP1553_IDR" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="EMT" edc:desc="EndMemTransfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTE" edc:desc="MemTransferErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ERX" edc:desc="End reception" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETX" edc:desc="EndTransmission" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRANS" edc:desc="EndTransfer" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="TE" edc:desc="TransErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCE" edc:desc="TransCodingErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TPE" edc:desc="TransParityErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDE" edc:desc="TransDataTypeErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TTE" edc:desc="TransTimeOutErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TWE" edc:desc="TransWordCounterErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BE" edc:desc="BufIFErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITR" edc:desc="IllegalTransferReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TVR" edc:desc="TransVecWordReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DBR" edc:desc="DynamicBusContReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STR" edc:desc="InitSelfTestReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSR" edc:desc="TranShutdownReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSR" edc:desc="OvTranShutdownReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SDR" edc:desc="SyncWithDataReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWD" edc:desc="SyncWithoutDataReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RRT" edc:desc="ResetRTReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITF" edc:desc="InhibitTermFlagReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OTF" edc:desc="OvInhibitTermFlagReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IPB" edc:desc="IPBusy" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C028" edc:access="-------rrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="IP1553_IMR" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="EMT" edc:desc="EndMemTransfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTE" edc:desc="MemTransferErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ERX" edc:desc="End reception" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETX" edc:desc="EndTransmission" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRANS" edc:desc="EndTransfer" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="TE" edc:desc="TransErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCE" edc:desc="TransCodingErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TPE" edc:desc="TransParityErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDE" edc:desc="TransDataTypeErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TTE" edc:desc="TransTimeOutErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TWE" edc:desc="TransWordCounterErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BE" edc:desc="BufIFErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITR" edc:desc="IllegalTransferReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TVR" edc:desc="TransVecWordReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DBR" edc:desc="DynamicBusContReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STR" edc:desc="InitSelfTestReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSR" edc:desc="TranShutdownReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSR" edc:desc="OvTranShutdownReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SDR" edc:desc="SyncWithDataReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWD" edc:desc="SyncWithoutDataReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RRT" edc:desc="ResetRTReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITF" edc:desc="InhibitTermFlagReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OTF" edc:desc="OvInhibitTermFlagReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IPB" edc:desc="IPBusy" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C02C" edc:access="------rrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="IP1553_ISR" edc:impl="0x3FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="EMT" edc:desc="EndMemTransfer" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTE" edc:desc="MemTransferErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ERX" edc:desc="End reception" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETX" edc:desc="EndTransmission" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRANS" edc:desc="EndTransfer" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="TE" edc:desc="TransErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCE" edc:desc="TransCodingErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TPE" edc:desc="TransParityErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDE" edc:desc="TransDataTypeErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TTE" edc:desc="TransTimeOutErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TWE" edc:desc="TransWordCounterErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BE" edc:desc="BufIFErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITR" edc:desc="IllegalTransferReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TVR" edc:desc="TransVecWordReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DBR" edc:desc="DynamicBusContReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="STR" edc:desc="InitSelfTestReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSR" edc:desc="TranShutdownReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSR" edc:desc="OvTranShutdownReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SDR" edc:desc="SyncWithDataReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWD" edc:desc="SyncWithoutDataReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RRT" edc:desc="ResetRTReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ITF" edc:desc="InhibitTermFlagReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OTF" edc:desc="OvInhibitTermFlagReq" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IPB" edc:desc="IPBusy" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BUS" edc:desc="BUS activated on last transfer" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C030" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="IP1553_CTRL1" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="IP1553DATA1" edc:desc="IP1553 data value 1" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="IP1553DATA2" edc:desc="IP1553 data value 2" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C034" edc:access="------------rrrrrrrrrrrrrrrrrrrr" edc:cname="IP1553_CTRL2" edc:impl="0xFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="FROMCOMMANDREG" edc:desc="from command register" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="FROMVECTORWORD" edc:desc="from vector register" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C038" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="IP1553_CTRL3" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="FROMSTATUSWORD" edc:desc="content of status word register" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="FROMBITWORD" edc:desc="content of bit word register" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C03C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IP1553_ARW" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="REG_ADDR_APB_W" edc:desc="TX base address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C040" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IP1553_ARR" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="REG_ADDR_APB_R" edc:desc="RX base address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C044" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IP1553_RXBSR" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="RE0" edc:desc="Receive Buffer, 0 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE1" edc:desc="Receive Buffer, 1 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE2" edc:desc="Receive Buffer, 2 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE3" edc:desc="Receive Buffer, 3 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE4" edc:desc="Receive Buffer, 4 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE5" edc:desc="Receive Buffer, 5 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE6" edc:desc="Receive Buffer, 6 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE7" edc:desc="Receive Buffer, 7 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE8" edc:desc="Receive Buffer, 8 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE9" edc:desc="Receive Buffer, 9 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE10" edc:desc="Receive Buffer, 10 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE11" edc:desc="Receive Buffer, 11 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE12" edc:desc="Receive Buffer, 12 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE13" edc:desc="Receive Buffer, 13 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE14" edc:desc="Receive Buffer, 14 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE15" edc:desc="Receive Buffer, 15 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE16" edc:desc="Receive Buffer, 16 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE17" edc:desc="Receive Buffer, 17 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE18" edc:desc="Receive Buffer, 18 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE19" edc:desc="Receive Buffer, 19 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE20" edc:desc="Receive Buffer, 20 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE21" edc:desc="Receive Buffer, 21 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE22" edc:desc="Receive Buffer, 22 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE23" edc:desc="Receive Buffer, 23 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE24" edc:desc="Receive Buffer, 24 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE25" edc:desc="Receive Buffer, 25 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE26" edc:desc="Receive Buffer, 26 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE27" edc:desc="Receive Buffer, 27 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE28" edc:desc="Receive Buffer, 28 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE29" edc:desc="Receive Buffer, 29 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE30" edc:desc="Receive Buffer, 30 with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RE31" edc:desc="Receive Buffer, 31 with x=[0-31]" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C048" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IP1553_RXBAER" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="RER0" edc:desc="Receive error 0, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER1" edc:desc="Receive error 1, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER2" edc:desc="Receive error 2, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER3" edc:desc="Receive error 3, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER4" edc:desc="Receive error 4, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER5" edc:desc="Receive error 5, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER6" edc:desc="Receive error 6, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER7" edc:desc="Receive error 7, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER8" edc:desc="Receive error 8, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER9" edc:desc="Receive error 9, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER10" edc:desc="Receive error 10, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER11" edc:desc="Receive error 11, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER12" edc:desc="Receive error 12, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER13" edc:desc="Receive error 13, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER14" edc:desc="Receive error 14, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER15" edc:desc="Receive error 15, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER16" edc:desc="Receive error 16, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER17" edc:desc="Receive error 17, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER18" edc:desc="Receive error 18, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER19" edc:desc="Receive error 19, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER20" edc:desc="Receive error 20, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER21" edc:desc="Receive error 21, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER22" edc:desc="Receive error 22, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER23" edc:desc="Receive error 23, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER24" edc:desc="Receive error 24, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER25" edc:desc="Receive error 25, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER26" edc:desc="Receive error 26, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER27" edc:desc="Receive error 27, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER28" edc:desc="Receive error 28, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER29" edc:desc="Receive error 29, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER30" edc:desc="Receive error 30, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RER31" edc:desc="Receive error 31, x with x=[0-31]" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C04C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IP1553_TXBSR" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="TF0" edc:desc="Transmit buffer 0, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF1" edc:desc="Transmit buffer 1, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF2" edc:desc="Transmit buffer 2, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF3" edc:desc="Transmit buffer 3, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF4" edc:desc="Transmit buffer 4, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF5" edc:desc="Transmit buffer 5, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF6" edc:desc="Transmit buffer 6, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF7" edc:desc="Transmit buffer 7, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF8" edc:desc="Transmit buffer 8, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF9" edc:desc="Transmit buffer 9, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF10" edc:desc="Transmit buffer 10, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF11" edc:desc="Transmit buffer 11, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF12" edc:desc="Transmit buffer 12, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF13" edc:desc="Transmit buffer 13, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF14" edc:desc="Transmit buffer 14, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF15" edc:desc="Transmit buffer 15, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF16" edc:desc="Transmit buffer 16, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF17" edc:desc="Transmit buffer 17, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF18" edc:desc="Transmit buffer 18, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF19" edc:desc="Transmit buffer 19, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF20" edc:desc="Transmit buffer 20, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF21" edc:desc="Transmit buffer 21, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF22" edc:desc="Transmit buffer 22, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF23" edc:desc="Transmit buffer 23, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF24" edc:desc="Transmit buffer 24, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF25" edc:desc="Transmit buffer 25, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF26" edc:desc="Transmit buffer 26, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF27" edc:desc="Transmit buffer 27, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF28" edc:desc="Transmit buffer 28, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF29" edc:desc="Transmit buffer 29, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF30" edc:desc="Transmit buffer 30, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TF31" edc:desc="Transmit buffer 31, x with x=[0-31]" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4003C050" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IP1553_TXBAER" edc:nzwidth="0x20" ltx:memberofperipheral="IP1553">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="IP1553">
            <edc:SFRFieldDef edc:cname="TER0" edc:desc="Transmit error 0, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER1" edc:desc="Transmit error 1, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER2" edc:desc="Transmit error 2, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER3" edc:desc="Transmit error 3, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER4" edc:desc="Transmit error 4, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER5" edc:desc="Transmit error 5, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER6" edc:desc="Transmit error 6, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER7" edc:desc="Transmit error 7, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER8" edc:desc="Transmit error 8, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER9" edc:desc="Transmit error 9, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER10" edc:desc="Transmit error 10, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER11" edc:desc="Transmit error 11, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER12" edc:desc="Transmit error 12, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER13" edc:desc="Transmit error 13, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER14" edc:desc="Transmit error 14, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER15" edc:desc="Transmit error 15, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER16" edc:desc="Transmit error 16, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER17" edc:desc="Transmit error 17, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER18" edc:desc="Transmit error 18, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER19" edc:desc="Transmit error 19, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER20" edc:desc="Transmit error 20, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER21" edc:desc="Transmit error 21, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER22" edc:desc="Transmit error 22, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER23" edc:desc="Transmit error 23, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER24" edc:desc="Transmit error 24, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER25" edc:desc="Transmit error 25, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER26" edc:desc="Transmit error 26, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER27" edc:desc="Transmit error 27, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER28" edc:desc="Transmit error 28, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER29" edc:desc="Transmit error 29, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER30" edc:desc="Transmit error 30, x with x=[0-31]" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TER31" edc:desc="Transmit error 31, x with x=[0-31]" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4003C054" edc:offset="0x3FAC"/>
      <edc:SFRDef edc:_addr="0x40040000" edc:access="rrrrrrrrrrrrrrrr---rrrrr---rrrrr" edc:cname="SPW_ROUTER_STS" edc:impl="0xFFFF1F1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEST" edc:desc="Destination addr" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SOURCE" edc:desc="Source address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BYTE" edc:desc="Router byte" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:desc="Packet Count" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040004" edc:access="-----------------------------nnn" edc:cname="SPW_ROUTER_CFG" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LAENA" edc:desc="LA Routing Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FALLBACK" edc:desc="Fallback Routing" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISTIMEOUT" edc:desc="Disable Timeout" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040008" edc:access="r--------------------------rrrrr" edc:cname="SPW_ROUTER_TIMEOUT" edc:impl="0x8000001F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Physical Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x1A"/>
            <edc:SFRFieldDef edc:cname="LOCKED" edc:desc="Locked" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4004000C" edc:offset="0x74"/>
      <edc:SFRDef edc:_addr="0x40040080" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE0" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040084" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE1" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040088" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE2" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004008C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE3" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040090" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE4" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040094" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE5" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040098" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE6" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004009C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE7" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400A0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE8" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400A4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE9" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400A8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE10" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400AC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE11" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400B0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE12" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400B4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE13" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400B8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE14" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400BC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE15" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400C0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE16" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400C4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE17" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400C8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE18" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400CC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE19" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400D0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE20" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400D4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE21" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400D8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE22" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400DC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE23" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400E0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE24" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400E4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE25" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400E8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE26" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400EC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE27" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400F0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE28" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400F4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE29" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400F8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE30" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400400FC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE31" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040100" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE32" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040104" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE33" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040108" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE34" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004010C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE35" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040110" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE36" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040114" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE37" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040118" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE38" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004011C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE39" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040120" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE40" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040124" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE41" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040128" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE42" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004012C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE43" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040130" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE44" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040134" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE45" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040138" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE46" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004013C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE47" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040140" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE48" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040144" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE49" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040148" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE50" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004014C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE51" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040150" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE52" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040154" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE53" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040158" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE54" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004015C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE55" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040160" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE56" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040164" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE57" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040168" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE58" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004016C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE59" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040170" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE60" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040174" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE61" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040178" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE62" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004017C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE63" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040180" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE64" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040184" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE65" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040188" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE66" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004018C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE67" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040190" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE68" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040194" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE69" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040198" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE70" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004019C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE71" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401A0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE72" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401A4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE73" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401A8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE74" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401AC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE75" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401B0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE76" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401B4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE77" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401B8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE78" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401BC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE79" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401C0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE80" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401C4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE81" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401C8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE82" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401CC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE83" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401D0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE84" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401D4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE85" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401D8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE86" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401DC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE87" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401E0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE88" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401E4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE89" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401E8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE90" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401EC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE91" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401F0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE92" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401F4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE93" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401F8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE94" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400401FC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE95" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040200" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE96" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040204" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE97" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040208" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE98" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004020C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE99" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040210" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE100" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040214" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE101" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040218" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE102" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004021C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE103" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040220" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE104" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040224" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE105" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040228" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE106" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004022C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE107" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040230" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE108" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040234" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE109" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040238" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE110" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004023C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE111" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040240" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE112" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040244" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE113" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040248" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE114" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004024C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE115" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040250" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE116" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040254" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE117" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040258" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE118" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004025C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE119" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040260" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE120" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040264" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE121" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040268" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE122" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004026C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE123" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040270" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE124" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040274" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE125" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040278" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE126" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004027C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE127" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040280" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE128" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040284" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE129" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040288" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE130" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004028C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE131" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040290" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE132" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040294" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE133" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040298" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE134" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004029C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE135" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402A0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE136" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402A4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE137" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402A8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE138" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402AC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE139" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402B0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE140" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402B4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE141" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402B8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE142" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402BC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE143" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402C0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE144" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402C4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE145" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402C8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE146" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402CC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE147" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402D0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE148" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402D4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE149" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402D8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE150" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402DC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE151" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402E0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE152" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402E4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE153" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402E8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE154" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402EC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE155" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402F0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE156" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402F4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE157" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402F8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE158" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400402FC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE159" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040300" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE160" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040304" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE161" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040308" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE162" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004030C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE163" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040310" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE164" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040314" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE165" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040318" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE166" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004031C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE167" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040320" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE168" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040324" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE169" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040328" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE170" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004032C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE171" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040330" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE172" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040334" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE173" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040338" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE174" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004033C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE175" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040340" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE176" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040344" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE177" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040348" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE178" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004034C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE179" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040350" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE180" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040354" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE181" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040358" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE182" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004035C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE183" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040360" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE184" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040364" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE185" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040368" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE186" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004036C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE187" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040370" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE188" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040374" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE189" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040378" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE190" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004037C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE191" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040380" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE192" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040384" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE193" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040388" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE194" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004038C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE195" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040390" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE196" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040394" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE197" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040398" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE198" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004039C" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE199" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403A0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE200" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403A4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE201" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403A8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE202" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403AC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE203" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403B0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE204" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403B4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE205" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403B8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE206" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403BC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE207" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403C0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE208" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403C4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE209" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403C8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE210" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403CC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE211" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403D0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE212" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403D4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE213" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403D8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE214" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403DC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE215" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403E0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE216" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403E4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE217" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403E8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE218" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403EC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE219" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403F0" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE220" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403F4" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE221" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403F8" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE222" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400403FC" edc:access="-----------------------n---nnnnn" edc:cname="SPW_ROUTER_TABLE223" edc:impl="0x11F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DELHEAD" edc:desc="Delete Header Byte" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040400" edc:access="----------------------rrrrrrrrrr" edc:cname="SPW_LINK1_PI_RM" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040404" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40040408" edc:access="----------------------rrrrrrrrrr" edc:cname="SPW_LINK1_PI_R" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004040C" edc:access="----------------------nnnnnnnnnn" edc:cname="SPW_LINK1_PI_RCS" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040410" edc:access="----------------------nnnnnnnnnn" edc:cname="SPW_LINK1_IM" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040414" edc:access="----------------------wwwwwwwwww" edc:cname="SPW_LINK1_PI_C" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040418" edc:access="----------------------wwwwwwwwww" edc:cname="SPW_LINK1_IM_S" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004041C" edc:access="----------------------wwwwwwwwww" edc:cname="SPW_LINK1_IM_C" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040420" edc:access="------------------------------nn" edc:cname="SPW_LINK1_CFG" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="COMMAND" edc:desc="Command" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="LINK_DISABLE" edc:desc="The link proceeds directly to the ErrorReset state when reaching the Run state." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NO_COMMAND" edc:desc="State is not actively changed." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_START" edc:desc="The Codec will wait in state Ready until the first NULL character is received." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LINK_START" edc:desc="SpaceWire link can proceed to Started state." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040424" edc:access="-----------nnnnn-----------nnnnn" edc:cname="SPW_LINK1_CLKDIV" edc:impl="0x1F001F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TXOPERDIV" edc:desc="TxOperDiv" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXINITDIV" edc:desc="TxInitDiv" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040428" edc:access="------rrrrrrrrrr-------rrrrr-rrr" edc:cname="SPW_LINK1_STATUS" edc:impl="0x3FF01F7" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LINKSTATE" edc:desc="LinkState" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="ERRORRESET" edc:desc="CODEC link state machine in ErrorReset state" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ERRORWAIT" edc:desc="CODEC link state machine in ErrorWait state" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="READY" edc:desc="CODEC link state machine in Ready state" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="STARTED" edc:desc="CODEC link state machine in Started state" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CONNECTING" edc:desc="CODEC link state machine in Connecting state" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="RUN" edc:desc="CODEC link state machine in Run state" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXDEFDIV" edc:desc="TxDefDiv" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TxEmpty" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOTNULL" edc:desc="GotNull" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOTFCT" edc:desc="GotFCT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOTNCHAR" edc:desc="GotNChar" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN0" edc:desc="SEEN0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN1" edc:desc="SEEN1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN2" edc:desc="SEEN2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN3" edc:desc="SEEN3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN4" edc:desc="SEEN4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN5" edc:desc="SEEN5" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004042C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK1_SWRESET" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="PATTERN" edc:desc="Pattern" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040430" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK1_ESCCHAREVENT0" edc:impl="0x3FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Value" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Mask" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Active" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HWEVENT" edc:desc="HwEvent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040434" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK1_ESCCHAREVENT1" edc:impl="0x3FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Value" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Mask" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Active" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HWEVENT" edc:desc="HwEvent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040438" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="SPW_LINK1_ESCCHARSTS" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="CHAR1" edc:desc="Esc Char 1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CHAR2" edc:desc="Esc Char 2" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004043C" edc:access="------------------------nnnnnnnn" edc:cname="SPW_LINK1_TRANSESC" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="CHAR" edc:desc="Character" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040440" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK1_DISTINTPI_RM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040444" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK1_DISTINTPI_RCM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040448" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK1_DISTINTPI_R" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004044C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK1_DISTINTPI_RCS" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040450" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK1_DISTINTIM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040454" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK1_DISTINTPI_C" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040458" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK1_DISTINTIM_S" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004045C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK1_DISTINTIM_C" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040460" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK1_DISTACKPI_RM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040464" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK1_DISTACKPI_RCM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040468" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK1_DISTACKPI_R" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004046C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK1_DISTACKPI_RCS" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040470" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK1_DISTACKIM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040474" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK1_DISTACKPI_C" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040478" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK1_DISTACKIM_S" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004047C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK1_DISTACKIM_C" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040480" edc:access="----------------------rrrrrrrrrr" edc:cname="SPW_LINK2_PI_RM" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040484" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40040488" edc:access="----------------------rrrrrrrrrr" edc:cname="SPW_LINK2_PI_R" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004048C" edc:access="----------------------nnnnnnnnnn" edc:cname="SPW_LINK2_PI_RCS" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040490" edc:access="----------------------nnnnnnnnnn" edc:cname="SPW_LINK2_IM" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040494" edc:access="----------------------wwwwwwwwww" edc:cname="SPW_LINK2_PI_C" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040498" edc:access="----------------------wwwwwwwwww" edc:cname="SPW_LINK2_IM_S" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004049C" edc:access="----------------------wwwwwwwwww" edc:cname="SPW_LINK2_IM_C" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISERR" edc:desc="DisErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PARERR" edc:desc="ParErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCERR" edc:desc="ESCErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CRERR" edc:desc="CrErr" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LINKABORT" edc:desc="LinkAbort" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPTRANS" edc:desc="EEP transmitted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEPREC" edc:desc="EEP received" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT2" edc:desc="Escape Event 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ESCEVENT1" edc:desc="Escape Event 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404A0" edc:access="------------------------------nn" edc:cname="SPW_LINK2_CFG" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="COMMAND" edc:desc="Command" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="LINK_DISABLE" edc:desc="The link proceeds directly to the ErrorReset state when reaching the Run state." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NO_COMMAND" edc:desc="State is not actively changed." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_START" edc:desc="The Codec will wait in state Ready until the first NULL character is received." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LINK_START" edc:desc="SpaceWire link can proceed to Started state." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404A4" edc:access="-----------nnnnn-----------nnnnn" edc:cname="SPW_LINK2_CLKDIV" edc:impl="0x1F001F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TXOPERDIV" edc:desc="TxOperDiv" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="TXINITDIV" edc:desc="TxInitDiv" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404A8" edc:access="------rrrrrrrrrr-------rrrrr-rrr" edc:cname="SPW_LINK2_STATUS" edc:impl="0x3FF01F7" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LINKSTATE" edc:desc="LinkState" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="ERRORRESET" edc:desc="CODEC link state machine in ErrorReset state" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ERRORWAIT" edc:desc="CODEC link state machine in ErrorWait state" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="READY" edc:desc="CODEC link state machine in Ready state" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="STARTED" edc:desc="CODEC link state machine in Started state" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CONNECTING" edc:desc="CODEC link state machine in Connecting state" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="RUN" edc:desc="CODEC link state machine in Run state" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TXDEFDIV" edc:desc="TxDefDiv" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TXEMPTY" edc:desc="TxEmpty" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOTNULL" edc:desc="GotNull" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOTFCT" edc:desc="GotFCT" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOTNCHAR" edc:desc="GotNChar" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN0" edc:desc="SEEN0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN1" edc:desc="SEEN1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN2" edc:desc="SEEN2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN3" edc:desc="SEEN3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN4" edc:desc="SEEN4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEEN5" edc:desc="SEEN5" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404AC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK2_SWRESET" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="PATTERN" edc:desc="Pattern" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404B0" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK2_ESCCHAREVENT0" edc:impl="0x3FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Value" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Mask" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Active" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HWEVENT" edc:desc="HwEvent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404B4" edc:access="--------------nnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK2_ESCCHAREVENT1" edc:impl="0x3FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Value" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Mask" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Active" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HWEVENT" edc:desc="HwEvent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404B8" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="SPW_LINK2_ESCCHARSTS" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="CHAR1" edc:desc="Esc Char 1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="CHAR2" edc:desc="Esc Char 2" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404BC" edc:access="------------------------nnnnnnnn" edc:cname="SPW_LINK2_TRANSESC" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="CHAR" edc:desc="Character" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404C0" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK2_DISTINTPI_RM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404C4" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK2_DISTINTPI_RCM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404C8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK2_DISTINTPI_R" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404CC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK2_DISTINTPI_RCS" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404D0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK2_DISTINTIM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404D4" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK2_DISTINTPI_C" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404D8" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK2_DISTINTIM_S" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404DC" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK2_DISTINTIM_C" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="Distributed Interrupt mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404E0" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK2_DISTACKPI_RM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404E4" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK2_DISTACKPI_RCM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404E8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_LINK2_DISTACKPI_R" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404EC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK2_DISTACKPI_RCS" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404F0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_LINK2_DISTACKIM" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404F4" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK2_DISTACKPI_C" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404F8" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK2_DISTACKIM_S" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400404FC" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SPW_LINK2_DISTACKIM_C" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DA0" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA1" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA2" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA3" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA4" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA5" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA6" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA7" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA8" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA9" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA10" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA11" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA12" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA13" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA14" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA15" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA16" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA17" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA18" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA19" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA20" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA21" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA22" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA23" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA24" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA25" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA26" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA27" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA28" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA29" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA30" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DA31" edc:desc="Distributed Acknowledge mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040500" edc:offset="0x300"/>
      <edc:SFRDef edc:_addr="0x40040800" edc:access="---------------------------rrrrr" edc:cname="SPW_PKTRX1_PI_RM" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Packet Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040804" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40040808" edc:access="---------------------------rrrrr" edc:cname="SPW_PKTRX1_PI_R" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Packet Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004080C" edc:access="---------------------------nnnnn" edc:cname="SPW_PKTRX1_PI_RCS" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Packet Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040810" edc:access="---------------------------nnnnn" edc:cname="SPW_PKTRX1_IM" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Packet Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040814" edc:access="---------------------------wwwww" edc:cname="SPW_PKTRX1_PI_C" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Packet Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040818" edc:access="---------------------------wwwww" edc:cname="SPW_PKTRX1_IM_S" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Packet Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004081C" edc:access="---------------------------wwwww" edc:cname="SPW_PKTRX1_IM_C" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Packet Discard" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040820" edc:access="-------------------------------n" edc:cname="SPW_PKTRX1_CFG" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DISCARD" edc:desc="Discard" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040824" edc:access="----------rrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_PKTRX1_STATUS" edc:impl="0x3FFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="COUNT" edc:desc="Packet Count" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="PACKET" edc:desc="Packet" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOCKED" edc:desc="Locked" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARM" edc:desc="Armed" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Active" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDING" edc:desc="Pending" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivating" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040828" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40040830" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTRX1_NXTBUFDATAADDR" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040834" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTRX1_NXTBUFDATALEN" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LEN" edc:desc="Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040838" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTRX1_NXTBUFPKTADDR" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004083C" edc:access="-n-----nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTRX1_NXTBUFCFG" edc:impl="0x41FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="MAXCNT" edc:desc="Max Count" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Start Value" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="START" edc:desc="Start Mode" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="STARTEVENT" edc:desc="Start if any bit in Start Value matches an incoming event" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="STARTNOW" edc:desc="Start immediately. Request a deactivation on next packet boundary." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="STARTTCH1" edc:desc="Start if Start Value matches an incoming Time Code from Time Code Handler 1" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="STARTLATER" edc:desc="Start when Current Buffer is deactivated, e.g. by becoming full" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="SPLIT" edc:desc="Split Pkt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040840" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_PKTRX1_CURBUFDATAADDR" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040844" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_PKTRX1_CURBUFDATALEN" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LEN" edc:desc="Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040848" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_PKTRX1_CURBUFPKTADDR" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4004084C" edc:access="nn--------------nnnnnnnnnnnnnnnn" edc:cname="SPW_PKTRX1_CURBUFCFG" edc:impl="0xC000FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="MAXCNT" edc:desc="Max Count" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="SPLIT" edc:desc="Split" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ABORT" edc:desc="Abort" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040850" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_PKTRX1_PREVBUFDATALEN" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LEN" edc:desc="Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040854" edc:access="r-----------rrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_PKTRX1_PREVBUFSTS" edc:impl="0x800FFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Count" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP seen" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FULLI" edc:desc="Buffer Info Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FULLD" edc:desc="Buffer Data Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DMAERR" edc:desc="DMA Error" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xB"/>
            <edc:SFRFieldDef edc:cname="LOCKED" edc:desc="Locked" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040858" edc:offset="0x24"/>
      <edc:SFRDef edc:_addr="0x4004087C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTRX1_SWRESET" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="PATTERN" edc:desc="Pattern" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040880" edc:offset="0x380"/>
      <edc:SFRDef edc:_addr="0x40040C00" edc:access="----------------------------rrrr" edc:cname="SPW_PKTTX1_PI_RM" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP sent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP sent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040C04" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40040C08" edc:access="----------------------------rrrr" edc:cname="SPW_PKTTX1_PI_R" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP sent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP sent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C0C" edc:access="----------------------------nnnn" edc:cname="SPW_PKTTX1_PI_RCS" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP sent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP sent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C10" edc:access="----------------------------nnnn" edc:cname="SPW_PKTTX1_IM" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP sent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP sent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C14" edc:access="----------------------------wwww" edc:cname="SPW_PKTTX1_PI_C" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP sent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP sent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C18" edc:access="----------------------------wwww" edc:cname="SPW_PKTTX1_IM_S" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP sent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP sent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C1C" edc:access="----------------------------wwww" edc:cname="SPW_PKTTX1_IM_C" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activated" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOP" edc:desc="EOP sent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEP" edc:desc="EEP sent" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C20" edc:access="-------------nnn------------nnnn" edc:cname="SPW_PKTTX1_STATUS" edc:impl="0x7000F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ARM" edc:desc="Armed" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Active" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDING" edc:desc="Pending" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DEACT" edc:desc="Deactivating" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="PREV" edc:desc="Previous" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="NOINFO" edc:desc="No information. Field not locked." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LASTSENDLISTOK" edc:desc="Last send list fully done" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ABORTEDMEMERR" edc:desc="Aborted due to memory access error." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ABORTEDNEWSD" edc:desc="Aborted by new send list." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="ABORTEDUSERCMD" edc:desc="Aborted by direct user command." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ABORTEDTIMEOUT" edc:desc="Aborted by timeout." edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C24" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTTX1_NXTSENDROUT" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="BYTE4" edc:desc="Byte4" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:desc="Byte3" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="BYTE2" edc:desc="Byte2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:desc="Byte1" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C28" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTTX1_NXTSENDADDR" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C2C" edc:access="--n-----nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTTX1_NXTSENDCFG" edc:impl="0x20FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LEN" edc:desc="Length" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Start Value" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="START" edc:desc="Start Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="STARTEVENT" edc:desc="Start if any bit in Start Value matches an incoming event" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="STARTNOW" edc:desc="Start immediately, if possible" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="STARTTCH1" edc:desc="Start if Start Value matches an incoming Time Code from Time Code Handler 1" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ABORT" edc:desc="Abort" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C30" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_PKTTX1_CURSENDROUT" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="BYTE4" edc:desc="Byte4" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="BYTE3" edc:desc="Byte3" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="BYTE2" edc:desc="Byte2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="BYTE1" edc:desc="Byte1" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C34" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="SPW_PKTTX1_CURSENDADDR" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C38" edc:access="n---------------nnnnnnnnnnnnnnnn" edc:cname="SPW_PKTTX1_CURSENDCFG" edc:impl="0x8000FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LEN" edc:desc="Length" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="ABORT" edc:desc="Abort" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040C3C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_PKTTX1_SWRESET" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="PATTERN" edc:desc="Pattern" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040C40" edc:offset="0x1C0"/>
      <edc:SFRDef edc:_addr="0x40040E00" edc:access="---------------nnnnnnnnnnnnnnnnn" edc:cname="SPW_RMAP1_CFG" edc:impl="0x1FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="DESTKEY" edc:desc="DestKey" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TLA" edc:desc="Address" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="RMAPENA" edc:desc="RMAP Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040E04" edc:access="-----------------------rrrrrrrrr" edc:cname="SPW_RMAP1_STS_RC" edc:impl="0x1FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ERRCODE" edc:desc="Error Code" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="NOERROR" edc:desc="No error detected" edc:when="(field &amp; 0xFF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DMAERROR" edc:desc="Error while DMA accessing the internal bus, e.g. illegal address." edc:when="(field &amp; 0xFF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RMAPERROR" edc:desc="Unused RMAP command according to [RMAP]" edc:when="(field &amp; 0xFF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DESTKEYERROR" edc:desc="Destination key error" edc:when="(field &amp; 0xFF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DATACRCERROR" edc:desc="Data CRC error" edc:when="(field &amp; 0xFF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="EOPERROR" edc:desc="Early EOP in header or data, i.e. EOP has been received with less data than expected from the RMAP command header." edc:when="(field &amp; 0xFF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CARGOERROR" edc:desc="Cargo too large. Late EOP or EEP in data, i.e. EOP/EEP has been received with more data than expected from the RMAP command header." edc:when="(field &amp; 0xFF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="EEPERROR" edc:desc="Early EEP in data for RMAP commands. EEP has been received with less data or exactly as much as expected from the RMAP command header." edc:when="(field &amp; 0xFF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CMDERROR" edc:desc="Authorisation error: Invalid or unsupported command." edc:when="(field &amp; 0xFF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="TLAERROR" edc:desc="Non-matching Target Logical Address." edc:when="(field &amp; 0xFF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="HEADERCRCERROR" edc:desc="Incorrect header CRC." edc:when="(field &amp; 0xFF) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="PROTOCOLIDERROR" edc:desc="Protocol Identifier not supported." edc:when="(field &amp; 0xFF) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="REPLYADDERROR" edc:desc="Unsupported reply address length" edc:when="(field &amp; 0xFF) == 0x12"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VALID" edc:desc="Valid" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040E08" edc:access="-----------------------rrrrrrrrr" edc:cname="SPW_RMAP1_STS" edc:impl="0x1FF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="ERRCODE" edc:desc="Error Code" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="NOERROR" edc:desc="No error detected" edc:when="(field &amp; 0xFF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DMAERROR" edc:desc="Error while DMA accessing the internal bus, e.g. illegal address." edc:when="(field &amp; 0xFF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RMAPERROR" edc:desc="Unused RMAP command according to [RMAP]" edc:when="(field &amp; 0xFF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DESTKEYERROR" edc:desc="Destination key error" edc:when="(field &amp; 0xFF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DATACRCERROR" edc:desc="Data CRC error" edc:when="(field &amp; 0xFF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="EOPERROR" edc:desc="Early EOP in header or data, i.e. EOP has been received with less data than expected from the RMAP command header." edc:when="(field &amp; 0xFF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CARGOERROR" edc:desc="Cargo too large. Late EOP or EEP in data, i.e. EOP/EEP has been received with more data than expected from the RMAP command header." edc:when="(field &amp; 0xFF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="EEPERROR" edc:desc="Early EEP in data for RMAP commands. EEP has been received with less data or exactly as much as expected from the RMAP command header." edc:when="(field &amp; 0xFF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CMDERROR" edc:desc="Authorisation error: Invalid or unsupported command." edc:when="(field &amp; 0xFF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="TLAERROR" edc:desc="Non-matching Target Logical Address." edc:when="(field &amp; 0xFF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="HEADERCRCERROR" edc:desc="Incorrect header CRC." edc:when="(field &amp; 0xFF) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="PROTOCOLIDERROR" edc:desc="Protocol Identifier not supported." edc:when="(field &amp; 0xFF) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="REPLYADDERROR" edc:desc="Unsupported reply address length" edc:when="(field &amp; 0xFF) == 0x12"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VALID" edc:desc="Valid" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040E0C" edc:offset="0x74"/>
      <edc:SFRDef edc:_addr="0x40040E80" edc:access="---------------------------rrrrr" edc:cname="SPW_TCH_PI_RM" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TCEVENT" edc:desc="TcEvent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMECODE" edc:desc="Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANYTIMECODE" edc:desc="Any Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LATEWD" edc:desc="Late Watchdog" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EARLYWD" edc:desc="Early Watchdog" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040E84" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40040E88" edc:access="---------------------------rrrrr" edc:cname="SPW_TCH_PI_R" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TCEVENT" edc:desc="TcEvent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMECODE" edc:desc="Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANYTIMECODE" edc:desc="Any Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LATEWD" edc:desc="Late Watchdog" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EARLYWD" edc:desc="Early Watchdog" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040E8C" edc:access="---------------------------nnnnn" edc:cname="SPW_TCH_PI_RCS" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TCEVENT" edc:desc="TcEvent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMECODE" edc:desc="Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANYTIMECODE" edc:desc="Any Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LATEWD" edc:desc="Late Watchdog" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EARLYWD" edc:desc="Early Watchdog" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040E90" edc:access="---------------------------nnnnn" edc:cname="SPW_TCH_IM" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TCEVENT" edc:desc="TcEvent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMECODE" edc:desc="Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANYTIMECODE" edc:desc="Any Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LATEWD" edc:desc="Late Watchdog" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EARLYWD" edc:desc="Early Watchdog" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040E94" edc:access="---------------------------wwwww" edc:cname="SPW_TCH_PI_C" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TCEVENT" edc:desc="TcEvent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMECODE" edc:desc="Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANYTIMECODE" edc:desc="Any Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LATEWD" edc:desc="Late Watchdog" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EARLYWD" edc:desc="Early Watchdog" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040E98" edc:access="---------------------------wwwww" edc:cname="SPW_TCH_IM_S" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TCEVENT" edc:desc="TcEvent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMECODE" edc:desc="Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANYTIMECODE" edc:desc="Any Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LATEWD" edc:desc="Late Watchdog" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EARLYWD" edc:desc="Early Watchdog" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040E9C" edc:access="---------------------------wwwww" edc:cname="SPW_TCH_IM_C" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="TCEVENT" edc:desc="TcEvent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMECODE" edc:desc="Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ANYTIMECODE" edc:desc="Any Time Code" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LATEWD" edc:desc="Late Watchdog" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EARLYWD" edc:desc="Early Watchdog" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040EA0" edc:access="------------------------------nn" edc:cname="SPW_TCH_CFGLISTEN" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="L1" edc:desc="Listen link 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="L2" edc:desc="Listen link 2" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040EA4" edc:access="------------------------------nn" edc:cname="SPW_TCH_CFGSEND" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="S1" edc:desc="Send link 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="S2" edc:desc="Send link 2" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040EA8" edc:access="--------------------------nnnnnn" edc:cname="SPW_TCH_CFG" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="EVENT" edc:desc="Event" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040EAC" edc:access="----------------nnnnnnnn--nnnnnn" edc:cname="SPW_TCH_CFGRESTART" edc:impl="0xFF3F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Value" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EVENT" edc:desc="Event" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="PPS" edc:desc="Pps" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:desc="One Shot" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040EB0" edc:access="------------------nnnnnn--nnnnnn" edc:cname="SPW_TCH_CFGTCEVENT" edc:impl="0x3F3F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Value" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MASK" edc:desc="Mask" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040EB4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_TCH_CFGWD" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="LATE" edc:desc="Late" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="EARLY" edc:desc="Early" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040EB8" edc:access="-----------------------n--nnnnnn" edc:cname="SPW_TCH_LASTTIMECODE" edc:impl="0x13F" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="VALUE" edc:desc="Value" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SEND" edc:desc="Send Now" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040EBC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SPW_TCH_SWRESET" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="PATTERN" edc:desc="Pattern" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040EC0" edc:offset="0x40"/>
      <edc:SFRDef edc:_addr="0x40040F00" edc:access="---------------rr-------r-------" edc:cname="SPW_GROUP_IRQSTS1" edc:impl="0x18080" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TX1" edc:desc="Tx 1" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RX1" edc:desc="Rx 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCH" edc:desc="Time Code Handler" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40040F04" edc:access="--------rrrrrr------------------" edc:cname="SPW_GROUP_IRQSTS2" edc:impl="0xFC0000" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="Link2" edc:desc="Link 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="Dia2" edc:desc="Distributed Interrupt Acknowledge, Link 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="Di2" edc:desc="Distributed Interrupt 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="Link1" edc:desc="Link 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="Dia1" edc:desc="Distributed Interrupt Acknowledge, Link 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="Di1" edc:desc="Distributed Interrupt 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040F08" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40040F0C" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="SPW_GROUP_EDACSTS" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="SPW">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPW">
            <edc:SFRFieldDef edc:cname="CORR" edc:desc="Correction Count" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="UNCORR" edc:desc="Uncorrectable Error" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40040F10" edc:offset="0x170F0"/>
      <edc:SFRDef edc:_addr="0x40058000" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN0_CREL" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="DAY" edc:desc="Timestamp Day" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="MON" edc:desc="Timestamp Month" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:desc="Timestamp Year" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="SUBSTEP" edc:desc="Sub-step of Core Release" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="STEP" edc:desc="Step of Core Release" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="REL" edc:desc="Core Release" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058004" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN0_ENDN" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="ETV" edc:desc="Endianness Test Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058008" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_CUST" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="CSV" edc:desc="Customer-specific Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005800C" edc:access="--------n--nnnnn---nnnnnnnnn-nnn" edc:cname="MCAN0_DBTP" edc:impl="0x9F1FF7" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="DSJW" edc:desc="Data (Re) Synchronization Jump Width" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DTSEG2" edc:desc="Data Time Segment After Sample Point" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="DTSEG1" edc:desc="Data Time Segment Before Sample Point" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DBRP" edc:desc="Data Bit Rate Prescaler" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TDC" edc:desc="Transmitter Delay Compensation" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Transmitter Delay Compensation disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Transmitter Delay Compensation enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058010" edc:access="------------------------nnnn----" edc:cname="MCAN0_TEST" edc:impl="0xF0" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LBCK" edc:desc="Loop Back Mode (read/write)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Reset value. Loop Back mode is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Loop Back mode is enabled (see Section 1.5.1.9)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TX" edc:desc="Control of Transmit Pin (read/write)" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Reset value, CANTX controlled by the CAN Core, updated at the end of the CAN bit time." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SAMPLE_POINT_MONITORING" edc:desc="Sample Point can be monitored at pin CANTX." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DOMINANT" edc:desc="Dominant ('0') level at pin CANTX." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="RECESSIVE" edc:desc="Recessive ('1') at pin CANTX." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RX" edc:desc="Receive Pin (read-only)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058014" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="MCAN0_RWD" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="WDC" edc:desc="Watchdog Configuration (read/write)" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="WDV" edc:desc="Watchdog Value (read-only)" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058018" edc:access="----------------nnnn--nnnnnnnnnn" edc:cname="MCAN0_CCCR" edc:impl="0xF3FF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="INIT" edc:desc="Initialization (read/write)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Normal operation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Initialization is started." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CCE" edc:desc="Configuration Change Enable (read/write, write protection)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PROTECTED" edc:desc="The processor has no write access to the protected configuration registers." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CONFIGURABLE" edc:desc="The processor has write access to the protected configuration registers (while MCAN_CCCR.INIT = '1')." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASM" edc:desc="Restricted Operation Mode (read/write, write protection against '1')" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal CAN operation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESTRICTED" edc:desc="Restricted Operation mode active." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSA" edc:desc="Clock Stop Acknowledge (read-only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSR" edc:desc="Clock Stop Request (read/write)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_CLOCK_STOP" edc:desc="No clock stop is requested." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK_STOP" edc:desc="Clock stop requested. When clock stop is requested, first INIT and then CSA will be set after all pending transfer requests have been completed and the CAN bus reached idle." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MON" edc:desc="Bus Monitoring Mode (read/write, write protection against '1')" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bus Monitoring mode is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Bus Monitoring mode is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAR" edc:desc="Disable Automatic Retransmission (read/write, write protection)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AUTO_RETX" edc:desc="Automatic retransmission of messages not transmitted successfully enabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="NO_AUTO_RETX" edc:desc="Automatic retransmission disabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TEST" edc:desc="Test Mode Enable (read/write, write protection against '1')" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Normal operation, MCAN_TEST register holds reset values." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Test mode, write access to MCAN_TEST register enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FDOE" edc:desc="CAN FD Operation Enable (read/write, write protection)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="FD operation disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="FD operation enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BRSE" edc:desc="Bit Rate Switching Enable (read/write, write protection)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bit rate switching for transmissions disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Bit rate switching for transmissions enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PXHD" edc:desc="Protocol Exception Event Handling (read/write, write protection)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EFBI" edc:desc="Edge Filtering during Bus Integration (read/write, write protection)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXP" edc:desc="Transmit Pause (read/write, write protection)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NISO" edc:desc="Non-ISO Operation" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005801C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:cname="MCAN0_NBTP" edc:impl="0xFFFFFF7F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="NTSEG2" edc:desc="Nominal Time Segment After Sample Point" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NTSEG1" edc:desc="Nominal Time Segment Before Sample Point" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="NBRP" edc:desc="Nominal Bit Rate Prescaler" edc:nzwidth="0x9"/>
            <edc:SFRFieldDef edc:cname="NSJW" edc:desc="Nominal (Re) Synchronization Jump Width" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058020" edc:access="------------nnnn--------------nn" edc:cname="MCAN0_TSCC" edc:impl="0xF0003" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TSS" edc:desc="Timestamp Select" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALWAYS_0" edc:desc="Timestamp counter value always 0x0000" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TCP_INC" edc:desc="Timestamp counter value incremented according to TCP" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EXT_TIMESTAMP" edc:desc="External timestamp counter value used" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="TCP" edc:desc="Timestamp Counter Prescaler" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058024" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="MCAN0_TSCV" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TSC" edc:desc="Timestamp Counter (cleared on write)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058028" edc:access="nnnnnnnnnnnnnnnn-------------nnn" edc:cname="MCAN0_TOCC" edc:impl="0xFFFF0007" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="ETOC" edc:desc="Enable Timeout Counter" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_TIMEOUT" edc:desc="Timeout Counter disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TOS_CONTROLLED" edc:desc="Timeout Counter enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TOS" edc:desc="Timeout Select" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="CONTINUOUS" edc:desc="Continuous operation" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX_EV_TIMEOUT" edc:desc="Timeout controlled by Tx Event FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX0_EV_TIMEOUT" edc:desc="Timeout controlled by Receive FIFO 0" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="RX1_EV_TIMEOUT" edc:desc="Timeout controlled by Receive FIFO 1" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="TOP" edc:desc="Timeout Period" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005802C" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="MCAN0_TOCV" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TOC" edc:desc="Timeout Counter (cleared on write)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40058030" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x40058040" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN0_ECR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TEC" edc:desc="Transmit Error Counter" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="REC" edc:desc="Receive Error Counter" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="RP" edc:desc="Receive Error Passive" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CEL" edc:desc="CAN Error Logging (cleared on read)" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058044" edc:access="---------rrrrrrr-rrrrrrrrrrrrrrr" edc:cname="MCAN0_PSR" edc:impl="0x7F7FFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="LEC" edc:desc="Last Error Code (set to 111 on read)" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="NO_ERROR" edc:desc="No error occurred since LEC has been reset by successful reception or transmission." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="STUFF_ERROR" edc:desc="More than 5 equal bits in a sequence have occurred in a part of a received message where this is not allowed." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FORM_ERROR" edc:desc="A fixed format part of a received frame has the wrong format." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACK_ERROR" edc:desc="The message transmitted by the MCAN was not acknowledged by another node." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="BIT1_ERROR" edc:desc="During transmission of a message (with the exception of the arbitration field), the device tried to send a recessive level (bit of logical value '1'), but the monitored bus value was dominant." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="BIT0_ERROR" edc:desc="During transmission of a message (or acknowledge bit, or active error flag, or overload flag), the device tried to send a dominant level (data or identifier bit logical value '0'), but the monitored bus value was recessive. During Bus_Off recovery, this status is set each time a sequence of 11 recessive bits has been monitored. This enables the processor to monitor the proceeding of the Bus_Off recovery sequence (indicating the bus is not stuck at dominant or continuously disturbed)." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CRC_ERROR" edc:desc="The CRC check sum of a received message was incorrect. The CRC of an incoming message does not match the CRC calculated from the received data." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="NO_CHANGE" edc:desc="Any read access to the Protocol Status Register re-initializes the LEC to '7'. When the LEC shows value '7', no CAN bus event was detected since the last processor read access to the Protocol Status Register." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activity" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONIZING" edc:desc="Node is synchronizing on CAN communication" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Node is neither receiver nor transmitter" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RECEIVER" edc:desc="Node is operating as receiver" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TRANSMITTER" edc:desc="Node is operating as transmitter" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EP" edc:desc="Error Passive" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EW" edc:desc="Warning Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BO" edc:desc="Bus_Off Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DLEC" edc:desc="Data Phase Last Error Code (set to 111 on read)" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="RESI" edc:desc="ESI Flag of Last Received CAN FD Message (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBRS" edc:desc="BRS Flag of Last Received CAN FD Message (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RFDF" edc:desc="Received a CAN FD Message (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PXE" edc:desc="Protocol Exception Event (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TDCV" edc:desc="Transmitter Delay Compensation Value" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058048" edc:access="-----------------nnnnnnn-nnnnnnn" edc:cname="MCAN0_TDCR" edc:impl="0x7F7F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TDCF" edc:desc="Transmitter Delay Compensation Filter" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TDCO" edc:desc="Transmitter Delay Compensation Offset" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4005804C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40058050" edc:access="--nnnnnnnn--nnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_IR" edc:impl="0x3FCFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="RF0N" edc:desc="Receive FIFO 0 New Message" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0W" edc:desc="Receive FIFO 0 Watermark Reached" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0F" edc:desc="Receive FIFO 0 Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0L" edc:desc="Receive FIFO 0 Message Lost" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1N" edc:desc="Receive FIFO 1 New Message" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1W" edc:desc="Receive FIFO 1 Watermark Reached" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1F" edc:desc="Receive FIFO 1 Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1L" edc:desc="Receive FIFO 1 Message Lost" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HPM" edc:desc="High Priority Message" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TC" edc:desc="Transmission Completed" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCF" edc:desc="Transmission Cancellation Finished" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TFE" edc:desc="Tx FIFO Empty" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFN" edc:desc="Tx Event FIFO New Entry" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFW" edc:desc="Tx Event FIFO Watermark Reached" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFF" edc:desc="Tx Event FIFO Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFL" edc:desc="Tx Event FIFO Element Lost" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSW" edc:desc="Timestamp Wraparound" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MRAF" edc:desc="Message RAM Access Failure" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOO" edc:desc="Timeout Occurred" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRX" edc:desc="Message stored to Dedicated Receive Buffer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ELO" edc:desc="Error Logging Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EP" edc:desc="Error Passive" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EW" edc:desc="Warning Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BO" edc:desc="Bus_Off Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDI" edc:desc="Watchdog Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEA" edc:desc="Protocol Error in Arbitration Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PED" edc:desc="Protocol Error in Data Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARA" edc:desc="Access to Reserved Address" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058054" edc:access="--nnnnnnnn--nnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_IE" edc:impl="0x3FCFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="RF0NE" edc:desc="Receive FIFO 0 New Message Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0WE" edc:desc="Receive FIFO 0 Watermark Reached Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0FE" edc:desc="Receive FIFO 0 Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0LE" edc:desc="Receive FIFO 0 Message Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1NE" edc:desc="Receive FIFO 1 New Message Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1WE" edc:desc="Receive FIFO 1 Watermark Reached Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1FE" edc:desc="Receive FIFO 1 Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1LE" edc:desc="Receive FIFO 1 Message Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HPME" edc:desc="High Priority Message Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCE" edc:desc="Transmission Completed Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCFE" edc:desc="Transmission Cancellation Finished Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TFEE" edc:desc="Tx FIFO Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFNE" edc:desc="Tx Event FIFO New Entry Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFWE" edc:desc="Tx Event FIFO Watermark Reached Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFFE" edc:desc="Tx Event FIFO Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFLE" edc:desc="Tx Event FIFO Event Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSWE" edc:desc="Timestamp Wraparound Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MRAFE" edc:desc="Message RAM Access Failure Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOOE" edc:desc="Timeout Occurred Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRXE" edc:desc="Message stored to Dedicated Receive Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ELOE" edc:desc="Error Logging Overflow Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EPE" edc:desc="Error Passive Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EWE" edc:desc="Warning Status Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BOE" edc:desc="Bus_Off Status Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDIE" edc:desc="Watchdog Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEAE" edc:desc="Protocol Error in Arbitration Phase Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEDE" edc:desc="Protocol Error in Data Phase Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARAE" edc:desc="Access to Reserved Address Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058058" edc:access="--nnnnnnnn--nnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_ILS" edc:impl="0x3FCFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="RF0NL" edc:desc="Receive FIFO 0 New Message Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0WL" edc:desc="Receive FIFO 0 Watermark Reached Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0FL" edc:desc="Receive FIFO 0 Full Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0LL" edc:desc="Receive FIFO 0 Message Lost Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1NL" edc:desc="Receive FIFO 1 New Message Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1WL" edc:desc="Receive FIFO 1 Watermark Reached Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1FL" edc:desc="Receive FIFO 1 Full Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1LL" edc:desc="Receive FIFO 1 Message Lost Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HPML" edc:desc="High Priority Message Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCL" edc:desc="Transmission Completed Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCFL" edc:desc="Transmission Cancellation Finished Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TFEL" edc:desc="Tx FIFO Empty Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFNL" edc:desc="Tx Event FIFO New Entry Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFWL" edc:desc="Tx Event FIFO Watermark Reached Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFFL" edc:desc="Tx Event FIFO Full Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFLL" edc:desc="Tx Event FIFO Event Lost Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSWL" edc:desc="Timestamp Wraparound Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MRAFL" edc:desc="Message RAM Access Failure Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOOL" edc:desc="Timeout Occurred Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRXL" edc:desc="Message stored to Dedicated Receive Buffer Interrupt Line" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ELOL" edc:desc="Error Logging Overflow Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EPL" edc:desc="Error Passive Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EWL" edc:desc="Warning Status Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BOL" edc:desc="Bus_Off Status Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDIL" edc:desc="Watchdog Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEAL" edc:desc="Protocol Error in Arbitration Phase Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEDL" edc:desc="Protocol Error in Data Phase Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARAL" edc:desc="Access to Reserved Address Line" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005805C" edc:access="------------------------------nn" edc:cname="MCAN0_ILE" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="EINT0" edc:desc="Enable Interrupt Line 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EINT1" edc:desc="Enable Interrupt Line 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40058060" edc:offset="0x20"/>
      <edc:SFRDef edc:_addr="0x40058080" edc:access="--------------------------nnnnnn" edc:cname="MCAN0_GFC" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="RRFE" edc:desc="Reject Remote Frames Extended" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter remote frames with 29-bit extended IDs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="REJECT" edc:desc="Reject all remote frames with 29-bit extended IDs." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RRFS" edc:desc="Reject Remote Frames Standard" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter remote frames with 11-bit standard IDs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="REJECT" edc:desc="Reject all remote frames with 11-bit standard IDs." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ANFE" edc:desc="Accept Non-matching Frames Extended" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="RX_FIFO_0" edc:desc="Accept in Rx FIFO 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RX_FIFO_1" edc:desc="Accept in Rx FIFO 1" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ANFS" edc:desc="Accept Non-matching Frames Standard" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="RX_FIFO_0" edc:desc="Accept in Rx FIFO 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RX_FIFO_1" edc:desc="Accept in Rx FIFO 1" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058084" edc:access="--------nnnnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN0_SIDFC" edc:impl="0xFFFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FLSSA" edc:desc="Filter List Standard Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="LSS" edc:desc="List Size Standard" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058088" edc:access="---------nnnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN0_XIDFC" edc:impl="0x7FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FLESA" edc:desc="Filter List Extended Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="LSE" edc:desc="List Size Extended" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4005808C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40058090" edc:access="---nnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_XIDAM" edc:impl="0x1FFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="EIDM" edc:desc="Extended ID Mask" edc:nzwidth="0x1D"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058094" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="MCAN0_HPMS" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="BIDX" edc:desc="Buffer Index" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="MSI" edc:desc="Message Storage Indicator" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NO_FIFO_SEL" edc:desc="No FIFO selected." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOST" edc:desc="FIFO message lost." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIFO_0" edc:desc="Message stored in FIFO 0." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="FIFO_1" edc:desc="Message stored in FIFO 1." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIDX" edc:desc="Filter Index" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="FLST" edc:desc="Filter List" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40058098" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_NDAT1" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="ND0" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND1" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND2" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND3" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND4" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND5" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND6" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND7" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND8" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND9" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND10" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND11" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND12" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND13" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND14" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND15" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND16" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND17" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND18" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND19" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND20" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND21" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND22" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND23" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND24" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND25" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND26" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND27" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND28" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND29" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND30" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND31" edc:desc="New Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005809C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_NDAT2" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="ND32" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND33" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND34" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND35" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND36" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND37" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND38" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND39" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND40" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND41" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND42" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND43" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND44" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND45" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND46" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND47" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND48" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND49" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND50" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND51" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND52" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND53" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND54" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND55" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND56" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND57" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND58" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND59" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND60" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND61" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND62" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND63" edc:desc="New Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580A0" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN0_RXF0C" edc:impl="0xFF7FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F0SA" edc:desc="Receive FIFO 0 Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="F0S" edc:desc="Receive FIFO 0 Size" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F0WM" edc:desc="Receive FIFO 0 Watermark" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="F0OM" edc:desc="FIFO 0 Operation Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580A4" edc:access="------rr--rrrrrr--rrrrrr-rrrrrrr" edc:cname="MCAN0_RXF0S" edc:impl="0x33F3F7F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="F0FL" edc:desc="Receive FIFO 0 Fill Level" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F0GI" edc:desc="Receive FIFO 0 Get Index" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F0PI" edc:desc="Receive FIFO 0 Put Index" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F0F" edc:desc="Receive FIFO 0 Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0L" edc:desc="Receive FIFO 0 Message Lost" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580A8" edc:access="--------------------------nnnnnn" edc:cname="MCAN0_RXF0A" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="F0AI" edc:desc="Receive FIFO 0 Acknowledge Index" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580AC" edc:access="----------------nnnnnnnnnnnnnn--" edc:cname="MCAN0_RXBC" edc:impl="0xFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RBSA" edc:desc="Receive Buffer Start Address" edc:nzwidth="0xE"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580B0" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN0_RXF1C" edc:impl="0xFF7FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F1SA" edc:desc="Receive FIFO 1 Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="F1S" edc:desc="Receive FIFO 1 Size" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F1WM" edc:desc="Receive FIFO 1 Watermark" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="F1OM" edc:desc="FIFO 1 Operation Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580B4" edc:access="rr----rr--rrrrrr--rrrrrr-rrrrrrr" edc:cname="MCAN0_RXF1S" edc:impl="0xC33F3F7F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="F1FL" edc:desc="Receive FIFO 1 Fill Level" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F1GI" edc:desc="Receive FIFO 1 Get Index" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F1PI" edc:desc="Receive FIFO 1 Put Index" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F1F" edc:desc="Receive FIFO 1 Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1L" edc:desc="Receive FIFO 1 Message Lost" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DMS" edc:desc="Debug Message Status" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle state, wait for reception of debug messages, DMA request is cleared." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MSG_A" edc:desc="Debug message A received." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MSG_AB" edc:desc="Debug messages A, B received." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MSG_ABC" edc:desc="Debug messages A, B, C received, DMA request is set." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580B8" edc:access="--------------------------nnnnnn" edc:cname="MCAN0_RXF1A" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="F1AI" edc:desc="Receive FIFO 1 Acknowledge Index" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580BC" edc:access="---------------------nnn-nnn-nnn" edc:cname="MCAN0_RXESC" edc:impl="0x777" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="F0DS" edc:desc="Receive FIFO 0 Data Field Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_8_BYTE" edc:desc="8-byte data field" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_12_BYTE" edc:desc="12-byte data field" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16_BYTE" edc:desc="16-byte data field" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_20_BYTE" edc:desc="20-byte data field" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24_BYTE" edc:desc="24-byte data field" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BYTE" edc:desc="32-byte data field" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_48_BYTE" edc:desc="48-byte data field" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_64_BYTE" edc:desc="64-byte data field" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F1DS" edc:desc="Receive FIFO 1 Data Field Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_8_BYTE" edc:desc="8-byte data field" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_12_BYTE" edc:desc="12-byte data field" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16_BYTE" edc:desc="16-byte data field" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_20_BYTE" edc:desc="20-byte data field" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24_BYTE" edc:desc="24-byte data field" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BYTE" edc:desc="32-byte data field" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_48_BYTE" edc:desc="48-byte data field" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_64_BYTE" edc:desc="64-byte data field" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RBDS" edc:desc="Receive Buffer Data Field Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_8_BYTE" edc:desc="8-byte data field" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_12_BYTE" edc:desc="12-byte data field" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16_BYTE" edc:desc="16-byte data field" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_20_BYTE" edc:desc="20-byte data field" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24_BYTE" edc:desc="24-byte data field" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BYTE" edc:desc="32-byte data field" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_48_BYTE" edc:desc="48-byte data field" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_64_BYTE" edc:desc="64-byte data field" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580C0" edc:access="-nnnnnnn--nnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN0_TXBC" edc:impl="0x7F3FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TBSA" edc:desc="Tx Buffers Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="NDTB" edc:desc="Number of Dedicated Transmit Buffers" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TFQS" edc:desc="Transmit FIFO/Queue Size" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="TFQM" edc:desc="Tx FIFO/Queue Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580C4" edc:access="----------rrrrrr---rrrrr--rrrrrr" edc:cname="MCAN0_TXFQS" edc:impl="0x3F1F3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TFFL" edc:desc="Tx FIFO Free Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TFGI" edc:desc="Tx FIFO Get Index" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TFQPI" edc:desc="Tx FIFO/Queue Put Index" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="TFQF" edc:desc="Tx FIFO/Queue Full" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580C8" edc:access="-----------------------------nnn" edc:cname="MCAN0_TXESC" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TBDS" edc:desc="Tx Buffer Data Field Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_8_BYTE" edc:desc="8-byte data field" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_12_BYTE" edc:desc="12-byte data field" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16_BYTE" edc:desc="16-byte data field" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_20_BYTE" edc:desc="20-byte data field" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24_BYTE" edc:desc="24-byte data field" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BYTE" edc:desc="32-byte data field" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_48_BYTE" edc:desc="48- byte data field" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_64_BYTE" edc:desc="64-byte data field" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580CC" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN0_TXBRP" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TRP0" edc:desc="Transmission Request Pending for Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP1" edc:desc="Transmission Request Pending for Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP2" edc:desc="Transmission Request Pending for Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP3" edc:desc="Transmission Request Pending for Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP4" edc:desc="Transmission Request Pending for Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP5" edc:desc="Transmission Request Pending for Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP6" edc:desc="Transmission Request Pending for Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP7" edc:desc="Transmission Request Pending for Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP8" edc:desc="Transmission Request Pending for Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP9" edc:desc="Transmission Request Pending for Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP10" edc:desc="Transmission Request Pending for Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP11" edc:desc="Transmission Request Pending for Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP12" edc:desc="Transmission Request Pending for Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP13" edc:desc="Transmission Request Pending for Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP14" edc:desc="Transmission Request Pending for Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP15" edc:desc="Transmission Request Pending for Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP16" edc:desc="Transmission Request Pending for Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP17" edc:desc="Transmission Request Pending for Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP18" edc:desc="Transmission Request Pending for Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP19" edc:desc="Transmission Request Pending for Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP20" edc:desc="Transmission Request Pending for Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP21" edc:desc="Transmission Request Pending for Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP22" edc:desc="Transmission Request Pending for Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP23" edc:desc="Transmission Request Pending for Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP24" edc:desc="Transmission Request Pending for Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP25" edc:desc="Transmission Request Pending for Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP26" edc:desc="Transmission Request Pending for Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP27" edc:desc="Transmission Request Pending for Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP28" edc:desc="Transmission Request Pending for Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP29" edc:desc="Transmission Request Pending for Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP30" edc:desc="Transmission Request Pending for Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP31" edc:desc="Transmission Request Pending for Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580D0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_TXBAR" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="AR0" edc:desc="Add Request for Transmit Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR1" edc:desc="Add Request for Transmit Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR2" edc:desc="Add Request for Transmit Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR3" edc:desc="Add Request for Transmit Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR4" edc:desc="Add Request for Transmit Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR5" edc:desc="Add Request for Transmit Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR6" edc:desc="Add Request for Transmit Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR7" edc:desc="Add Request for Transmit Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR8" edc:desc="Add Request for Transmit Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR9" edc:desc="Add Request for Transmit Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR10" edc:desc="Add Request for Transmit Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR11" edc:desc="Add Request for Transmit Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR12" edc:desc="Add Request for Transmit Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR13" edc:desc="Add Request for Transmit Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR14" edc:desc="Add Request for Transmit Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR15" edc:desc="Add Request for Transmit Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR16" edc:desc="Add Request for Transmit Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR17" edc:desc="Add Request for Transmit Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR18" edc:desc="Add Request for Transmit Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR19" edc:desc="Add Request for Transmit Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR20" edc:desc="Add Request for Transmit Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR21" edc:desc="Add Request for Transmit Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR22" edc:desc="Add Request for Transmit Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR23" edc:desc="Add Request for Transmit Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR24" edc:desc="Add Request for Transmit Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR25" edc:desc="Add Request for Transmit Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR26" edc:desc="Add Request for Transmit Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR27" edc:desc="Add Request for Transmit Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR28" edc:desc="Add Request for Transmit Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR29" edc:desc="Add Request for Transmit Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR30" edc:desc="Add Request for Transmit Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR31" edc:desc="Add Request for Transmit Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580D4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_TXBCR" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="CR0" edc:desc="Cancellation Request for Transmit Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR1" edc:desc="Cancellation Request for Transmit Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR2" edc:desc="Cancellation Request for Transmit Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR3" edc:desc="Cancellation Request for Transmit Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR4" edc:desc="Cancellation Request for Transmit Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR5" edc:desc="Cancellation Request for Transmit Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR6" edc:desc="Cancellation Request for Transmit Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR7" edc:desc="Cancellation Request for Transmit Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR8" edc:desc="Cancellation Request for Transmit Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR9" edc:desc="Cancellation Request for Transmit Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR10" edc:desc="Cancellation Request for Transmit Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR11" edc:desc="Cancellation Request for Transmit Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR12" edc:desc="Cancellation Request for Transmit Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR13" edc:desc="Cancellation Request for Transmit Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR14" edc:desc="Cancellation Request for Transmit Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR15" edc:desc="Cancellation Request for Transmit Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR16" edc:desc="Cancellation Request for Transmit Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR17" edc:desc="Cancellation Request for Transmit Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR18" edc:desc="Cancellation Request for Transmit Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR19" edc:desc="Cancellation Request for Transmit Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR20" edc:desc="Cancellation Request for Transmit Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR21" edc:desc="Cancellation Request for Transmit Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR22" edc:desc="Cancellation Request for Transmit Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR23" edc:desc="Cancellation Request for Transmit Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR24" edc:desc="Cancellation Request for Transmit Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR25" edc:desc="Cancellation Request for Transmit Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR26" edc:desc="Cancellation Request for Transmit Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR27" edc:desc="Cancellation Request for Transmit Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR28" edc:desc="Cancellation Request for Transmit Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR29" edc:desc="Cancellation Request for Transmit Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR30" edc:desc="Cancellation Request for Transmit Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR31" edc:desc="Cancellation Request for Transmit Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580D8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN0_TXBTO" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TO0" edc:desc="Transmission Occurred for Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO1" edc:desc="Transmission Occurred for Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO2" edc:desc="Transmission Occurred for Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO3" edc:desc="Transmission Occurred for Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO4" edc:desc="Transmission Occurred for Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO5" edc:desc="Transmission Occurred for Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO6" edc:desc="Transmission Occurred for Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO7" edc:desc="Transmission Occurred for Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO8" edc:desc="Transmission Occurred for Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO9" edc:desc="Transmission Occurred for Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO10" edc:desc="Transmission Occurred for Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO11" edc:desc="Transmission Occurred for Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO12" edc:desc="Transmission Occurred for Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO13" edc:desc="Transmission Occurred for Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO14" edc:desc="Transmission Occurred for Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO15" edc:desc="Transmission Occurred for Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO16" edc:desc="Transmission Occurred for Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO17" edc:desc="Transmission Occurred for Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO18" edc:desc="Transmission Occurred for Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO19" edc:desc="Transmission Occurred for Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO20" edc:desc="Transmission Occurred for Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO21" edc:desc="Transmission Occurred for Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO22" edc:desc="Transmission Occurred for Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO23" edc:desc="Transmission Occurred for Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO24" edc:desc="Transmission Occurred for Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO25" edc:desc="Transmission Occurred for Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO26" edc:desc="Transmission Occurred for Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO27" edc:desc="Transmission Occurred for Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO28" edc:desc="Transmission Occurred for Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO29" edc:desc="Transmission Occurred for Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO30" edc:desc="Transmission Occurred for Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO31" edc:desc="Transmission Occurred for Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580DC" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN0_TXBCF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="CF0" edc:desc="Cancellation Finished for Transmit Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF1" edc:desc="Cancellation Finished for Transmit Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF2" edc:desc="Cancellation Finished for Transmit Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF3" edc:desc="Cancellation Finished for Transmit Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF4" edc:desc="Cancellation Finished for Transmit Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF5" edc:desc="Cancellation Finished for Transmit Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF6" edc:desc="Cancellation Finished for Transmit Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF7" edc:desc="Cancellation Finished for Transmit Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF8" edc:desc="Cancellation Finished for Transmit Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF9" edc:desc="Cancellation Finished for Transmit Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF10" edc:desc="Cancellation Finished for Transmit Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF11" edc:desc="Cancellation Finished for Transmit Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF12" edc:desc="Cancellation Finished for Transmit Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF13" edc:desc="Cancellation Finished for Transmit Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF14" edc:desc="Cancellation Finished for Transmit Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF15" edc:desc="Cancellation Finished for Transmit Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF16" edc:desc="Cancellation Finished for Transmit Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF17" edc:desc="Cancellation Finished for Transmit Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF18" edc:desc="Cancellation Finished for Transmit Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF19" edc:desc="Cancellation Finished for Transmit Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF20" edc:desc="Cancellation Finished for Transmit Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF21" edc:desc="Cancellation Finished for Transmit Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF22" edc:desc="Cancellation Finished for Transmit Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF23" edc:desc="Cancellation Finished for Transmit Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF24" edc:desc="Cancellation Finished for Transmit Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF25" edc:desc="Cancellation Finished for Transmit Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF26" edc:desc="Cancellation Finished for Transmit Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF27" edc:desc="Cancellation Finished for Transmit Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF28" edc:desc="Cancellation Finished for Transmit Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF29" edc:desc="Cancellation Finished for Transmit Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF30" edc:desc="Cancellation Finished for Transmit Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF31" edc:desc="Cancellation Finished for Transmit Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_TXBTIE" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="TIE0" edc:desc="Transmission Interrupt Enable for Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE1" edc:desc="Transmission Interrupt Enable for Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE2" edc:desc="Transmission Interrupt Enable for Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE3" edc:desc="Transmission Interrupt Enable for Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE4" edc:desc="Transmission Interrupt Enable for Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE5" edc:desc="Transmission Interrupt Enable for Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE6" edc:desc="Transmission Interrupt Enable for Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE7" edc:desc="Transmission Interrupt Enable for Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE8" edc:desc="Transmission Interrupt Enable for Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE9" edc:desc="Transmission Interrupt Enable for Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE10" edc:desc="Transmission Interrupt Enable for Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE11" edc:desc="Transmission Interrupt Enable for Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE12" edc:desc="Transmission Interrupt Enable for Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE13" edc:desc="Transmission Interrupt Enable for Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE14" edc:desc="Transmission Interrupt Enable for Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE15" edc:desc="Transmission Interrupt Enable for Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE16" edc:desc="Transmission Interrupt Enable for Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE17" edc:desc="Transmission Interrupt Enable for Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE18" edc:desc="Transmission Interrupt Enable for Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE19" edc:desc="Transmission Interrupt Enable for Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE20" edc:desc="Transmission Interrupt Enable for Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE21" edc:desc="Transmission Interrupt Enable for Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE22" edc:desc="Transmission Interrupt Enable for Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE23" edc:desc="Transmission Interrupt Enable for Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE24" edc:desc="Transmission Interrupt Enable for Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE25" edc:desc="Transmission Interrupt Enable for Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE26" edc:desc="Transmission Interrupt Enable for Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE27" edc:desc="Transmission Interrupt Enable for Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE28" edc:desc="Transmission Interrupt Enable for Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE29" edc:desc="Transmission Interrupt Enable for Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE30" edc:desc="Transmission Interrupt Enable for Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE31" edc:desc="Transmission Interrupt Enable for Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN0_TXBCIE" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="CFIE0" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE1" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE2" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE3" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE4" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE5" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE6" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE7" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE8" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE9" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE10" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE11" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE12" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE13" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE14" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE15" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE16" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE17" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE18" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE19" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE20" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE21" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE22" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE23" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE24" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE25" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE26" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE27" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE28" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE29" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE30" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE31" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400580E8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400580F0" edc:access="--nnnnnn--nnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN0_TXEFC" edc:impl="0x3F3FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EFSA" edc:desc="Event FIFO Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="EFS" edc:desc="Event FIFO Size" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EFWM" edc:desc="Event FIFO Watermark" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580F4" edc:access="------rr---rrrrr---rrrrr--rrrrrr" edc:cname="MCAN0_TXEFS" edc:impl="0x31F1F3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="EFFL" edc:desc="Event FIFO Fill Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EFGI" edc:desc="Event FIFO Get Index" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="EFPI" edc:desc="Event FIFO Put Index" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="EFF" edc:desc="Event FIFO Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFL" edc:desc="Tx Event FIFO Element Lost" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400580F8" edc:access="---------------------------nnnnn" edc:cname="MCAN0_TXEFA" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN0">
            <edc:SFRFieldDef edc:cname="EFAI" edc:desc="Event FIFO Acknowledge Index" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400580FC" edc:offset="0x3F04"/>
      <edc:SFRDef edc:_addr="0x4005C000" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN1_CREL" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="DAY" edc:desc="Timestamp Day" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="MON" edc:desc="Timestamp Month" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:desc="Timestamp Year" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="SUBSTEP" edc:desc="Sub-step of Core Release" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="STEP" edc:desc="Step of Core Release" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="REL" edc:desc="Core Release" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C004" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN1_ENDN" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="ETV" edc:desc="Endianness Test Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C008" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_CUST" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="CSV" edc:desc="Customer-specific Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C00C" edc:access="--------n--nnnnn---nnnnnnnnn-nnn" edc:cname="MCAN1_DBTP" edc:impl="0x9F1FF7" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="DSJW" edc:desc="Data (Re) Synchronization Jump Width" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DTSEG2" edc:desc="Data Time Segment After Sample Point" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="DTSEG1" edc:desc="Data Time Segment Before Sample Point" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DBRP" edc:desc="Data Bit Rate Prescaler" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TDC" edc:desc="Transmitter Delay Compensation" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Transmitter Delay Compensation disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Transmitter Delay Compensation enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C010" edc:access="------------------------nnnn----" edc:cname="MCAN1_TEST" edc:impl="0xF0" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LBCK" edc:desc="Loop Back Mode (read/write)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Reset value. Loop Back mode is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Loop Back mode is enabled (see Section 1.5.1.9)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TX" edc:desc="Control of Transmit Pin (read/write)" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Reset value, CANTX controlled by the CAN Core, updated at the end of the CAN bit time." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SAMPLE_POINT_MONITORING" edc:desc="Sample Point can be monitored at pin CANTX." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DOMINANT" edc:desc="Dominant ('0') level at pin CANTX." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="RECESSIVE" edc:desc="Recessive ('1') at pin CANTX." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RX" edc:desc="Receive Pin (read-only)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C014" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="MCAN1_RWD" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="WDC" edc:desc="Watchdog Configuration (read/write)" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="WDV" edc:desc="Watchdog Value (read-only)" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C018" edc:access="----------------nnnn--nnnnnnnnnn" edc:cname="MCAN1_CCCR" edc:impl="0xF3FF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="INIT" edc:desc="Initialization (read/write)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Normal operation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Initialization is started." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CCE" edc:desc="Configuration Change Enable (read/write, write protection)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PROTECTED" edc:desc="The processor has no write access to the protected configuration registers." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CONFIGURABLE" edc:desc="The processor has write access to the protected configuration registers (while MCAN_CCCR.INIT = '1')." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASM" edc:desc="Restricted Operation Mode (read/write, write protection against '1')" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal CAN operation." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESTRICTED" edc:desc="Restricted Operation mode active." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSA" edc:desc="Clock Stop Acknowledge (read-only)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSR" edc:desc="Clock Stop Request (read/write)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_CLOCK_STOP" edc:desc="No clock stop is requested." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK_STOP" edc:desc="Clock stop requested. When clock stop is requested, first INIT and then CSA will be set after all pending transfer requests have been completed and the CAN bus reached idle." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MON" edc:desc="Bus Monitoring Mode (read/write, write protection against '1')" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bus Monitoring mode is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Bus Monitoring mode is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAR" edc:desc="Disable Automatic Retransmission (read/write, write protection)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AUTO_RETX" edc:desc="Automatic retransmission of messages not transmitted successfully enabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="NO_AUTO_RETX" edc:desc="Automatic retransmission disabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TEST" edc:desc="Test Mode Enable (read/write, write protection against '1')" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Normal operation, MCAN_TEST register holds reset values." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Test mode, write access to MCAN_TEST register enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FDOE" edc:desc="CAN FD Operation Enable (read/write, write protection)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="FD operation disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="FD operation enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BRSE" edc:desc="Bit Rate Switching Enable (read/write, write protection)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bit rate switching for transmissions disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Bit rate switching for transmissions enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PXHD" edc:desc="Protocol Exception Event Handling (read/write, write protection)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EFBI" edc:desc="Edge Filtering during Bus Integration (read/write, write protection)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TXP" edc:desc="Transmit Pause (read/write, write protection)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NISO" edc:desc="Non-ISO Operation" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C01C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:cname="MCAN1_NBTP" edc:impl="0xFFFFFF7F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="NTSEG2" edc:desc="Nominal Time Segment After Sample Point" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NTSEG1" edc:desc="Nominal Time Segment Before Sample Point" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="NBRP" edc:desc="Nominal Bit Rate Prescaler" edc:nzwidth="0x9"/>
            <edc:SFRFieldDef edc:cname="NSJW" edc:desc="Nominal (Re) Synchronization Jump Width" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C020" edc:access="------------nnnn--------------nn" edc:cname="MCAN1_TSCC" edc:impl="0xF0003" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TSS" edc:desc="Timestamp Select" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="ALWAYS_0" edc:desc="Timestamp counter value always 0x0000" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TCP_INC" edc:desc="Timestamp counter value incremented according to TCP" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EXT_TIMESTAMP" edc:desc="External timestamp counter value used" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="TCP" edc:desc="Timestamp Counter Prescaler" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C024" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="MCAN1_TSCV" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TSC" edc:desc="Timestamp Counter (cleared on write)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C028" edc:access="nnnnnnnnnnnnnnnn-------------nnn" edc:cname="MCAN1_TOCC" edc:impl="0xFFFF0007" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="ETOC" edc:desc="Enable Timeout Counter" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_TIMEOUT" edc:desc="Timeout Counter disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TOS_CONTROLLED" edc:desc="Timeout Counter enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TOS" edc:desc="Timeout Select" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="CONTINUOUS" edc:desc="Continuous operation" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TX_EV_TIMEOUT" edc:desc="Timeout controlled by Tx Event FIFO" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RX0_EV_TIMEOUT" edc:desc="Timeout controlled by Receive FIFO 0" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="RX1_EV_TIMEOUT" edc:desc="Timeout controlled by Receive FIFO 1" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="TOP" edc:desc="Timeout Period" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C02C" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="MCAN1_TOCV" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TOC" edc:desc="Timeout Counter (cleared on write)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4005C030" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x4005C040" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN1_ECR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TEC" edc:desc="Transmit Error Counter" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="REC" edc:desc="Receive Error Counter" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="RP" edc:desc="Receive Error Passive" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CEL" edc:desc="CAN Error Logging (cleared on read)" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C044" edc:access="---------rrrrrrr-rrrrrrrrrrrrrrr" edc:cname="MCAN1_PSR" edc:impl="0x7F7FFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="LEC" edc:desc="Last Error Code (set to 111 on read)" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="NO_ERROR" edc:desc="No error occurred since LEC has been reset by successful reception or transmission." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="STUFF_ERROR" edc:desc="More than 5 equal bits in a sequence have occurred in a part of a received message where this is not allowed." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FORM_ERROR" edc:desc="A fixed format part of a received frame has the wrong format." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ACK_ERROR" edc:desc="The message transmitted by the MCAN was not acknowledged by another node." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="BIT1_ERROR" edc:desc="During transmission of a message (with the exception of the arbitration field), the device tried to send a recessive level (bit of logical value '1'), but the monitored bus value was dominant." edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="BIT0_ERROR" edc:desc="During transmission of a message (or acknowledge bit, or active error flag, or overload flag), the device tried to send a dominant level (data or identifier bit logical value '0'), but the monitored bus value was recessive. During Bus_Off recovery, this status is set each time a sequence of 11 recessive bits has been monitored. This enables the processor to monitor the proceeding of the Bus_Off recovery sequence (indicating the bus is not stuck at dominant or continuously disturbed)." edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CRC_ERROR" edc:desc="The CRC check sum of a received message was incorrect. The CRC of an incoming message does not match the CRC calculated from the received data." edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="NO_CHANGE" edc:desc="Any read access to the Protocol Status Register re-initializes the LEC to '7'. When the LEC shows value '7', no CAN bus event was detected since the last processor read access to the Protocol Status Register." edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACT" edc:desc="Activity" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONIZING" edc:desc="Node is synchronizing on CAN communication" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Node is neither receiver nor transmitter" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RECEIVER" edc:desc="Node is operating as receiver" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TRANSMITTER" edc:desc="Node is operating as transmitter" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EP" edc:desc="Error Passive" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EW" edc:desc="Warning Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BO" edc:desc="Bus_Off Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DLEC" edc:desc="Data Phase Last Error Code (set to 111 on read)" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="RESI" edc:desc="ESI Flag of Last Received CAN FD Message (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBRS" edc:desc="BRS Flag of Last Received CAN FD Message (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RFDF" edc:desc="Received a CAN FD Message (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PXE" edc:desc="Protocol Exception Event (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TDCV" edc:desc="Transmitter Delay Compensation Value" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C048" edc:access="-----------------nnnnnnn-nnnnnnn" edc:cname="MCAN1_TDCR" edc:impl="0x7F7F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TDCF" edc:desc="Transmitter Delay Compensation Filter" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TDCO" edc:desc="Transmitter Delay Compensation Offset" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4005C04C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x4005C050" edc:access="--nnnnnnnn--nnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_IR" edc:impl="0x3FCFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="RF0N" edc:desc="Receive FIFO 0 New Message" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0W" edc:desc="Receive FIFO 0 Watermark Reached" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0F" edc:desc="Receive FIFO 0 Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0L" edc:desc="Receive FIFO 0 Message Lost" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1N" edc:desc="Receive FIFO 1 New Message" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1W" edc:desc="Receive FIFO 1 Watermark Reached" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1F" edc:desc="Receive FIFO 1 Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1L" edc:desc="Receive FIFO 1 Message Lost" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HPM" edc:desc="High Priority Message" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TC" edc:desc="Transmission Completed" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCF" edc:desc="Transmission Cancellation Finished" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TFE" edc:desc="Tx FIFO Empty" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFN" edc:desc="Tx Event FIFO New Entry" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFW" edc:desc="Tx Event FIFO Watermark Reached" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFF" edc:desc="Tx Event FIFO Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFL" edc:desc="Tx Event FIFO Element Lost" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSW" edc:desc="Timestamp Wraparound" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MRAF" edc:desc="Message RAM Access Failure" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOO" edc:desc="Timeout Occurred" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRX" edc:desc="Message stored to Dedicated Receive Buffer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ELO" edc:desc="Error Logging Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EP" edc:desc="Error Passive" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EW" edc:desc="Warning Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BO" edc:desc="Bus_Off Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDI" edc:desc="Watchdog Interrupt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEA" edc:desc="Protocol Error in Arbitration Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PED" edc:desc="Protocol Error in Data Phase" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARA" edc:desc="Access to Reserved Address" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C054" edc:access="--nnnnnnnn--nnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_IE" edc:impl="0x3FCFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="RF0NE" edc:desc="Receive FIFO 0 New Message Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0WE" edc:desc="Receive FIFO 0 Watermark Reached Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0FE" edc:desc="Receive FIFO 0 Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0LE" edc:desc="Receive FIFO 0 Message Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1NE" edc:desc="Receive FIFO 1 New Message Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1WE" edc:desc="Receive FIFO 1 Watermark Reached Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1FE" edc:desc="Receive FIFO 1 Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1LE" edc:desc="Receive FIFO 1 Message Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HPME" edc:desc="High Priority Message Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCE" edc:desc="Transmission Completed Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCFE" edc:desc="Transmission Cancellation Finished Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TFEE" edc:desc="Tx FIFO Empty Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFNE" edc:desc="Tx Event FIFO New Entry Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFWE" edc:desc="Tx Event FIFO Watermark Reached Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFFE" edc:desc="Tx Event FIFO Full Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFLE" edc:desc="Tx Event FIFO Event Lost Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSWE" edc:desc="Timestamp Wraparound Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MRAFE" edc:desc="Message RAM Access Failure Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOOE" edc:desc="Timeout Occurred Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRXE" edc:desc="Message stored to Dedicated Receive Buffer Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ELOE" edc:desc="Error Logging Overflow Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EPE" edc:desc="Error Passive Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EWE" edc:desc="Warning Status Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BOE" edc:desc="Bus_Off Status Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDIE" edc:desc="Watchdog Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEAE" edc:desc="Protocol Error in Arbitration Phase Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEDE" edc:desc="Protocol Error in Data Phase Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARAE" edc:desc="Access to Reserved Address Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C058" edc:access="--nnnnnnnn--nnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_ILS" edc:impl="0x3FCFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="RF0NL" edc:desc="Receive FIFO 0 New Message Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0WL" edc:desc="Receive FIFO 0 Watermark Reached Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0FL" edc:desc="Receive FIFO 0 Full Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0LL" edc:desc="Receive FIFO 0 Message Lost Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1NL" edc:desc="Receive FIFO 1 New Message Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1WL" edc:desc="Receive FIFO 1 Watermark Reached Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1FL" edc:desc="Receive FIFO 1 Full Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1LL" edc:desc="Receive FIFO 1 Message Lost Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HPML" edc:desc="High Priority Message Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCL" edc:desc="Transmission Completed Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCFL" edc:desc="Transmission Cancellation Finished Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TFEL" edc:desc="Tx FIFO Empty Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFNL" edc:desc="Tx Event FIFO New Entry Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFWL" edc:desc="Tx Event FIFO Watermark Reached Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFFL" edc:desc="Tx Event FIFO Full Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFLL" edc:desc="Tx Event FIFO Event Lost Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TSWL" edc:desc="Timestamp Wraparound Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MRAFL" edc:desc="Message RAM Access Failure Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TOOL" edc:desc="Timeout Occurred Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DRXL" edc:desc="Message stored to Dedicated Receive Buffer Interrupt Line" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ELOL" edc:desc="Error Logging Overflow Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EPL" edc:desc="Error Passive Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EWL" edc:desc="Warning Status Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BOL" edc:desc="Bus_Off Status Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDIL" edc:desc="Watchdog Interrupt Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEAL" edc:desc="Protocol Error in Arbitration Phase Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PEDL" edc:desc="Protocol Error in Data Phase Line" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ARAL" edc:desc="Access to Reserved Address Line" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C05C" edc:access="------------------------------nn" edc:cname="MCAN1_ILE" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="EINT0" edc:desc="Enable Interrupt Line 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EINT1" edc:desc="Enable Interrupt Line 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4005C060" edc:offset="0x20"/>
      <edc:SFRDef edc:_addr="0x4005C080" edc:access="--------------------------nnnnnn" edc:cname="MCAN1_GFC" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="RRFE" edc:desc="Reject Remote Frames Extended" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter remote frames with 29-bit extended IDs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="REJECT" edc:desc="Reject all remote frames with 29-bit extended IDs." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RRFS" edc:desc="Reject Remote Frames Standard" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter remote frames with 11-bit standard IDs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="REJECT" edc:desc="Reject all remote frames with 11-bit standard IDs." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ANFE" edc:desc="Accept Non-matching Frames Extended" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="RX_FIFO_0" edc:desc="Accept in Rx FIFO 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RX_FIFO_1" edc:desc="Accept in Rx FIFO 1" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ANFS" edc:desc="Accept Non-matching Frames Standard" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="RX_FIFO_0" edc:desc="Accept in Rx FIFO 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RX_FIFO_1" edc:desc="Accept in Rx FIFO 1" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C084" edc:access="--------nnnnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN1_SIDFC" edc:impl="0xFFFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FLSSA" edc:desc="Filter List Standard Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="LSS" edc:desc="List Size Standard" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C088" edc:access="---------nnnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN1_XIDFC" edc:impl="0x7FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FLESA" edc:desc="Filter List Extended Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="LSE" edc:desc="List Size Extended" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4005C08C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x4005C090" edc:access="---nnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_XIDAM" edc:impl="0x1FFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="EIDM" edc:desc="Extended ID Mask" edc:nzwidth="0x1D"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C094" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="MCAN1_HPMS" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="BIDX" edc:desc="Buffer Index" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="MSI" edc:desc="Message Storage Indicator" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NO_FIFO_SEL" edc:desc="No FIFO selected." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOST" edc:desc="FIFO message lost." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FIFO_0" edc:desc="Message stored in FIFO 0." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="FIFO_1" edc:desc="Message stored in FIFO 1." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIDX" edc:desc="Filter Index" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="FLST" edc:desc="Filter List" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C098" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_NDAT1" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="ND0" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND1" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND2" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND3" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND4" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND5" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND6" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND7" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND8" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND9" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND10" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND11" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND12" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND13" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND14" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND15" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND16" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND17" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND18" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND19" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND20" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND21" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND22" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND23" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND24" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND25" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND26" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND27" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND28" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND29" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND30" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND31" edc:desc="New Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C09C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_NDAT2" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="ND32" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND33" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND34" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND35" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND36" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND37" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND38" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND39" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND40" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND41" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND42" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND43" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND44" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND45" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND46" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND47" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND48" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND49" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND50" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND51" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND52" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND53" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND54" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND55" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND56" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND57" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND58" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND59" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND60" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND61" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND62" edc:desc="New Data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ND63" edc:desc="New Data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0A0" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN1_RXF0C" edc:impl="0xFF7FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F0SA" edc:desc="Receive FIFO 0 Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="F0S" edc:desc="Receive FIFO 0 Size" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F0WM" edc:desc="Receive FIFO 0 Watermark" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="F0OM" edc:desc="FIFO 0 Operation Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0A4" edc:access="------rr--rrrrrr--rrrrrr-rrrrrrr" edc:cname="MCAN1_RXF0S" edc:impl="0x33F3F7F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="F0FL" edc:desc="Receive FIFO 0 Fill Level" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F0GI" edc:desc="Receive FIFO 0 Get Index" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F0PI" edc:desc="Receive FIFO 0 Put Index" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F0F" edc:desc="Receive FIFO 0 Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF0L" edc:desc="Receive FIFO 0 Message Lost" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0A8" edc:access="--------------------------nnnnnn" edc:cname="MCAN1_RXF0A" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="F0AI" edc:desc="Receive FIFO 0 Acknowledge Index" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0AC" edc:access="----------------nnnnnnnnnnnnnn--" edc:cname="MCAN1_RXBC" edc:impl="0xFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RBSA" edc:desc="Receive Buffer Start Address" edc:nzwidth="0xE"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0B0" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN1_RXF1C" edc:impl="0xFF7FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F1SA" edc:desc="Receive FIFO 1 Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="F1S" edc:desc="Receive FIFO 1 Size" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F1WM" edc:desc="Receive FIFO 1 Watermark" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="F1OM" edc:desc="FIFO 1 Operation Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0B4" edc:access="rr----rr--rrrrrr--rrrrrr-rrrrrrr" edc:cname="MCAN1_RXF1S" edc:impl="0xC33F3F7F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="F1FL" edc:desc="Receive FIFO 1 Fill Level" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F1GI" edc:desc="Receive FIFO 1 Get Index" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F1PI" edc:desc="Receive FIFO 1 Put Index" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="F1F" edc:desc="Receive FIFO 1 Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RF1L" edc:desc="Receive FIFO 1 Message Lost" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DMS" edc:desc="Debug Message Status" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle state, wait for reception of debug messages, DMA request is cleared." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MSG_A" edc:desc="Debug message A received." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MSG_AB" edc:desc="Debug messages A, B received." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MSG_ABC" edc:desc="Debug messages A, B, C received, DMA request is set." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0B8" edc:access="--------------------------nnnnnn" edc:cname="MCAN1_RXF1A" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="F1AI" edc:desc="Receive FIFO 1 Acknowledge Index" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0BC" edc:access="---------------------nnn-nnn-nnn" edc:cname="MCAN1_RXESC" edc:impl="0x777" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="F0DS" edc:desc="Receive FIFO 0 Data Field Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_8_BYTE" edc:desc="8-byte data field" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_12_BYTE" edc:desc="12-byte data field" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16_BYTE" edc:desc="16-byte data field" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_20_BYTE" edc:desc="20-byte data field" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24_BYTE" edc:desc="24-byte data field" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BYTE" edc:desc="32-byte data field" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_48_BYTE" edc:desc="48-byte data field" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_64_BYTE" edc:desc="64-byte data field" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="F1DS" edc:desc="Receive FIFO 1 Data Field Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_8_BYTE" edc:desc="8-byte data field" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_12_BYTE" edc:desc="12-byte data field" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16_BYTE" edc:desc="16-byte data field" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_20_BYTE" edc:desc="20-byte data field" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24_BYTE" edc:desc="24-byte data field" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BYTE" edc:desc="32-byte data field" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_48_BYTE" edc:desc="48-byte data field" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_64_BYTE" edc:desc="64-byte data field" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RBDS" edc:desc="Receive Buffer Data Field Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_8_BYTE" edc:desc="8-byte data field" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_12_BYTE" edc:desc="12-byte data field" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16_BYTE" edc:desc="16-byte data field" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_20_BYTE" edc:desc="20-byte data field" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24_BYTE" edc:desc="24-byte data field" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BYTE" edc:desc="32-byte data field" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_48_BYTE" edc:desc="48-byte data field" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_64_BYTE" edc:desc="64-byte data field" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0C0" edc:access="-nnnnnnn--nnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN1_TXBC" edc:impl="0x7F3FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TBSA" edc:desc="Tx Buffers Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="NDTB" edc:desc="Number of Dedicated Transmit Buffers" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TFQS" edc:desc="Transmit FIFO/Queue Size" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="TFQM" edc:desc="Tx FIFO/Queue Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0C4" edc:access="----------rrrrrr---rrrrr--rrrrrr" edc:cname="MCAN1_TXFQS" edc:impl="0x3F1F3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TFFL" edc:desc="Tx FIFO Free Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TFGI" edc:desc="Tx FIFO Get Index" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TFQPI" edc:desc="Tx FIFO/Queue Put Index" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="TFQF" edc:desc="Tx FIFO/Queue Full" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0C8" edc:access="-----------------------------nnn" edc:cname="MCAN1_TXESC" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TBDS" edc:desc="Tx Buffer Data Field Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="_8_BYTE" edc:desc="8-byte data field" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_12_BYTE" edc:desc="12-byte data field" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16_BYTE" edc:desc="16-byte data field" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_20_BYTE" edc:desc="20-byte data field" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24_BYTE" edc:desc="24-byte data field" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_32_BYTE" edc:desc="32-byte data field" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_48_BYTE" edc:desc="48- byte data field" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_64_BYTE" edc:desc="64-byte data field" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0CC" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN1_TXBRP" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TRP0" edc:desc="Transmission Request Pending for Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP1" edc:desc="Transmission Request Pending for Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP2" edc:desc="Transmission Request Pending for Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP3" edc:desc="Transmission Request Pending for Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP4" edc:desc="Transmission Request Pending for Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP5" edc:desc="Transmission Request Pending for Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP6" edc:desc="Transmission Request Pending for Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP7" edc:desc="Transmission Request Pending for Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP8" edc:desc="Transmission Request Pending for Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP9" edc:desc="Transmission Request Pending for Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP10" edc:desc="Transmission Request Pending for Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP11" edc:desc="Transmission Request Pending for Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP12" edc:desc="Transmission Request Pending for Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP13" edc:desc="Transmission Request Pending for Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP14" edc:desc="Transmission Request Pending for Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP15" edc:desc="Transmission Request Pending for Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP16" edc:desc="Transmission Request Pending for Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP17" edc:desc="Transmission Request Pending for Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP18" edc:desc="Transmission Request Pending for Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP19" edc:desc="Transmission Request Pending for Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP20" edc:desc="Transmission Request Pending for Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP21" edc:desc="Transmission Request Pending for Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP22" edc:desc="Transmission Request Pending for Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP23" edc:desc="Transmission Request Pending for Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP24" edc:desc="Transmission Request Pending for Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP25" edc:desc="Transmission Request Pending for Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP26" edc:desc="Transmission Request Pending for Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP27" edc:desc="Transmission Request Pending for Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP28" edc:desc="Transmission Request Pending for Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP29" edc:desc="Transmission Request Pending for Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP30" edc:desc="Transmission Request Pending for Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRP31" edc:desc="Transmission Request Pending for Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0D0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_TXBAR" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="AR0" edc:desc="Add Request for Transmit Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR1" edc:desc="Add Request for Transmit Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR2" edc:desc="Add Request for Transmit Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR3" edc:desc="Add Request for Transmit Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR4" edc:desc="Add Request for Transmit Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR5" edc:desc="Add Request for Transmit Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR6" edc:desc="Add Request for Transmit Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR7" edc:desc="Add Request for Transmit Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR8" edc:desc="Add Request for Transmit Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR9" edc:desc="Add Request for Transmit Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR10" edc:desc="Add Request for Transmit Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR11" edc:desc="Add Request for Transmit Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR12" edc:desc="Add Request for Transmit Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR13" edc:desc="Add Request for Transmit Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR14" edc:desc="Add Request for Transmit Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR15" edc:desc="Add Request for Transmit Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR16" edc:desc="Add Request for Transmit Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR17" edc:desc="Add Request for Transmit Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR18" edc:desc="Add Request for Transmit Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR19" edc:desc="Add Request for Transmit Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR20" edc:desc="Add Request for Transmit Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR21" edc:desc="Add Request for Transmit Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR22" edc:desc="Add Request for Transmit Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR23" edc:desc="Add Request for Transmit Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR24" edc:desc="Add Request for Transmit Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR25" edc:desc="Add Request for Transmit Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR26" edc:desc="Add Request for Transmit Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR27" edc:desc="Add Request for Transmit Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR28" edc:desc="Add Request for Transmit Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR29" edc:desc="Add Request for Transmit Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR30" edc:desc="Add Request for Transmit Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AR31" edc:desc="Add Request for Transmit Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0D4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_TXBCR" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="CR0" edc:desc="Cancellation Request for Transmit Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR1" edc:desc="Cancellation Request for Transmit Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR2" edc:desc="Cancellation Request for Transmit Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR3" edc:desc="Cancellation Request for Transmit Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR4" edc:desc="Cancellation Request for Transmit Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR5" edc:desc="Cancellation Request for Transmit Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR6" edc:desc="Cancellation Request for Transmit Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR7" edc:desc="Cancellation Request for Transmit Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR8" edc:desc="Cancellation Request for Transmit Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR9" edc:desc="Cancellation Request for Transmit Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR10" edc:desc="Cancellation Request for Transmit Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR11" edc:desc="Cancellation Request for Transmit Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR12" edc:desc="Cancellation Request for Transmit Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR13" edc:desc="Cancellation Request for Transmit Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR14" edc:desc="Cancellation Request for Transmit Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR15" edc:desc="Cancellation Request for Transmit Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR16" edc:desc="Cancellation Request for Transmit Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR17" edc:desc="Cancellation Request for Transmit Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR18" edc:desc="Cancellation Request for Transmit Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR19" edc:desc="Cancellation Request for Transmit Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR20" edc:desc="Cancellation Request for Transmit Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR21" edc:desc="Cancellation Request for Transmit Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR22" edc:desc="Cancellation Request for Transmit Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR23" edc:desc="Cancellation Request for Transmit Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR24" edc:desc="Cancellation Request for Transmit Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR25" edc:desc="Cancellation Request for Transmit Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR26" edc:desc="Cancellation Request for Transmit Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR27" edc:desc="Cancellation Request for Transmit Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR28" edc:desc="Cancellation Request for Transmit Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR29" edc:desc="Cancellation Request for Transmit Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR30" edc:desc="Cancellation Request for Transmit Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CR31" edc:desc="Cancellation Request for Transmit Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0D8" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN1_TXBTO" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TO0" edc:desc="Transmission Occurred for Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO1" edc:desc="Transmission Occurred for Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO2" edc:desc="Transmission Occurred for Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO3" edc:desc="Transmission Occurred for Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO4" edc:desc="Transmission Occurred for Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO5" edc:desc="Transmission Occurred for Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO6" edc:desc="Transmission Occurred for Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO7" edc:desc="Transmission Occurred for Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO8" edc:desc="Transmission Occurred for Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO9" edc:desc="Transmission Occurred for Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO10" edc:desc="Transmission Occurred for Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO11" edc:desc="Transmission Occurred for Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO12" edc:desc="Transmission Occurred for Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO13" edc:desc="Transmission Occurred for Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO14" edc:desc="Transmission Occurred for Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO15" edc:desc="Transmission Occurred for Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO16" edc:desc="Transmission Occurred for Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO17" edc:desc="Transmission Occurred for Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO18" edc:desc="Transmission Occurred for Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO19" edc:desc="Transmission Occurred for Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO20" edc:desc="Transmission Occurred for Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO21" edc:desc="Transmission Occurred for Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO22" edc:desc="Transmission Occurred for Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO23" edc:desc="Transmission Occurred for Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO24" edc:desc="Transmission Occurred for Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO25" edc:desc="Transmission Occurred for Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO26" edc:desc="Transmission Occurred for Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO27" edc:desc="Transmission Occurred for Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO28" edc:desc="Transmission Occurred for Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO29" edc:desc="Transmission Occurred for Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO30" edc:desc="Transmission Occurred for Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TO31" edc:desc="Transmission Occurred for Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0DC" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MCAN1_TXBCF" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="CF0" edc:desc="Cancellation Finished for Transmit Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF1" edc:desc="Cancellation Finished for Transmit Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF2" edc:desc="Cancellation Finished for Transmit Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF3" edc:desc="Cancellation Finished for Transmit Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF4" edc:desc="Cancellation Finished for Transmit Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF5" edc:desc="Cancellation Finished for Transmit Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF6" edc:desc="Cancellation Finished for Transmit Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF7" edc:desc="Cancellation Finished for Transmit Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF8" edc:desc="Cancellation Finished for Transmit Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF9" edc:desc="Cancellation Finished for Transmit Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF10" edc:desc="Cancellation Finished for Transmit Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF11" edc:desc="Cancellation Finished for Transmit Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF12" edc:desc="Cancellation Finished for Transmit Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF13" edc:desc="Cancellation Finished for Transmit Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF14" edc:desc="Cancellation Finished for Transmit Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF15" edc:desc="Cancellation Finished for Transmit Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF16" edc:desc="Cancellation Finished for Transmit Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF17" edc:desc="Cancellation Finished for Transmit Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF18" edc:desc="Cancellation Finished for Transmit Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF19" edc:desc="Cancellation Finished for Transmit Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF20" edc:desc="Cancellation Finished for Transmit Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF21" edc:desc="Cancellation Finished for Transmit Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF22" edc:desc="Cancellation Finished for Transmit Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF23" edc:desc="Cancellation Finished for Transmit Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF24" edc:desc="Cancellation Finished for Transmit Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF25" edc:desc="Cancellation Finished for Transmit Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF26" edc:desc="Cancellation Finished for Transmit Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF27" edc:desc="Cancellation Finished for Transmit Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF28" edc:desc="Cancellation Finished for Transmit Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF29" edc:desc="Cancellation Finished for Transmit Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF30" edc:desc="Cancellation Finished for Transmit Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CF31" edc:desc="Cancellation Finished for Transmit Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_TXBTIE" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="TIE0" edc:desc="Transmission Interrupt Enable for Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE1" edc:desc="Transmission Interrupt Enable for Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE2" edc:desc="Transmission Interrupt Enable for Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE3" edc:desc="Transmission Interrupt Enable for Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE4" edc:desc="Transmission Interrupt Enable for Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE5" edc:desc="Transmission Interrupt Enable for Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE6" edc:desc="Transmission Interrupt Enable for Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE7" edc:desc="Transmission Interrupt Enable for Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE8" edc:desc="Transmission Interrupt Enable for Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE9" edc:desc="Transmission Interrupt Enable for Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE10" edc:desc="Transmission Interrupt Enable for Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE11" edc:desc="Transmission Interrupt Enable for Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE12" edc:desc="Transmission Interrupt Enable for Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE13" edc:desc="Transmission Interrupt Enable for Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE14" edc:desc="Transmission Interrupt Enable for Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE15" edc:desc="Transmission Interrupt Enable for Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE16" edc:desc="Transmission Interrupt Enable for Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE17" edc:desc="Transmission Interrupt Enable for Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE18" edc:desc="Transmission Interrupt Enable for Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE19" edc:desc="Transmission Interrupt Enable for Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE20" edc:desc="Transmission Interrupt Enable for Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE21" edc:desc="Transmission Interrupt Enable for Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE22" edc:desc="Transmission Interrupt Enable for Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE23" edc:desc="Transmission Interrupt Enable for Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE24" edc:desc="Transmission Interrupt Enable for Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE25" edc:desc="Transmission Interrupt Enable for Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE26" edc:desc="Transmission Interrupt Enable for Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE27" edc:desc="Transmission Interrupt Enable for Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE28" edc:desc="Transmission Interrupt Enable for Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE29" edc:desc="Transmission Interrupt Enable for Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE30" edc:desc="Transmission Interrupt Enable for Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIE31" edc:desc="Transmission Interrupt Enable for Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MCAN1_TXBCIE" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="CFIE0" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE1" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE2" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE3" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE4" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE5" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE6" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE7" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE8" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE9" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE10" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE11" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE12" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE13" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE14" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE15" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE16" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 16" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE17" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 17" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE18" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 18" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE19" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 19" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE20" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 20" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE21" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 21" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE22" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 22" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE23" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 23" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE24" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 24" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE25" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 25" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE26" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 26" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE27" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 27" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE28" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 28" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE29" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 29" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE30" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 30" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CFIE31" edc:desc="Cancellation Finished Interrupt Enable for Transmit Buffer 31" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4005C0E8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4005C0F0" edc:access="--nnnnnn--nnnnnnnnnnnnnnnnnnnn--" edc:cname="MCAN1_TXEFC" edc:impl="0x3F3FFFFC" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EFSA" edc:desc="Event FIFO Start Address" edc:nzwidth="0xE"/>
            <edc:SFRFieldDef edc:cname="EFS" edc:desc="Event FIFO Size" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EFWM" edc:desc="Event FIFO Watermark" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0F4" edc:access="------rr---rrrrr---rrrrr--rrrrrr" edc:cname="MCAN1_TXEFS" edc:impl="0x31F1F3F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="EFFL" edc:desc="Event FIFO Fill Level" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EFGI" edc:desc="Event FIFO Get Index" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="EFPI" edc:desc="Event FIFO Put Index" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="EFF" edc:desc="Event FIFO Full" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEFL" edc:desc="Tx Event FIFO Element Lost" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4005C0F8" edc:access="---------------------------nnnnn" edc:cname="MCAN1_TXEFA" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="MCAN1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCAN1">
            <edc:SFRFieldDef edc:cname="EFAI" edc:desc="Event FIFO Acknowledge Index" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4005C0FC" edc:offset="0xBF04"/>
      <edc:SFRDef edc:_addr="0x40068000" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:cname="PWM0_CLK" edc:impl="0xFFF0FFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DIVA" edc:desc="CLKA Divide Factor" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="CLKA_POFF" edc:desc="CLKA clock is turned off" edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PREA" edc:desc="CLKA clock is clock selected by PREA" edc:when="(field &amp; 0xFF) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PREA" edc:desc="CLKA Source Clock Selection" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="CLK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DIVB" edc:desc="CLKB Divide Factor" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="CLKB_POFF" edc:desc="CLKB clock is turned off" edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PREB" edc:desc="CLKB clock is clock selected by PREB" edc:when="(field &amp; 0xFF) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PREB" edc:desc="CLKB Source Clock Selection" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="CLK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068004" edc:access="----------------------------wwww" edc:cname="PWM0_ENA" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Channel ID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068008" edc:access="----------------------------wwww" edc:cname="PWM0_DIS" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Channel ID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006800C" edc:access="----------------------------rrrr" edc:cname="PWM0_SR" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Channel ID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068010" edc:access="------------wwww------------wwww" edc:cname="PWM0_IER1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Counter Event on Channel 0 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Counter Event on Channel 1 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Counter Event on Channel 2 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Counter Event on Channel 3 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID3" edc:desc="Fault Protection Trigger on Channel 3 Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068014" edc:access="------------wwww------------wwww" edc:cname="PWM0_IDR1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Counter Event on Channel 0 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Counter Event on Channel 1 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Counter Event on Channel 2 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Counter Event on Channel 3 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID3" edc:desc="Fault Protection Trigger on Channel 3 Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068018" edc:access="------------rrrr------------rrrr" edc:cname="PWM0_IMR1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Counter Event on Channel 0 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Counter Event on Channel 1 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Counter Event on Channel 2 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Counter Event on Channel 3 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID3" edc:desc="Fault Protection Trigger on Channel 3 Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006801C" edc:access="------------rrrr------------rrrr" edc:cname="PWM0_ISR1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Counter Event on Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Counter Event on Channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Counter Event on Channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Counter Event on Channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:desc="Fault Protection Trigger on Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:desc="Fault Protection Trigger on Channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:desc="Fault Protection Trigger on Channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID3" edc:desc="Fault Protection Trigger on Channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068020" edc:access="--------nnnn--nn------------nnnn" edc:cname="PWM0_SCM" edc:impl="0xF3000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="SYNC0" edc:desc="Synchronous Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYNC1" edc:desc="Synchronous Channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYNC2" edc:desc="Synchronous Channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYNC3" edc:desc="Synchronous Channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="UPDM" edc:desc="Synchronous Channels Update Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MODE0" edc:desc="Manual write of double buffer registers and manual update of synchronous channels" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="Manual write of double buffer registers and automatic update of synchronous channels" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="Automatic write of duty-cycle update registers by the DMA Controller and automatic update of synchronous channels" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PTRM" edc:desc="DMA Controller Transfer Request Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PTRCS" edc:desc="DMA Controller Transfer Request Comparison Selection" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068024" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM0_DMAR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DMADUTY" edc:desc="Duty-Cycle Holding Register for DMA Access" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068028" edc:access="-------------------------------n" edc:cname="PWM0_SCUC" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="UPDULOCK" edc:desc="Synchronous Channels Update Unlock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006802C" edc:access="------------------------nnnnnnnn" edc:cname="PWM0_SCUP" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="UPR" edc:desc="Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="UPRCNT" edc:desc="Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068030" edc:access="----------------------------wwww" edc:cname="PWM0_SCUPUPD" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="UPRUPD" edc:desc="Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068034" edc:access="--------wwwwwwwwwwwwwwww----w--w" edc:cname="PWM0_IER2" edc:impl="0xFFFF09" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Write Ready for Synchronous Channels Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Synchronous Channels Update Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:desc="Comparison 0 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:desc="Comparison 1 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:desc="Comparison 2 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:desc="Comparison 3 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:desc="Comparison 4 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:desc="Comparison 5 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:desc="Comparison 6 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:desc="Comparison 7 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:desc="Comparison 0 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:desc="Comparison 1 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:desc="Comparison 2 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:desc="Comparison 3 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:desc="Comparison 4 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:desc="Comparison 5 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:desc="Comparison 6 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:desc="Comparison 7 Update Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068038" edc:access="--------wwwwwwwwwwwwwwww----w--w" edc:cname="PWM0_IDR2" edc:impl="0xFFFF09" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Write Ready for Synchronous Channels Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Synchronous Channels Update Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:desc="Comparison 0 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:desc="Comparison 1 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:desc="Comparison 2 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:desc="Comparison 3 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:desc="Comparison 4 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:desc="Comparison 5 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:desc="Comparison 6 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:desc="Comparison 7 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:desc="Comparison 0 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:desc="Comparison 1 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:desc="Comparison 2 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:desc="Comparison 3 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:desc="Comparison 4 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:desc="Comparison 5 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:desc="Comparison 6 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:desc="Comparison 7 Update Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006803C" edc:access="--------rrrrrrrrrrrrrrrr----r--r" edc:cname="PWM0_IMR2" edc:impl="0xFFFF09" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Write Ready for Synchronous Channels Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Synchronous Channels Update Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:desc="Comparison 0 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:desc="Comparison 1 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:desc="Comparison 2 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:desc="Comparison 3 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:desc="Comparison 4 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:desc="Comparison 5 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:desc="Comparison 6 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:desc="Comparison 7 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:desc="Comparison 0 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:desc="Comparison 1 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:desc="Comparison 2 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:desc="Comparison 3 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:desc="Comparison 4 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:desc="Comparison 5 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:desc="Comparison 6 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:desc="Comparison 7 Update Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068040" edc:access="--------rrrrrrrrrrrrrrrr----r--r" edc:cname="PWM0_ISR2" edc:impl="0xFFFF09" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Write Ready for Synchronous Channels Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Synchronous Channels Update Underrun Error" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:desc="Comparison 0 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:desc="Comparison 1 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:desc="Comparison 2 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:desc="Comparison 3 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:desc="Comparison 4 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:desc="Comparison 5 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:desc="Comparison 6 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:desc="Comparison 7 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:desc="Comparison 0 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:desc="Comparison 1 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:desc="Comparison 2 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:desc="Comparison 3 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:desc="Comparison 4 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:desc="Comparison 5 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:desc="Comparison 6 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:desc="Comparison 7 Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068044" edc:access="------------nnnn------------nnnn" edc:cname="PWM0_OOV" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="OOVH0" edc:desc="Output Override Value for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVH1" edc:desc="Output Override Value for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVH2" edc:desc="Output Override Value for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVH3" edc:desc="Output Override Value for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OOVL0" edc:desc="Output Override Value for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVL1" edc:desc="Output Override Value for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVL2" edc:desc="Output Override Value for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVL3" edc:desc="Output Override Value for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068048" edc:access="------------nnnn------------nnnn" edc:cname="PWM0_OS" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="OSH0" edc:desc="Output Selection for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSH1" edc:desc="Output Selection for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSH2" edc:desc="Output Selection for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSH3" edc:desc="Output Selection for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSL0" edc:desc="Output Selection for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSL1" edc:desc="Output Selection for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSL2" edc:desc="Output Selection for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSL3" edc:desc="Output Selection for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006804C" edc:access="------------wwww------------wwww" edc:cname="PWM0_OSS" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="OSSH0" edc:desc="Output Selection Set for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSH1" edc:desc="Output Selection Set for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSH2" edc:desc="Output Selection Set for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSH3" edc:desc="Output Selection Set for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSSL0" edc:desc="Output Selection Set for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSL1" edc:desc="Output Selection Set for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSL2" edc:desc="Output Selection Set for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSL3" edc:desc="Output Selection Set for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068050" edc:access="------------wwww------------wwww" edc:cname="PWM0_OSC" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="OSCH0" edc:desc="Output Selection Clear for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCH1" edc:desc="Output Selection Clear for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCH2" edc:desc="Output Selection Clear for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCH3" edc:desc="Output Selection Clear for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSCL0" edc:desc="Output Selection Clear for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCL1" edc:desc="Output Selection Clear for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCL2" edc:desc="Output Selection Clear for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCL3" edc:desc="Output Selection Clear for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068054" edc:access="------------wwww------------wwww" edc:cname="PWM0_OSSUPD" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="OSSUPH0" edc:desc="Output Selection Set for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPH1" edc:desc="Output Selection Set for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPH2" edc:desc="Output Selection Set for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPH3" edc:desc="Output Selection Set for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSSUPL0" edc:desc="Output Selection Set for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPL1" edc:desc="Output Selection Set for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPL2" edc:desc="Output Selection Set for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPL3" edc:desc="Output Selection Set for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068058" edc:access="------------wwww------------wwww" edc:cname="PWM0_OSCUPD" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="OSCUPH0" edc:desc="Output Selection Clear for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPH1" edc:desc="Output Selection Clear for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPH2" edc:desc="Output Selection Clear for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPH3" edc:desc="Output Selection Clear for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSCUPL0" edc:desc="Output Selection Clear for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPL1" edc:desc="Output Selection Clear for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPL2" edc:desc="Output Selection Clear for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPL3" edc:desc="Output Selection Clear for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006805C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM0_FMR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="FPOL" edc:desc="Fault Polarity" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FMOD" edc:desc="Fault Activation Mode" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FFIL" edc:desc="Fault Filtering" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068060" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="PWM0_FSR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="FIV" edc:desc="Fault Input Value" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FS" edc:desc="Fault Status" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068064" edc:access="------------------------wwwwwwww" edc:cname="PWM0_FCR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="FCLR" edc:desc="Fault Clear" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068068" edc:access="------------nnnn------------nnnn" edc:cname="PWM0_FPV1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="FPVH0" edc:desc="Fault Protection Value for PWMH output on channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVH1" edc:desc="Fault Protection Value for PWMH output on channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVH2" edc:desc="Fault Protection Value for PWMH output on channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVH3" edc:desc="Fault Protection Value for PWMH output on channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FPVL0" edc:desc="Fault Protection Value for PWML output on channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVL1" edc:desc="Fault Protection Value for PWML output on channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVL2" edc:desc="Fault Protection Value for PWML output on channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVL3" edc:desc="Fault Protection Value for PWML output on channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006806C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM0_FPE" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="FPE0" edc:desc="Fault Protection Enable for channel 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FPE1" edc:desc="Fault Protection Enable for channel 1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FPE2" edc:desc="Fault Protection Enable for channel 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FPE3" edc:desc="Fault Protection Enable for channel 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068070" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4006807C" edc:access="------------------------nnnnnnnn" edc:cname="PWM0_ELMR0" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CSEL0" edc:desc="Comparison 0 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL1" edc:desc="Comparison 1 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL2" edc:desc="Comparison 2 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL3" edc:desc="Comparison 3 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL4" edc:desc="Comparison 4 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL5" edc:desc="Comparison 5 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL6" edc:desc="Comparison 6 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL7" edc:desc="Comparison 7 Selection" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068080" edc:access="------------------------nnnnnnnn" edc:cname="PWM0_ELMR1" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CSEL0" edc:desc="Comparison 0 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL1" edc:desc="Comparison 1 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL2" edc:desc="Comparison 2 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL3" edc:desc="Comparison 3 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL4" edc:desc="Comparison 4 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL5" edc:desc="Comparison 5 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL6" edc:desc="Comparison 6 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL7" edc:desc="Comparison 7 Selection" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068084" edc:offset="0x1C"/>
      <edc:SFRDef edc:_addr="0x400680A0" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM0_SSPR" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="SPRD" edc:desc="Spread Spectrum Limit Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="SPRDM" edc:desc="Spread Spectrum Counter Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400680A4" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM0_SSPUP" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="SPRDUP" edc:desc="Spread Spectrum Limit Value Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400680A8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400680B0" edc:access="--------------nn--------------nn" edc:cname="PWM0_SMMR" edc:impl="0x30003" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="GCEN0" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GCEN1" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="DOWN0" edc:desc="Down Count" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN1" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400680B4" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400680C0" edc:access="------------nnnn------------nnnn" edc:cname="PWM0_FPV2" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="FPZH0" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZH1" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZH2" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZH3" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FPZL0" edc:desc="Fault Protection to Hi-Z for PWML output on channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZL1" edc:desc="Fault Protection to Hi-Z for PWML output on channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZL2" edc:desc="Fault Protection to Hi-Z for PWML output on channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZL3" edc:desc="Fault Protection to Hi-Z for PWML output on channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400680C4" edc:offset="0x20"/>
      <edc:SFRDef edc:_addr="0x400680E4" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM0_WPCR" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="WPCMD" edc:desc="Write Protection Command" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="DISABLE_SW_PROT" edc:desc="Disables the software write protection of the register groups of which the bit WPRGx is at '1'." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE_SW_PROT" edc:desc="Enables the software write protection of the register groups of which the bit WPRGx is at '1'." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE_HW_PROT" edc:desc="Enables the hardware write protection of the register groups of which the bit WPRGx is at '1'. Only a hardware reset of the PWM controller can disable the hardware write protection. Moreover, to meet security requirements, the PIO lines associated with the PWM can not be configured through the PIO interface." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WPRG0" edc:desc="Write Protection Register Group 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG1" edc:desc="Write Protection Register Group 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG2" edc:desc="Write Protection Register Group 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG3" edc:desc="Write Protection Register Group 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG4" edc:desc="Write Protection Register Group 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG5" edc:desc="Write Protection Register Group 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPCMD field. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x50574D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400680E8" edc:access="rrrrrrrrrrrrrrrr--rrrrrrr-rrrrrr" edc:cname="PWM0_WPSR" edc:impl="0xFFFF3FBF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="WPSWS0" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS1" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS2" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS3" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS4" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS5" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protect Violation Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS0" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS1" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS2" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS3" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS4" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS5" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protect Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400680EC" edc:offset="0x44"/>
      <edc:SFRDef edc:_addr="0x40068130" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP0PWM0_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068134" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP0PWM0_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068138" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP0PWM0_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006813C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP0PWM0_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068140" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP1PWM0_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068144" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP1PWM0_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068148" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP1PWM0_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006814C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP1PWM0_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068150" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP2PWM0_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068154" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP2PWM0_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068158" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP2PWM0_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006815C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP2PWM0_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068160" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP3PWM0_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068164" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP3PWM0_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068168" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP3PWM0_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006816C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP3PWM0_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068170" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP4PWM0_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068174" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP4PWM0_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068178" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP4PWM0_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006817C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP4PWM0_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068180" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP5PWM0_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068184" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP5PWM0_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068188" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP5PWM0_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006818C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP5PWM0_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068190" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP6PWM0_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068194" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP6PWM0_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068198" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP6PWM0_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006819C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP6PWM0_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400681A0" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP7PWM0_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400681A4" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP7PWM0_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400681A8" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP7PWM0_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400681AC" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP7PWM0_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400681B0" edc:offset="0x50"/>
      <edc:SFRDef edc:_addr="0x40068200" edc:access="------------nnnn--nnnnnn----nnnn" edc:cname="PWM_CH_NUM0PWM0_CMR" edc:impl="0xF3F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRE" edc:desc="Channel Prescaler" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:desc="Channel Alignment" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Channel Polarity" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:desc="Counter Event Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:desc="Update Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:desc="Disabled Polarity Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:desc="Timer Counter Trigger Selection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:desc="Dead-Time Generator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:desc="Dead-Time PWMHx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:desc="Dead-Time PWMLx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:desc="Push-Pull Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068204" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM0PWM0_CDTY" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CDTY" edc:desc="Channel Duty-Cycle" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068208" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM0PWM0_CDTYUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:desc="Channel Duty-Cycle Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006820C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM0PWM0_CPRD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRD" edc:desc="Channel Period" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068210" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM0PWM0_CPRDUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:desc="Channel Period Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068214" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PWM_CH_NUM0PWM0_CCNT" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Channel Counter Register" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068218" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM0PWM0_DT" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DTH" edc:desc="Dead-Time Value for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:desc="Dead-Time Value for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006821C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM0PWM0_DTUPD" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:desc="Dead-Time Value Update for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:desc="Dead-Time Value Update for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068220" edc:access="------------nnnn--nnnnnn----nnnn" edc:cname="PWM_CH_NUM1PWM0_CMR" edc:impl="0xF3F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRE" edc:desc="Channel Prescaler" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:desc="Channel Alignment" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Channel Polarity" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:desc="Counter Event Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:desc="Update Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:desc="Disabled Polarity Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:desc="Timer Counter Trigger Selection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:desc="Dead-Time Generator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:desc="Dead-Time PWMHx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:desc="Dead-Time PWMLx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:desc="Push-Pull Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068224" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM1PWM0_CDTY" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CDTY" edc:desc="Channel Duty-Cycle" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068228" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM1PWM0_CDTYUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:desc="Channel Duty-Cycle Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006822C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM1PWM0_CPRD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRD" edc:desc="Channel Period" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068230" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM1PWM0_CPRDUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:desc="Channel Period Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068234" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PWM_CH_NUM1PWM0_CCNT" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Channel Counter Register" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068238" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM1PWM0_DT" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DTH" edc:desc="Dead-Time Value for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:desc="Dead-Time Value for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006823C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM1PWM0_DTUPD" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:desc="Dead-Time Value Update for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:desc="Dead-Time Value Update for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068240" edc:access="------------nnnn--nnnnnn----nnnn" edc:cname="PWM_CH_NUM2PWM0_CMR" edc:impl="0xF3F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRE" edc:desc="Channel Prescaler" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:desc="Channel Alignment" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Channel Polarity" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:desc="Counter Event Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:desc="Update Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:desc="Disabled Polarity Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:desc="Timer Counter Trigger Selection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:desc="Dead-Time Generator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:desc="Dead-Time PWMHx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:desc="Dead-Time PWMLx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:desc="Push-Pull Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068244" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM2PWM0_CDTY" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CDTY" edc:desc="Channel Duty-Cycle" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068248" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM2PWM0_CDTYUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:desc="Channel Duty-Cycle Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006824C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM2PWM0_CPRD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRD" edc:desc="Channel Period" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068250" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM2PWM0_CPRDUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:desc="Channel Period Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068254" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PWM_CH_NUM2PWM0_CCNT" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Channel Counter Register" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068258" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM2PWM0_DT" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DTH" edc:desc="Dead-Time Value for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:desc="Dead-Time Value for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006825C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM2PWM0_DTUPD" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:desc="Dead-Time Value Update for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:desc="Dead-Time Value Update for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068260" edc:access="------------nnnn--nnnnnn----nnnn" edc:cname="PWM_CH_NUM3PWM0_CMR" edc:impl="0xF3F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRE" edc:desc="Channel Prescaler" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:desc="Channel Alignment" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Channel Polarity" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:desc="Counter Event Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:desc="Update Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:desc="Disabled Polarity Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:desc="Timer Counter Trigger Selection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:desc="Dead-Time Generator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:desc="Dead-Time PWMHx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:desc="Dead-Time PWMLx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:desc="Push-Pull Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068264" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM3PWM0_CDTY" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CDTY" edc:desc="Channel Duty-Cycle" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068268" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM3PWM0_CDTYUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:desc="Channel Duty-Cycle Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006826C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM3PWM0_CPRD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRD" edc:desc="Channel Period" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068270" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM3PWM0_CPRDUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:desc="Channel Period Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068274" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PWM_CH_NUM3PWM0_CCNT" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Channel Counter Register" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068278" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM3PWM0_DT" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DTH" edc:desc="Dead-Time Value for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:desc="Dead-Time Value for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006827C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM3PWM0_DTUPD" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:desc="Dead-Time Value Update for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:desc="Dead-Time Value Update for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068280" edc:offset="0x180"/>
      <edc:SFRDef edc:_addr="0x40068400" edc:access="------------------w---w---------" edc:cname="PWM0_CMUPD0" edc:impl="0x2200" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:desc="Channel Polarity Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:desc="Channel Polarity Inversion Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068404" edc:offset="0x1C"/>
      <edc:SFRDef edc:_addr="0x40068420" edc:access="------------------w---w---------" edc:cname="PWM0_CMUPD1" edc:impl="0x2200" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:desc="Channel Polarity Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:desc="Channel Polarity Inversion Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068424" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4006842C" edc:access="nnnn--nnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM0_ETRG1" edc:impl="0xF3FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="MAXCNT" edc:desc="Maximum Counter value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="TRGMODE" edc:desc="External Trigger Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="External trigger is not enabled." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="External PWM Reset Mode" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="External PWM Start Mode" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Cycle-by-cycle Duty Mode" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRGEDGE" edc:desc="Edge Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FALLING_ZERO" edc:desc="TRGMODE = 1: TRGINx event detection on falling edge. TRGMODE = 2, 3: TRGINx active level is 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_ONE" edc:desc="TRGMODE = 1: TRGINx event detection on rising edge. TRGMODE = 2, 3: TRGINx active level is 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGFILT" edc:desc="Filtered input" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRGSRC" edc:desc="Trigger Source" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RFEN" edc:desc="Recoverable Fault Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068430" edc:access="------------nnnn---------nnnnnnn" edc:cname="PWM0_LEBR1" edc:impl="0xF007F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="LEBDELAY" edc:desc="Leading-Edge Blanking Delay for TRGINx" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PWMLFEN" edc:desc="PWML Falling Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMLREN" edc:desc="PWML Rising Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMHFEN" edc:desc="PWMH Falling Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMHREN" edc:desc="PWMH Rising Edge Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068434" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40068440" edc:access="------------------w---w---------" edc:cname="PWM0_CMUPD2" edc:impl="0x2200" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:desc="Channel Polarity Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:desc="Channel Polarity Inversion Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068444" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4006844C" edc:access="nnnn--nnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM0_ETRG2" edc:impl="0xF3FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="MAXCNT" edc:desc="Maximum Counter value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="TRGMODE" edc:desc="External Trigger Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="External trigger is not enabled." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="External PWM Reset Mode" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="External PWM Start Mode" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Cycle-by-cycle Duty Mode" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRGEDGE" edc:desc="Edge Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FALLING_ZERO" edc:desc="TRGMODE = 1: TRGINx event detection on falling edge. TRGMODE = 2, 3: TRGINx active level is 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_ONE" edc:desc="TRGMODE = 1: TRGINx event detection on rising edge. TRGMODE = 2, 3: TRGINx active level is 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGFILT" edc:desc="Filtered input" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRGSRC" edc:desc="Trigger Source" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RFEN" edc:desc="Recoverable Fault Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40068450" edc:access="------------nnnn---------nnnnnnn" edc:cname="PWM0_LEBR2" edc:impl="0xF007F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:SFRFieldDef edc:cname="LEBDELAY" edc:desc="Leading-Edge Blanking Delay for TRGINx" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PWMLFEN" edc:desc="PWML Falling Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMLREN" edc:desc="PWML Rising Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMHFEN" edc:desc="PWMH Falling Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMHREN" edc:desc="PWMH Rising Edge Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068454" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40068460" edc:access="------------------w---w---------" edc:cname="PWM0_CMUPD3" edc:impl="0x2200" edc:nzwidth="0x20" ltx:memberofperipheral="PWM0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM0">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:desc="Channel Polarity Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:desc="Channel Polarity Inversion Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40068464" edc:offset="0x3B9C"/>
      <edc:SFRDef edc:_addr="0x4006C000" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:cname="PWM1_CLK" edc:impl="0xFFF0FFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DIVA" edc:desc="CLKA Divide Factor" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="CLKA_POFF" edc:desc="CLKA clock is turned off" edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PREA" edc:desc="CLKA clock is clock selected by PREA" edc:when="(field &amp; 0xFF) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PREA" edc:desc="CLKA Source Clock Selection" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="CLK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DIVB" edc:desc="CLKB Divide Factor" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="CLKB_POFF" edc:desc="CLKB clock is turned off" edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PREB" edc:desc="CLKB clock is clock selected by PREB" edc:when="(field &amp; 0xFF) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PREB" edc:desc="CLKB Source Clock Selection" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="CLK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CLK_DIV1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C004" edc:access="----------------------------wwww" edc:cname="PWM1_ENA" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Channel ID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C008" edc:access="----------------------------wwww" edc:cname="PWM1_DIS" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Channel ID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C00C" edc:access="----------------------------rrrr" edc:cname="PWM1_SR" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Channel ID" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Channel ID" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C010" edc:access="------------wwww------------wwww" edc:cname="PWM1_IER1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Counter Event on Channel 0 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Counter Event on Channel 1 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Counter Event on Channel 2 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Counter Event on Channel 3 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID3" edc:desc="Fault Protection Trigger on Channel 3 Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C014" edc:access="------------wwww------------wwww" edc:cname="PWM1_IDR1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Counter Event on Channel 0 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Counter Event on Channel 1 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Counter Event on Channel 2 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Counter Event on Channel 3 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID3" edc:desc="Fault Protection Trigger on Channel 3 Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C018" edc:access="------------rrrr------------rrrr" edc:cname="PWM1_IMR1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Counter Event on Channel 0 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Counter Event on Channel 1 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Counter Event on Channel 2 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Counter Event on Channel 3 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:desc="Fault Protection Trigger on Channel 0 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:desc="Fault Protection Trigger on Channel 1 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:desc="Fault Protection Trigger on Channel 2 Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID3" edc:desc="Fault Protection Trigger on Channel 3 Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C01C" edc:access="------------rrrr------------rrrr" edc:cname="PWM1_ISR1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CHID0" edc:desc="Counter Event on Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID1" edc:desc="Counter Event on Channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID2" edc:desc="Counter Event on Channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CHID3" edc:desc="Counter Event on Channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FCHID0" edc:desc="Fault Protection Trigger on Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID1" edc:desc="Fault Protection Trigger on Channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID2" edc:desc="Fault Protection Trigger on Channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FCHID3" edc:desc="Fault Protection Trigger on Channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C020" edc:access="--------nnnn--nn------------nnnn" edc:cname="PWM1_SCM" edc:impl="0xF3000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="SYNC0" edc:desc="Synchronous Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYNC1" edc:desc="Synchronous Channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYNC2" edc:desc="Synchronous Channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYNC3" edc:desc="Synchronous Channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="UPDM" edc:desc="Synchronous Channels Update Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MODE0" edc:desc="Manual write of double buffer registers and manual update of synchronous channels" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="Manual write of double buffer registers and automatic update of synchronous channels" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="Automatic write of duty-cycle update registers by the DMA Controller and automatic update of synchronous channels" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PTRM" edc:desc="DMA Controller Transfer Request Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PTRCS" edc:desc="DMA Controller Transfer Request Comparison Selection" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C024" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM1_DMAR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DMADUTY" edc:desc="Duty-Cycle Holding Register for DMA Access" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C028" edc:access="-------------------------------n" edc:cname="PWM1_SCUC" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="UPDULOCK" edc:desc="Synchronous Channels Update Unlock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C02C" edc:access="------------------------nnnnnnnn" edc:cname="PWM1_SCUP" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="UPR" edc:desc="Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="UPRCNT" edc:desc="Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C030" edc:access="----------------------------wwww" edc:cname="PWM1_SCUPUPD" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="UPRUPD" edc:desc="Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C034" edc:access="--------wwwwwwwwwwwwwwww----w--w" edc:cname="PWM1_IER2" edc:impl="0xFFFF09" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Write Ready for Synchronous Channels Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Synchronous Channels Update Underrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:desc="Comparison 0 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:desc="Comparison 1 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:desc="Comparison 2 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:desc="Comparison 3 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:desc="Comparison 4 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:desc="Comparison 5 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:desc="Comparison 6 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:desc="Comparison 7 Match Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:desc="Comparison 0 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:desc="Comparison 1 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:desc="Comparison 2 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:desc="Comparison 3 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:desc="Comparison 4 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:desc="Comparison 5 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:desc="Comparison 6 Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:desc="Comparison 7 Update Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C038" edc:access="--------wwwwwwwwwwwwwwww----w--w" edc:cname="PWM1_IDR2" edc:impl="0xFFFF09" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Write Ready for Synchronous Channels Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Synchronous Channels Update Underrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:desc="Comparison 0 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:desc="Comparison 1 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:desc="Comparison 2 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:desc="Comparison 3 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:desc="Comparison 4 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:desc="Comparison 5 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:desc="Comparison 6 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:desc="Comparison 7 Match Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:desc="Comparison 0 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:desc="Comparison 1 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:desc="Comparison 2 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:desc="Comparison 3 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:desc="Comparison 4 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:desc="Comparison 5 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:desc="Comparison 6 Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:desc="Comparison 7 Update Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C03C" edc:access="--------rrrrrrrrrrrrrrrr----r--r" edc:cname="PWM1_IMR2" edc:impl="0xFFFF09" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Write Ready for Synchronous Channels Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Synchronous Channels Update Underrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:desc="Comparison 0 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:desc="Comparison 1 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:desc="Comparison 2 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:desc="Comparison 3 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:desc="Comparison 4 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:desc="Comparison 5 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:desc="Comparison 6 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:desc="Comparison 7 Match Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:desc="Comparison 0 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:desc="Comparison 1 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:desc="Comparison 2 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:desc="Comparison 3 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:desc="Comparison 4 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:desc="Comparison 5 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:desc="Comparison 6 Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:desc="Comparison 7 Update Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C040" edc:access="--------rrrrrrrrrrrrrrrr----r--r" edc:cname="PWM1_ISR2" edc:impl="0xFFFF09" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Write Ready for Synchronous Channels Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UNRE" edc:desc="Synchronous Channels Update Underrun Error" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMPM0" edc:desc="Comparison 0 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM1" edc:desc="Comparison 1 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM2" edc:desc="Comparison 2 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM3" edc:desc="Comparison 3 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM4" edc:desc="Comparison 4 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM5" edc:desc="Comparison 5 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM6" edc:desc="Comparison 6 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPM7" edc:desc="Comparison 7 Match" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU0" edc:desc="Comparison 0 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU1" edc:desc="Comparison 1 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU2" edc:desc="Comparison 2 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU3" edc:desc="Comparison 3 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU4" edc:desc="Comparison 4 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU5" edc:desc="Comparison 5 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU6" edc:desc="Comparison 6 Update" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPU7" edc:desc="Comparison 7 Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C044" edc:access="------------nnnn------------nnnn" edc:cname="PWM1_OOV" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="OOVH0" edc:desc="Output Override Value for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVH1" edc:desc="Output Override Value for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVH2" edc:desc="Output Override Value for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVH3" edc:desc="Output Override Value for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OOVL0" edc:desc="Output Override Value for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVL1" edc:desc="Output Override Value for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVL2" edc:desc="Output Override Value for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OOVL3" edc:desc="Output Override Value for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C048" edc:access="------------nnnn------------nnnn" edc:cname="PWM1_OS" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="OSH0" edc:desc="Output Selection for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSH1" edc:desc="Output Selection for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSH2" edc:desc="Output Selection for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSH3" edc:desc="Output Selection for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSL0" edc:desc="Output Selection for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSL1" edc:desc="Output Selection for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSL2" edc:desc="Output Selection for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSL3" edc:desc="Output Selection for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C04C" edc:access="------------wwww------------wwww" edc:cname="PWM1_OSS" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="OSSH0" edc:desc="Output Selection Set for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSH1" edc:desc="Output Selection Set for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSH2" edc:desc="Output Selection Set for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSH3" edc:desc="Output Selection Set for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSSL0" edc:desc="Output Selection Set for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSL1" edc:desc="Output Selection Set for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSL2" edc:desc="Output Selection Set for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSL3" edc:desc="Output Selection Set for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C050" edc:access="------------wwww------------wwww" edc:cname="PWM1_OSC" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="OSCH0" edc:desc="Output Selection Clear for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCH1" edc:desc="Output Selection Clear for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCH2" edc:desc="Output Selection Clear for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCH3" edc:desc="Output Selection Clear for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSCL0" edc:desc="Output Selection Clear for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCL1" edc:desc="Output Selection Clear for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCL2" edc:desc="Output Selection Clear for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCL3" edc:desc="Output Selection Clear for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C054" edc:access="------------wwww------------wwww" edc:cname="PWM1_OSSUPD" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="OSSUPH0" edc:desc="Output Selection Set for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPH1" edc:desc="Output Selection Set for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPH2" edc:desc="Output Selection Set for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPH3" edc:desc="Output Selection Set for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSSUPL0" edc:desc="Output Selection Set for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPL1" edc:desc="Output Selection Set for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPL2" edc:desc="Output Selection Set for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSSUPL3" edc:desc="Output Selection Set for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C058" edc:access="------------wwww------------wwww" edc:cname="PWM1_OSCUPD" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="OSCUPH0" edc:desc="Output Selection Clear for PWMH output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPH1" edc:desc="Output Selection Clear for PWMH output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPH2" edc:desc="Output Selection Clear for PWMH output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPH3" edc:desc="Output Selection Clear for PWMH output of the channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="OSCUPL0" edc:desc="Output Selection Clear for PWML output of the channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPL1" edc:desc="Output Selection Clear for PWML output of the channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPL2" edc:desc="Output Selection Clear for PWML output of the channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OSCUPL3" edc:desc="Output Selection Clear for PWML output of the channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C05C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM1_FMR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="FPOL" edc:desc="Fault Polarity" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FMOD" edc:desc="Fault Activation Mode" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FFIL" edc:desc="Fault Filtering" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C060" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="PWM1_FSR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="FIV" edc:desc="Fault Input Value" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FS" edc:desc="Fault Status" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C064" edc:access="------------------------wwwwwwww" edc:cname="PWM1_FCR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="FCLR" edc:desc="Fault Clear" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C068" edc:access="------------nnnn------------nnnn" edc:cname="PWM1_FPV1" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="FPVH0" edc:desc="Fault Protection Value for PWMH output on channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVH1" edc:desc="Fault Protection Value for PWMH output on channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVH2" edc:desc="Fault Protection Value for PWMH output on channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVH3" edc:desc="Fault Protection Value for PWMH output on channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FPVL0" edc:desc="Fault Protection Value for PWML output on channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVL1" edc:desc="Fault Protection Value for PWML output on channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVL2" edc:desc="Fault Protection Value for PWML output on channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPVL3" edc:desc="Fault Protection Value for PWML output on channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C06C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM1_FPE" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="FPE0" edc:desc="Fault Protection Enable for channel 0" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FPE1" edc:desc="Fault Protection Enable for channel 1" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FPE2" edc:desc="Fault Protection Enable for channel 2" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="FPE3" edc:desc="Fault Protection Enable for channel 3" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C070" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4006C07C" edc:access="------------------------nnnnnnnn" edc:cname="PWM1_ELMR0" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CSEL0" edc:desc="Comparison 0 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL1" edc:desc="Comparison 1 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL2" edc:desc="Comparison 2 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL3" edc:desc="Comparison 3 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL4" edc:desc="Comparison 4 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL5" edc:desc="Comparison 5 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL6" edc:desc="Comparison 6 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL7" edc:desc="Comparison 7 Selection" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C080" edc:access="------------------------nnnnnnnn" edc:cname="PWM1_ELMR1" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CSEL0" edc:desc="Comparison 0 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL1" edc:desc="Comparison 1 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL2" edc:desc="Comparison 2 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL3" edc:desc="Comparison 3 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL4" edc:desc="Comparison 4 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL5" edc:desc="Comparison 5 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL6" edc:desc="Comparison 6 Selection" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CSEL7" edc:desc="Comparison 7 Selection" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C084" edc:offset="0x1C"/>
      <edc:SFRDef edc:_addr="0x4006C0A0" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM1_SSPR" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="SPRD" edc:desc="Spread Spectrum Limit Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="SPRDM" edc:desc="Spread Spectrum Counter Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C0A4" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM1_SSPUP" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="SPRDUP" edc:desc="Spread Spectrum Limit Value Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C0A8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4006C0B0" edc:access="--------------nn--------------nn" edc:cname="PWM1_SMMR" edc:impl="0x30003" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="GCEN0" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GCEN1" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="DOWN0" edc:desc="Down Count" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN1" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C0B4" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4006C0C0" edc:access="------------nnnn------------nnnn" edc:cname="PWM1_FPV2" edc:impl="0xF000F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="FPZH0" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZH1" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZH2" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZH3" edc:desc="Fault Protection to Hi-Z for PWMH output on channel 3" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="FPZL0" edc:desc="Fault Protection to Hi-Z for PWML output on channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZL1" edc:desc="Fault Protection to Hi-Z for PWML output on channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZL2" edc:desc="Fault Protection to Hi-Z for PWML output on channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FPZL3" edc:desc="Fault Protection to Hi-Z for PWML output on channel 3" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C0C4" edc:offset="0x20"/>
      <edc:SFRDef edc:_addr="0x4006C0E4" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM1_WPCR" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="WPCMD" edc:desc="Write Protection Command" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="DISABLE_SW_PROT" edc:desc="Disables the software write protection of the register groups of which the bit WPRGx is at '1'." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE_SW_PROT" edc:desc="Enables the software write protection of the register groups of which the bit WPRGx is at '1'." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE_HW_PROT" edc:desc="Enables the hardware write protection of the register groups of which the bit WPRGx is at '1'. Only a hardware reset of the PWM controller can disable the hardware write protection. Moreover, to meet security requirements, the PIO lines associated with the PWM can not be configured through the PIO interface." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WPRG0" edc:desc="Write Protection Register Group 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG1" edc:desc="Write Protection Register Group 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG2" edc:desc="Write Protection Register Group 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG3" edc:desc="Write Protection Register Group 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG4" edc:desc="Write Protection Register Group 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPRG5" edc:desc="Write Protection Register Group 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPCMD field. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x50574D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C0E8" edc:access="rrrrrrrrrrrrrrrr--rrrrrrr-rrrrrr" edc:cname="PWM1_WPSR" edc:impl="0xFFFF3FBF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="WPSWS0" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS1" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS2" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS3" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS4" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPSWS5" edc:desc="Write Protect SW Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protect Violation Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS0" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS1" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS2" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS3" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS4" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPHWS5" edc:desc="Write Protect HW Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protect Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C0EC" edc:offset="0x44"/>
      <edc:SFRDef edc:_addr="0x4006C130" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP0PWM1_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C134" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP0PWM1_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C138" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP0PWM1_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C13C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP0PWM1_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C140" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP1PWM1_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C144" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP1PWM1_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C148" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP1PWM1_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C14C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP1PWM1_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C150" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP2PWM1_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C154" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP2PWM1_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C158" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP2PWM1_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C15C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP2PWM1_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C160" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP3PWM1_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C164" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP3PWM1_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C168" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP3PWM1_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C16C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP3PWM1_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C170" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP4PWM1_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C174" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP4PWM1_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C178" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP4PWM1_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C17C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP4PWM1_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C180" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP5PWM1_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C184" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP5PWM1_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C188" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP5PWM1_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C18C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP5PWM1_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C190" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP6PWM1_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C194" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP6PWM1_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C198" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP6PWM1_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C19C" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP6PWM1_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C1A0" edc:access="-------nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CMP7PWM1_CMPV" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Comparison x Value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVM" edc:desc="Comparison x Value Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_INCREMENT" edc:desc="Compare when counter is incrementing" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COMPARE_AT_DECREMENT" edc:desc="Compare when counter is decrementing" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C1A4" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CMP7PWM1_CMPVUPD" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CVUPD" edc:desc="Comparison x Value Update" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="CVMUPD" edc:desc="Comparison x Value Mode Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C1A8" edc:access="--------nnnnnnnnnnnnnnnnnnnn---n" edc:cname="PWM_CMP7PWM1_CMPM" edc:impl="0xFFFFF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CEN" edc:desc="Comparison x Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTR" edc:desc="Comparison x Trigger" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPR" edc:desc="Comparison x Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRCNT" edc:desc="Comparison x Period Counter" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPR" edc:desc="Comparison x Update Period" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRCNT" edc:desc="Comparison x Update Period Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C1AC" edc:access="------------wwww----wwwwwwww---w" edc:cname="PWM_CMP7PWM1_CMPMUPD" edc:impl="0xF0FF1" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CENUPD" edc:desc="Comparison x Enable Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CTRUPD" edc:desc="Comparison x Trigger Update" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CPRUPD" edc:desc="Comparison x Period Update" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CUPRUPD" edc:desc="Comparison x Update Period Update" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C1B0" edc:offset="0x50"/>
      <edc:SFRDef edc:_addr="0x4006C200" edc:access="------------nnnn--nnnnnn----nnnn" edc:cname="PWM_CH_NUM0PWM1_CMR" edc:impl="0xF3F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRE" edc:desc="Channel Prescaler" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:desc="Channel Alignment" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Channel Polarity" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:desc="Counter Event Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:desc="Update Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:desc="Disabled Polarity Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:desc="Timer Counter Trigger Selection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:desc="Dead-Time Generator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:desc="Dead-Time PWMHx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:desc="Dead-Time PWMLx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:desc="Push-Pull Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C204" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM0PWM1_CDTY" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CDTY" edc:desc="Channel Duty-Cycle" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C208" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM0PWM1_CDTYUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:desc="Channel Duty-Cycle Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C20C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM0PWM1_CPRD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRD" edc:desc="Channel Period" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C210" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM0PWM1_CPRDUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:desc="Channel Period Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C214" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PWM_CH_NUM0PWM1_CCNT" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Channel Counter Register" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C218" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM0PWM1_DT" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DTH" edc:desc="Dead-Time Value for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:desc="Dead-Time Value for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C21C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM0PWM1_DTUPD" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:desc="Dead-Time Value Update for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:desc="Dead-Time Value Update for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C220" edc:access="------------nnnn--nnnnnn----nnnn" edc:cname="PWM_CH_NUM1PWM1_CMR" edc:impl="0xF3F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRE" edc:desc="Channel Prescaler" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:desc="Channel Alignment" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Channel Polarity" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:desc="Counter Event Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:desc="Update Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:desc="Disabled Polarity Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:desc="Timer Counter Trigger Selection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:desc="Dead-Time Generator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:desc="Dead-Time PWMHx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:desc="Dead-Time PWMLx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:desc="Push-Pull Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C224" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM1PWM1_CDTY" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CDTY" edc:desc="Channel Duty-Cycle" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C228" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM1PWM1_CDTYUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:desc="Channel Duty-Cycle Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C22C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM1PWM1_CPRD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRD" edc:desc="Channel Period" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C230" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM1PWM1_CPRDUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:desc="Channel Period Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C234" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PWM_CH_NUM1PWM1_CCNT" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Channel Counter Register" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C238" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM1PWM1_DT" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DTH" edc:desc="Dead-Time Value for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:desc="Dead-Time Value for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C23C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM1PWM1_DTUPD" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:desc="Dead-Time Value Update for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:desc="Dead-Time Value Update for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C240" edc:access="------------nnnn--nnnnnn----nnnn" edc:cname="PWM_CH_NUM2PWM1_CMR" edc:impl="0xF3F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRE" edc:desc="Channel Prescaler" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:desc="Channel Alignment" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Channel Polarity" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:desc="Counter Event Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:desc="Update Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:desc="Disabled Polarity Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:desc="Timer Counter Trigger Selection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:desc="Dead-Time Generator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:desc="Dead-Time PWMHx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:desc="Dead-Time PWMLx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:desc="Push-Pull Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C244" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM2PWM1_CDTY" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CDTY" edc:desc="Channel Duty-Cycle" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C248" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM2PWM1_CDTYUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:desc="Channel Duty-Cycle Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C24C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM2PWM1_CPRD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRD" edc:desc="Channel Period" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C250" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM2PWM1_CPRDUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:desc="Channel Period Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C254" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PWM_CH_NUM2PWM1_CCNT" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Channel Counter Register" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C258" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM2PWM1_DT" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DTH" edc:desc="Dead-Time Value for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:desc="Dead-Time Value for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C25C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM2PWM1_DTUPD" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:desc="Dead-Time Value Update for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:desc="Dead-Time Value Update for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C260" edc:access="------------nnnn--nnnnnn----nnnn" edc:cname="PWM_CH_NUM3PWM1_CMR" edc:impl="0xF3F0F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRE" edc:desc="Channel Prescaler" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="MCK" edc:desc="Peripheral clock" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_2" edc:desc="Peripheral clock/2" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_4" edc:desc="Peripheral clock/4" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_8" edc:desc="Peripheral clock/8" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_16" edc:desc="Peripheral clock/16" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_32" edc:desc="Peripheral clock/32" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_64" edc:desc="Peripheral clock/64" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_128" edc:desc="Peripheral clock/128" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_256" edc:desc="Peripheral clock/256" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_512" edc:desc="Peripheral clock/512" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="MCK_DIV_1024" edc:desc="Peripheral clock/1024" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CLKA" edc:desc="Clock A" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CLKB" edc:desc="Clock B" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CALG" edc:desc="Channel Alignment" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LEFT_ALIGNED" edc:desc="Left aligned" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CENTER_ALIGNED" edc:desc="Center aligned" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Channel Polarity" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="LOW_POLARITY" edc:desc="Waveform starts at low level" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH_POLARITY" edc:desc="Waveform starts at high level" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CES" edc:desc="Counter Event Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SINGLE_EVENT" edc:desc="At the end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DOUBLE_EVENT" edc:desc="At half of PWM period AND at the end of PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UPDS" edc:desc="Update Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_PERIOD" edc:desc="At the next end of PWM period" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE_AT_HALF_PERIOD" edc:desc="At the next end of Half PWM period" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DPOLI" edc:desc="Disabled Polarity Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TCTS" edc:desc="Timer Counter Trigger Selection" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DTE" edc:desc="Dead-Time Generator Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTHI" edc:desc="Dead-Time PWMHx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DTLI" edc:desc="Dead-Time PWMLx Output Inverted" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PPM" edc:desc="Push-Pull Mode" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C264" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM3PWM1_CDTY" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CDTY" edc:desc="Channel Duty-Cycle" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C268" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM3PWM1_CDTYUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CDTYUPD" edc:desc="Channel Duty-Cycle Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C26C" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM3PWM1_CPRD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRD" edc:desc="Channel Period" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C270" edc:access="--------wwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM3PWM1_CPRDUPD" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CPRDUPD" edc:desc="Channel Period Update" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C274" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="PWM_CH_NUM3PWM1_CCNT" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="CNT" edc:desc="Channel Counter Register" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C278" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM_CH_NUM3PWM1_DT" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DTH" edc:desc="Dead-Time Value for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTL" edc:desc="Dead-Time Value for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C27C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="PWM_CH_NUM3PWM1_DTUPD" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="DTHUPD" edc:desc="Dead-Time Value Update for PWMHx Output" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DTLUPD" edc:desc="Dead-Time Value Update for PWMLx Output" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C280" edc:offset="0x180"/>
      <edc:SFRDef edc:_addr="0x4006C400" edc:access="------------------w---w---------" edc:cname="PWM1_CMUPD0" edc:impl="0x2200" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:desc="Channel Polarity Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:desc="Channel Polarity Inversion Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C404" edc:offset="0x1C"/>
      <edc:SFRDef edc:_addr="0x4006C420" edc:access="------------------w---w---------" edc:cname="PWM1_CMUPD1" edc:impl="0x2200" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:desc="Channel Polarity Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:desc="Channel Polarity Inversion Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C424" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4006C42C" edc:access="nnnn--nnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM1_ETRG1" edc:impl="0xF3FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="MAXCNT" edc:desc="Maximum Counter value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="TRGMODE" edc:desc="External Trigger Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="External trigger is not enabled." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="External PWM Reset Mode" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="External PWM Start Mode" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Cycle-by-cycle Duty Mode" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRGEDGE" edc:desc="Edge Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FALLING_ZERO" edc:desc="TRGMODE = 1: TRGINx event detection on falling edge. TRGMODE = 2, 3: TRGINx active level is 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_ONE" edc:desc="TRGMODE = 1: TRGINx event detection on rising edge. TRGMODE = 2, 3: TRGINx active level is 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGFILT" edc:desc="Filtered input" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRGSRC" edc:desc="Trigger Source" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RFEN" edc:desc="Recoverable Fault Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C430" edc:access="------------nnnn---------nnnnnnn" edc:cname="PWM1_LEBR1" edc:impl="0xF007F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="LEBDELAY" edc:desc="Leading-Edge Blanking Delay for TRGINx" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PWMLFEN" edc:desc="PWML Falling Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMLREN" edc:desc="PWML Rising Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMHFEN" edc:desc="PWMH Falling Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMHREN" edc:desc="PWMH Rising Edge Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C434" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4006C440" edc:access="------------------w---w---------" edc:cname="PWM1_CMUPD2" edc:impl="0x2200" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:desc="Channel Polarity Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:desc="Channel Polarity Inversion Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C444" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4006C44C" edc:access="nnnn--nnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="PWM1_ETRG2" edc:impl="0xF3FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="MAXCNT" edc:desc="Maximum Counter value" edc:nzwidth="0x18"/>
            <edc:SFRFieldDef edc:cname="TRGMODE" edc:desc="External Trigger Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="External trigger is not enabled." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="External PWM Reset Mode" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="External PWM Start Mode" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="Cycle-by-cycle Duty Mode" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRGEDGE" edc:desc="Edge Selection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FALLING_ZERO" edc:desc="TRGMODE = 1: TRGINx event detection on falling edge. TRGMODE = 2, 3: TRGINx active level is 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_ONE" edc:desc="TRGMODE = 1: TRGINx event detection on rising edge. TRGMODE = 2, 3: TRGINx active level is 1" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGFILT" edc:desc="Filtered input" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TRGSRC" edc:desc="Trigger Source" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RFEN" edc:desc="Recoverable Fault Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4006C450" edc:access="------------nnnn---------nnnnnnn" edc:cname="PWM1_LEBR2" edc:impl="0xF007F" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:SFRFieldDef edc:cname="LEBDELAY" edc:desc="Leading-Edge Blanking Delay for TRGINx" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="PWMLFEN" edc:desc="PWML Falling Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMLREN" edc:desc="PWML Rising Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMHFEN" edc:desc="PWMH Falling Edge Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PWMHREN" edc:desc="PWMH Rising Edge Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C454" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4006C460" edc:access="------------------w---w---------" edc:cname="PWM1_CMUPD3" edc:impl="0x2200" edc:nzwidth="0x20" ltx:memberofperipheral="PWM1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PWM1">
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="CPOLUP" edc:desc="Channel Polarity Update" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CPOLINVUP" edc:desc="Channel Polarity Inversion Update" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4006C464" edc:offset="0x3B9C"/>
      <edc:SFRDef edc:_addr="0x40070000" edc:access="-----------------------------www" edc:cname="TC_CHANNEL0TC0_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070004" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC0_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070008" edc:access="------------------------------nn" edc:cname="TC_CHANNEL0TC0_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007000C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL0TC0_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070010" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL0TC0_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070014" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC0_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070018" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC0_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007001C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC0_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070020" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL0TC0_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070024" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL0TC0_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070028" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL0TC0_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007002C" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL0TC0_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070030" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL0TC0_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40070034" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40070040" edc:access="-----------------------------www" edc:cname="TC_CHANNEL1TC0_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070044" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC0_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070048" edc:access="------------------------------nn" edc:cname="TC_CHANNEL1TC0_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007004C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL1TC0_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070050" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL1TC0_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070054" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC0_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070058" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC0_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007005C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC0_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070060" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL1TC0_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070064" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL1TC0_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070068" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL1TC0_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007006C" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL1TC0_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070070" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL1TC0_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40070074" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40070080" edc:access="-----------------------------www" edc:cname="TC_CHANNEL2TC0_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070084" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC0_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070088" edc:access="------------------------------nn" edc:cname="TC_CHANNEL2TC0_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007008C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL2TC0_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070090" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL2TC0_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070094" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC0_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40070098" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC0_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007009C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC0_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700A0" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL2TC0_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700A4" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL2TC0_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700A8" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL2TC0_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700AC" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL2TC0_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700B0" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL2TC0_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400700B4" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400700C0" edc:access="-------------------------------w" edc:cname="TC0_BCR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="SYNC" edc:desc="Synchro Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700C4" edc:access="------nnnnnn--nnnnnnnnnn--nnnnnn" edc:cname="TC0_BMR" edc:impl="0x3F3FF3F" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="TC0XC0S" edc:desc="External Clock Signal 0 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK0" edc:desc="Signal connected to XC0: TCLK0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC0: TIOA1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC0: TIOA2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1XC1S" edc:desc="External Clock Signal 1 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK1" edc:desc="Signal connected to XC1: TCLK1" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC1: TIOA0" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC1: TIOA2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC2XC2S" edc:desc="External Clock Signal 2 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK2" edc:desc="Signal connected to XC2: TCLK2" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC2: TIOA0" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC2: TIOA1" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="QDEN" edc:desc="Quadrature Decoder Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="POSEN" edc:desc="Position Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPEEDEN" edc:desc="Speed Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QDTRANS" edc:desc="Quadrature Decoding Transparent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGPHA" edc:desc="Edge on PHA Count Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVA" edc:desc="Inverted PHA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVB" edc:desc="Inverted PHB" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVIDX" edc:desc="Inverted Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWAP" edc:desc="Swap PHA and PHB" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IDXPHB" edc:desc="Index Pin is PHB Pin" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXFILT" edc:desc="Maximum Filter" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700C8" edc:access="-----------------------------www" edc:cname="TC0_QIER" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700CC" edc:access="-----------------------------www" edc:cname="TC0_QIDR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700D0" edc:access="-----------------------------rrr" edc:cname="TC0_QIMR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700D4" edc:access="-----------------------r-----rrr" edc:cname="TC0_QISR" edc:impl="0x107" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Direction" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400700D8" edc:access="------------------------------nn" edc:cname="TC0_FMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="ENCF0" edc:desc="Enable Compare Fault Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENCF1" edc:desc="Enable Compare Fault Channel 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400700DC" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400700E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="TC0_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="TC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x54494D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400700E8" edc:offset="0x3F18"/>
      <edc:SFRDef edc:_addr="0x40074000" edc:access="-----------------------------www" edc:cname="TC_CHANNEL0TC1_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074004" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC1_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074008" edc:access="------------------------------nn" edc:cname="TC_CHANNEL0TC1_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007400C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL0TC1_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074010" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL0TC1_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074014" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC1_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074018" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC1_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007401C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC1_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074020" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL0TC1_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074024" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL0TC1_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074028" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL0TC1_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007402C" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL0TC1_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074030" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL0TC1_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40074034" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40074040" edc:access="-----------------------------www" edc:cname="TC_CHANNEL1TC1_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074044" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC1_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074048" edc:access="------------------------------nn" edc:cname="TC_CHANNEL1TC1_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007404C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL1TC1_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074050" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL1TC1_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074054" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC1_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074058" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC1_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007405C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC1_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074060" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL1TC1_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074064" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL1TC1_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074068" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL1TC1_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007406C" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL1TC1_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074070" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL1TC1_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40074074" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40074080" edc:access="-----------------------------www" edc:cname="TC_CHANNEL2TC1_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074084" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC1_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074088" edc:access="------------------------------nn" edc:cname="TC_CHANNEL2TC1_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007408C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL2TC1_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074090" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL2TC1_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074094" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC1_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40074098" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC1_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007409C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC1_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740A0" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL2TC1_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740A4" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL2TC1_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740A8" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL2TC1_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740AC" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL2TC1_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740B0" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL2TC1_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400740B4" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400740C0" edc:access="-------------------------------w" edc:cname="TC1_BCR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="SYNC" edc:desc="Synchro Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740C4" edc:access="------nnnnnn--nnnnnnnnnn--nnnnnn" edc:cname="TC1_BMR" edc:impl="0x3F3FF3F" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="TC0XC0S" edc:desc="External Clock Signal 0 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK0" edc:desc="Signal connected to XC0: TCLK0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC0: TIOA1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC0: TIOA2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1XC1S" edc:desc="External Clock Signal 1 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK1" edc:desc="Signal connected to XC1: TCLK1" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC1: TIOA0" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC1: TIOA2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC2XC2S" edc:desc="External Clock Signal 2 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK2" edc:desc="Signal connected to XC2: TCLK2" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC2: TIOA0" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC2: TIOA1" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="QDEN" edc:desc="Quadrature Decoder Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="POSEN" edc:desc="Position Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPEEDEN" edc:desc="Speed Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QDTRANS" edc:desc="Quadrature Decoding Transparent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGPHA" edc:desc="Edge on PHA Count Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVA" edc:desc="Inverted PHA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVB" edc:desc="Inverted PHB" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVIDX" edc:desc="Inverted Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWAP" edc:desc="Swap PHA and PHB" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IDXPHB" edc:desc="Index Pin is PHB Pin" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXFILT" edc:desc="Maximum Filter" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740C8" edc:access="-----------------------------www" edc:cname="TC1_QIER" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740CC" edc:access="-----------------------------www" edc:cname="TC1_QIDR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740D0" edc:access="-----------------------------rrr" edc:cname="TC1_QIMR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740D4" edc:access="-----------------------r-----rrr" edc:cname="TC1_QISR" edc:impl="0x107" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Direction" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400740D8" edc:access="------------------------------nn" edc:cname="TC1_FMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="ENCF0" edc:desc="Enable Compare Fault Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENCF1" edc:desc="Enable Compare Fault Channel 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400740DC" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400740E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="TC1_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="TC1">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x54494D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400740E8" edc:offset="0x3F18"/>
      <edc:SFRDef edc:_addr="0x40078000" edc:access="-----------------------------www" edc:cname="TC_CHANNEL0TC2_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078004" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC2_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078008" edc:access="------------------------------nn" edc:cname="TC_CHANNEL0TC2_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007800C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL0TC2_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078010" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL0TC2_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078014" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC2_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078018" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC2_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007801C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL0TC2_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078020" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL0TC2_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078024" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL0TC2_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078028" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL0TC2_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007802C" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL0TC2_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078030" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL0TC2_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40078034" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40078040" edc:access="-----------------------------www" edc:cname="TC_CHANNEL1TC2_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078044" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC2_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078048" edc:access="------------------------------nn" edc:cname="TC_CHANNEL1TC2_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007804C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL1TC2_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078050" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL1TC2_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078054" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC2_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078058" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC2_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007805C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL1TC2_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078060" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL1TC2_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078064" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL1TC2_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078068" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL1TC2_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007806C" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL1TC2_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078070" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL1TC2_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40078074" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40078080" edc:access="-----------------------------www" edc:cname="TC_CHANNEL2TC2_CCR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CLKEN" edc:desc="Counter Clock Enable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CLKDIS" edc:desc="Counter Clock Disable Command" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWTRG" edc:desc="Software Trigger Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078084" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC2_CMR" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TCCLKS" edc:desc="Clock Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK1" edc:desc="Clock selected: internal GCLK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK2" edc:desc="Clock selected: internal MCK/8 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK3" edc:desc="Clock selected: internal MCK/32 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK4" edc:desc="Clock selected: internal MCK/128 clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="TIMER_CLOCK5" edc:desc="Clock selected: internal SLCK clock signal (from PMC)" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="Clock selected: XC0" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="Clock selected: XC1" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="Clock selected: XC2" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKI" edc:desc="Clock Invert" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BURST" edc:desc="Burst Signal Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="The clock is not gated by an external signal." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2 is ANDed with the selected clock." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPCSTOP" edc:desc="Counter Clock Stopped with RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCDIS" edc:desc="Counter Clock Disable with RC Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EEVTEDG" edc:desc="External Event Edge Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Rising edge" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Falling edge" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EDGE" edc:desc="Each edge" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EEVT" edc:desc="External Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TIOB" edc:desc="TIOB" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="XC0" edc:desc="XC0" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="XC1" edc:desc="XC1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="XC2" edc:desc="XC2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENETRG" edc:desc="External Event Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVSEL" edc:desc="Waveform Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="UP mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="UPDOWN mode without automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UP_RC" edc:desc="UP mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN_RC" edc:desc="UPDOWN mode with automatic trigger on RC Compare" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="-1"/>
            <edc:SFRFieldDef edc:cname="CPCTRG" edc:desc="RC Compare Trigger Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:desc="Waveform Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ACPA" edc:desc="RA Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ACPC" edc:desc="RC Compare Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AEEVT" edc:desc="External Event Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASWTRG" edc:desc="Software Trigger Effect on TIOAx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPB" edc:desc="RB Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BCPC" edc:desc="RC Compare Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BEEVT" edc:desc="External Event Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BSWTRG" edc:desc="Software Trigger Effect on TIOBx" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Toggle" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078088" edc:access="------------------------------nn" edc:cname="TC_CHANNEL2TC2_SMMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="GCEN" edc:desc="Gray Count Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DOWN" edc:desc="Down Count" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007808C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL2TC2_RAB" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RAB" edc:desc="Register A or Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078090" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TC_CHANNEL2TC2_CV" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CV" edc:desc="Counter Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078094" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC2_RA" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Register A" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40078098" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC2_RB" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RB" edc:desc="Register B" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4007809C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="TC_CHANNEL2TC2_RC" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="RC" edc:desc="Register C" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780A0" edc:access="-------------rrr--------rrrrrrrr" edc:cname="TC_CHANNEL2TC2_SR" edc:impl="0x700FF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CLKSTA" edc:desc="Clock Enabling Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOA" edc:desc="TIOAx Mirror" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MTIOB" edc:desc="TIOBx Mirror" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780A4" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL2TC2_IER" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780A8" edc:access="------------------------wwwwwwww" edc:cname="TC_CHANNEL2TC2_IDR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:desc="External Trigger" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780AC" edc:access="------------------------rrrrrrrr" edc:cname="TC_CHANNEL2TC2_IMR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COVFS" edc:desc="Counter Overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LOVRS" edc:desc="Load Overrun" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPAS" edc:desc="RA Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPBS" edc:desc="RB Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPCS" edc:desc="RC Compare" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRAS" edc:desc="RA Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LDRBS" edc:desc="RB Loading" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ETRGS" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780B0" edc:access="-----------------------n--nn--nn" edc:cname="TC_CHANNEL2TC2_EMR" edc:impl="0x133" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TRIGSRCA" edc:desc="Trigger Source for Input A" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOAx" edc:desc="The trigger/capture input A is driven by external pin TIOAx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input A is driven internally by PWMx" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TRIGSRCB" edc:desc="Trigger Source for Input B" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="EXTERNAL_TIOBx" edc:desc="The trigger/capture input B is driven by external pin TIOBx" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PWMx" edc:desc="The trigger/capture input B is driven internally by the comparator output (see Figure 7-16) of the PWMx." edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NODIVCLK" edc:desc="No Divided Clock" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400780B4" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x400780C0" edc:access="-------------------------------w" edc:cname="TC2_BCR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="SYNC" edc:desc="Synchro Command" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780C4" edc:access="------nnnnnn--nnnnnnnnnn--nnnnnn" edc:cname="TC2_BMR" edc:impl="0x3F3FF3F" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="TC0XC0S" edc:desc="External Clock Signal 0 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK0" edc:desc="Signal connected to XC0: TCLK0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC0: TIOA1" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC0: TIOA2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC1XC1S" edc:desc="External Clock Signal 1 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK1" edc:desc="Signal connected to XC1: TCLK1" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC1: TIOA0" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA2" edc:desc="Signal connected to XC1: TIOA2" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TC2XC2S" edc:desc="External Clock Signal 2 Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="TCLK2" edc:desc="Signal connected to XC2: TCLK2" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TIOA0" edc:desc="Signal connected to XC2: TIOA0" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TIOA1" edc:desc="Signal connected to XC2: TIOA1" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="QDEN" edc:desc="Quadrature Decoder Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="POSEN" edc:desc="Position Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPEEDEN" edc:desc="Speed Enabled" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QDTRANS" edc:desc="Quadrature Decoding Transparent" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGPHA" edc:desc="Edge on PHA Count Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVA" edc:desc="Inverted PHA" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVB" edc:desc="Inverted PHB" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="INVIDX" edc:desc="Inverted Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWAP" edc:desc="Swap PHA and PHB" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IDXPHB" edc:desc="Index Pin is PHB Pin" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXFILT" edc:desc="Maximum Filter" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780C8" edc:access="-----------------------------www" edc:cname="TC2_QIER" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780CC" edc:access="-----------------------------www" edc:cname="TC2_QIDR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780D0" edc:access="-----------------------------rrr" edc:cname="TC2_QIMR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780D4" edc:access="-----------------------r-----rrr" edc:cname="TC2_QISR" edc:impl="0x107" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="IDX" edc:desc="Index" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIRCHG" edc:desc="Direction Change" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="QERR" edc:desc="Quadrature Error" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:desc="Direction" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400780D8" edc:access="------------------------------nn" edc:cname="TC2_FMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="ENCF0" edc:desc="Enable Compare Fault Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ENCF1" edc:desc="Enable Compare Fault Channel 1" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400780DC" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400780E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="TC2_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="TC2">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x54494D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400780E8" edc:offset="0x7F18"/>
      <edc:SFRDef edc:_addr="0x40080000" edc:access="nnn----nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="HEMC_CR_NCS0" edc:impl="0xE1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="ZERO" edc:desc="fixed to 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BANKSIZE" edc:desc="Bank Size" edc:nzwidth="0x5">
              <edc:SFRFieldSemantic edc:cname="_8KB" edc:desc="8Kbytes" edc:when="(field &amp; 0x1F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_16KB" edc:desc="16Kbytes" edc:when="(field &amp; 0x1F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_32KB" edc:desc="32Kbytes" edc:when="(field &amp; 0x1F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_64KB" edc:desc="64Kbytes" edc:when="(field &amp; 0x1F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_128KB" edc:desc="128Kbytes" edc:when="(field &amp; 0x1F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_256KB" edc:desc="256Kbytes" edc:when="(field &amp; 0x1F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_512KB" edc:desc="512Kbytes" edc:when="(field &amp; 0x1F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_1MB" edc:desc="1Mbytes" edc:when="(field &amp; 0x1F) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="_2MB" edc:desc="2Mbytes" edc:when="(field &amp; 0x1F) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="NOT_USED" edc:desc="NOT_USED" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="type of memory used" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDBASE" edc:desc="relative base address of NCS area" edc:nzwidth="0x12"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="WRITE_ECC_CONF" edc:desc="ECC Configuration Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC_ENABLE" edc:desc="ECC Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080004" edc:access="nn-----nnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="HEMC_CR_NCS1" edc:impl="0xC1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="ZERO" edc:desc="fixed to 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BANKSIZE" edc:desc="Bank Size" edc:nzwidth="0x5">
              <edc:SFRFieldSemantic edc:cname="_8KB" edc:desc="8Kbytes" edc:when="(field &amp; 0x1F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_16KB" edc:desc="16Kbytes" edc:when="(field &amp; 0x1F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_32KB" edc:desc="32Kbytes" edc:when="(field &amp; 0x1F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_64KB" edc:desc="64Kbytes" edc:when="(field &amp; 0x1F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_128KB" edc:desc="128Kbytes" edc:when="(field &amp; 0x1F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_256KB" edc:desc="256Kbytes" edc:when="(field &amp; 0x1F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_512KB" edc:desc="512Kbytes" edc:when="(field &amp; 0x1F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_1MB" edc:desc="1Mbytes" edc:when="(field &amp; 0x1F) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="_2MB" edc:desc="2Mbytes" edc:when="(field &amp; 0x1F) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="NOT_USED" edc:desc="NOT_USED" edc:when="(field &amp; 0x1F) == 0x1F"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="type of memory used" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDBASE" edc:desc="relative base address of NCS area" edc:nzwidth="0x12"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ECC_ENABLE" edc:desc="ECC Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECC12_ENABLE" edc:desc="BCH ECC enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40080008" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x40080018" edc:access="-------------------------------n" edc:cname="HEMC_CTRL" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="POL" edc:desc="External control buffer active polarity" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4008001C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40080020" edc:access="------nnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="HEMC_CRP_NCS0" edc:impl="0x3FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="MASTERNUMBER" edc:desc="Master Number ID" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="SUPERUSER" edc:desc="User or Superuser access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WR" edc:desc="Write Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RD" edc:desc="Read Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPLITBANKSIZE" edc:desc="bank size internal separation" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="PROTECTZONE" edc:desc="select area protected" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PROTECTON" edc:desc="protection activation" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080024" edc:access="------nnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="HEMC_CRP_NCS1" edc:impl="0x3FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="MASTERNUMBER" edc:desc="Master Number ID" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="SUPERUSER" edc:desc="User or Superuser access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WR" edc:desc="Write Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RD" edc:desc="Read Access" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SPLITBANKSIZE" edc:desc="bank size internal separation" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="PROTECTZONE" edc:desc="select area protected" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PROTECTON" edc:desc="protection activation" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40080028" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x40080038" edc:access="---------------------------wwww-" edc:cname="HEMC_IER" edc:impl="0x1E" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUTOFRANGE" edc:desc="out of range" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDERRORACCESS" edc:desc="read access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRERRORACCESS" edc:desc="write access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERERRORACCESS" edc:desc="user or superuser access error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008003C" edc:access="---------------------------wwww-" edc:cname="HEMC_IDR" edc:impl="0x1E" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUTOFRANGE" edc:desc="out of range" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDERRORACCESS" edc:desc="read access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRERRORACCESS" edc:desc="write access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERERRORACCESS" edc:desc="user or superuser access error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080040" edc:access="---------------------------rrrr-" edc:cname="HEMC_IMR" edc:impl="0x1E" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUTOFRANGE" edc:desc="out of range" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDERRORACCESS" edc:desc="read access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRERRORACCESS" edc:desc="write access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERERRORACCESS" edc:desc="user or superuser access error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080044" edc:access="---------------------------rrrr-" edc:cname="HEMC_ISR" edc:impl="0x1E" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUTOFRANGE" edc:desc="out of range" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDERRORACCESS" edc:desc="read access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRERRORACCESS" edc:desc="Write access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERERRORACCESS" edc:desc="User or SuperUser Error Access" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080048" edc:access="---------------------------rrrr-" edc:cname="HEMC_SR" edc:impl="0x1E" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUTOFRANGE" edc:desc="out of range" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDERRORACCESS" edc:desc="Read access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRERRORACCESS" edc:desc="Write access error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USERERRORACCESS" edc:desc="User or SuperUser Error Access" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4008004C" edc:offset="0xB4"/>
      <edc:SFRDef edc:_addr="0x40080100" edc:access="--------------------------nn-nn-" edc:cname="HEMC_HECC_CR" edc:impl="0x36" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40080104" edc:offset="0x3C"/>
      <edc:SFRDef edc:_addr="0x40080140" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="HEMC_HECC_TESTCB" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="TCB1" edc:desc="test check bit (16 bit)" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40080144" edc:offset="0x3C"/>
      <edc:SFRDef edc:_addr="0x40080180" edc:access="----rrrr--------rrrrrr-rrrrrrr-r" edc:cname="HEMC_HECC_SR" edc:impl="0xF00FDFD" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="Fixable error status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPT_FIX" edc:desc="5 bits counter" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OVER_FIX" edc:desc="counter overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="Un-fixable error status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPT_NOFIX" edc:desc="5 bits counter" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OVER_NOFIX" edc:desc="counter overflow" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="HES" edc:desc="Hardware Error Size" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="write or read access" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080184" edc:access="------------------------------ww" edc:cname="HEMC_HECC_IER" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="Fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="Un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080188" edc:access="------------------------------ww" edc:cname="HEMC_HECC_IDR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008018C" edc:access="------------------------------rr" edc:cname="HEMC_HECC_IMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080190" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="HEMC_HECC_FAILAR" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:desc="address of the error detected" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40080194" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="HEMC_HECC_FAILDR" edc:nzwidth="0x20" ltx:memberofperipheral="HEMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HEMC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Data error detected" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40080198" edc:offset="0xE68"/>
      <edc:SFRDef edc:_addr="0x40081000" edc:access="--nnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:cname="HSMC_CS0HSMC_SETUP" edc:impl="0x3F3F3F3F" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="NWE_SETUP" edc:desc="NWE Setup Length" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NCS_WR_SETUP" edc:desc="NCS Setup Length in WRITE Access" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NRD_SETUP" edc:desc="NRD Setup Length" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NCS_RD_SETUP" edc:desc="NCS Setup Length in READ Access" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40081004" edc:access="-nnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:cname="HSMC_CS0HSMC_PULSE" edc:impl="0x7F7F7F7F" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="NWE_PULSE" edc:desc="NWE Pulse Length" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NCS_WR_PULSE" edc:desc="NCS Pulse Length in WRITE Access" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NRD_PULSE" edc:desc="NRD Pulse Length" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NCS_RD_PULSE" edc:desc="NCS Pulse Length in READ Access" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40081008" edc:access="-------nnnnnnnnn-------nnnnnnnnn" edc:cname="HSMC_CS0HSMC_CYCLE" edc:impl="0x1FF01FF" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="NWE_CYCLE" edc:desc="Total Write Cycle Length" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="NRD_CYCLE" edc:desc="Total Read Cycle Length" edc:nzwidth="0x9"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008100C" edc:access="----------------------nn--nn-nnn" edc:cname="HSMC_CS0HSMC_MODE" edc:impl="0x337" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="READ_MODE" edc:desc="Read Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRITE_MODE" edc:desc="Write Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RMW_ENABLE" edc:desc="Read-Modify Write enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EXNW_MODE" edc:desc="NWAIT Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Disabled-The NWAIT input signal is ignored on the corresponding chip select." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="Frozen Mode-If asserted, the NWAIT signal freezes the current read or write cycle. After deassertion, the read/write cycle is resumed from the point where it was stopped." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="READY" edc:desc="Ready Mode-The NWAIT signal indicates the availability of the external device at the end of the pulse of the controlling read or write signal, to complete the access. If high, the access normally completes. If low, the access is extended until NWAIT returns high." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DBW" edc:desc="Data Bus Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="8-bit Data Bus" edc:when="(field &amp; 0x3) == 0"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40081010" edc:access="--nnnnnn--nnnnnn--nnnnnn--nnnnnn" edc:cname="HSMC_CS1HSMC_SETUP" edc:impl="0x3F3F3F3F" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="NWE_SETUP" edc:desc="NWE Setup Length" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NCS_WR_SETUP" edc:desc="NCS Setup Length in WRITE Access" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NRD_SETUP" edc:desc="NRD Setup Length" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NCS_RD_SETUP" edc:desc="NCS Setup Length in READ Access" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40081014" edc:access="-nnnnnnn-nnnnnnn-nnnnnnn-nnnnnnn" edc:cname="HSMC_CS1HSMC_PULSE" edc:impl="0x7F7F7F7F" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="NWE_PULSE" edc:desc="NWE Pulse Length" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NCS_WR_PULSE" edc:desc="NCS Pulse Length in WRITE Access" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NRD_PULSE" edc:desc="NRD Pulse Length" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NCS_RD_PULSE" edc:desc="NCS Pulse Length in READ Access" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40081018" edc:access="-------nnnnnnnnn-------nnnnnnnnn" edc:cname="HSMC_CS1HSMC_CYCLE" edc:impl="0x1FF01FF" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="NWE_CYCLE" edc:desc="Total Write Cycle Length" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="NRD_CYCLE" edc:desc="Total Read Cycle Length" edc:nzwidth="0x9"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008101C" edc:access="----------------------nn--nn-nnn" edc:cname="HSMC_CS1HSMC_MODE" edc:impl="0x337" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="READ_MODE" edc:desc="Read Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WRITE_MODE" edc:desc="Write Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RMW_ENABLE" edc:desc="Read-Modify Write enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EXNW_MODE" edc:desc="NWAIT Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Disabled-The NWAIT input signal is ignored on the corresponding chip select." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FROZEN" edc:desc="Frozen Mode-If asserted, the NWAIT signal freezes the current read or write cycle. After deassertion, the read/write cycle is resumed from the point where it was stopped." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="READY" edc:desc="Ready Mode-The NWAIT signal indicates the availability of the external device at the end of the pulse of the controlling read or write signal, to complete the access. If high, the access normally completes. If low, the access is extended until NWAIT returns high." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DBW" edc:desc="Data Bus Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="_8_BIT" edc:desc="8-bit Data Bus" edc:when="(field &amp; 0x3) == 0"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40081020" edc:offset="0x50"/>
      <edc:SFRDef edc:_addr="0x40081070" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="HSMC_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protect Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x534D43"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40081074" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="HSMC_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="HSMC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HSMC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40081078" edc:offset="0xAF88"/>
      <edc:SFRDef edc:_addr="0x4008C000" edc:access="----------------nnnn--nnnnnn-nnn" edc:cname="ICM_CFG" edc:impl="0xF3F7" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="WBDIS" edc:desc="Write Back Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOMDIS" edc:desc="End of Monitoring Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SLBDIS" edc:desc="Secondary List Branching Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BBC" edc:desc="Bus Burden Control" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="ASCD" edc:desc="Automatic Switch To Compare Digest" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DUALBUFF" edc:desc="Dual Input Buffer" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="UIHASH" edc:desc="User Initial Hash Value" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UALGO" edc:desc="User SHA Algorithm" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="SHA1" edc:desc="SHA1 algorithm processed" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SHA256" edc:desc="SHA256 algorithm processed" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SHA224" edc:desc="SHA224 algorithm processed" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C004" edc:access="----------------wwwwwwwwwwww-www" edc:cname="ICM_CTRL" edc:impl="0xFFF7" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ICM Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISABLE" edc:desc="ICM Disable Register" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="Software Reset" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="REHASH" edc:desc="Recompute Internal Hash" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RMDIS" edc:desc="Region Monitoring Disable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RMEN" edc:desc="Region Monitoring Enable" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C008" edc:access="----------------rrrrrrrr-------r" edc:cname="ICM_SR" edc:impl="0xFF01" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ICM Enable Register" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="RAWRMDIS" edc:desc="Region Monitoring Disabled Raw Status" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RMDIS" edc:desc="Region Monitoring Disabled Status" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4008C00C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x4008C010" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_IER" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="RHC" edc:desc="Region Hash Completed Interrupt Enable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RDM" edc:desc="Region Digest Mismatch Interrupt Enable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RBE" edc:desc="Region Bus Error Interrupt Enable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RWC" edc:desc="Region Wrap Condition detected Interrupt Enable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="REC" edc:desc="Region End bit Condition Detected Interrupt Enable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RSU" edc:desc="Region Status Updated Interrupt Disable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="URAD" edc:desc="Undefined Register Access Detection Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C014" edc:access="-------wwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_IDR" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="RHC" edc:desc="Region Hash Completed Interrupt Disable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RDM" edc:desc="Region Digest Mismatch Interrupt Disable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RBE" edc:desc="Region Bus Error Interrupt Disable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RWC" edc:desc="Region Wrap Condition Detected Interrupt Disable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="REC" edc:desc="Region End bit Condition detected Interrupt Disable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RSU" edc:desc="Region Status Updated Interrupt Disable" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="URAD" edc:desc="Undefined Register Access Detection Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C018" edc:access="-------rrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="ICM_IMR" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="RHC" edc:desc="Region Hash Completed Interrupt Mask" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RDM" edc:desc="Region Digest Mismatch Interrupt Mask" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RBE" edc:desc="Region Bus Error Interrupt Mask" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RWC" edc:desc="Region Wrap Condition Detected Interrupt Mask" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="REC" edc:desc="Region End bit Condition Detected Interrupt Mask" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RSU" edc:desc="Region Status Updated Interrupt Mask" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="URAD" edc:desc="Undefined Register Access Detection Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C01C" edc:access="-------rrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="ICM_ISR" edc:impl="0x1FFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="RHC" edc:desc="Region Hash Completed" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RDM" edc:desc="Region Digest Mismatch" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RBE" edc:desc="Region Bus Error" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RWC" edc:desc="Region Wrap Condition Detected" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="REC" edc:desc="Region End Bit Condition Detected" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="RSU" edc:desc="Region Status Updated Detected" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="URAD" edc:desc="Undefined Register Access Detection Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C020" edc:access="-----------------------------rrr" edc:cname="ICM_UASR" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="URAT" edc:desc="Undefined Register Access Trace" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="UNSPEC_STRUCT_MEMBER" edc:desc="Unspecified structure member set to one detected when the descriptor is loaded." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ICM_CFG_MODIFIED" edc:desc="ICM_CFG modified during active monitoring." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ICM_DSCR_MODIFIED" edc:desc="ICM_DSCR modified during active monitoring." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ICM_HASH_MODIFIED" edc:desc="ICM_HASH modified during active monitoring" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="READ_ACCESS" edc:desc="Write-only register read access" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4008C024" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x4008C030" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnn------" edc:cname="ICM_DSCR" edc:impl="0xFFFFFFC0" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DASA" edc:desc="Descriptor Area Start Address" edc:nzwidth="0x1A"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C034" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn-------" edc:cname="ICM_HASH" edc:impl="0xFFFFFF80" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="HASA" edc:desc="Hash Area Start Address" edc:nzwidth="0x19"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C038" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_UIHVAL0" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="VAL" edc:desc="Initial Hash Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C03C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_UIHVAL1" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="VAL" edc:desc="Initial Hash Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C040" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_UIHVAL2" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="VAL" edc:desc="Initial Hash Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C044" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_UIHVAL3" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="VAL" edc:desc="Initial Hash Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C048" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_UIHVAL4" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="VAL" edc:desc="Initial Hash Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C04C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_UIHVAL5" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="VAL" edc:desc="Initial Hash Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C050" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_UIHVAL6" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="VAL" edc:desc="Initial Hash Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C054" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="ICM_UIHVAL7" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="VAL" edc:desc="Initial Hash Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4008C058" edc:offset="0x8C"/>
      <edc:SFRDef edc:_addr="0x4008C0E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="ICM_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN, WPITEN and WPCREN bits. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x49434D"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4008C0E8" edc:access="----------------rrrrrrrr-------r" edc:cname="ICM_WPSR" edc:impl="0xFF01" edc:nzwidth="0x20" ltx:memberofperipheral="ICM">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ICM">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status (Cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4008C0EC" edc:offset="0x3F14"/>
      <edc:SFRDef edc:_addr="0x40090000" edc:access="wwwwwwwwwwwwwwwwwwwwwwww-------w" edc:cname="TRNG_CR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="TRNG">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enables the TRNG to Provide Random Values" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WAKEY" edc:desc="Register Write Access Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFFFFFF) == 0x524E47"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40090004" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40090010" edc:access="-------------------------------w" edc:cname="TRNG_IER" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="TRNG">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATRDY" edc:desc="Data Ready Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40090014" edc:access="-------------------------------w" edc:cname="TRNG_IDR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="TRNG">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATRDY" edc:desc="Data Ready Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40090018" edc:access="-------------------------------r" edc:cname="TRNG_IMR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="TRNG">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATRDY" edc:desc="Data Ready Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009001C" edc:access="-------------------------------r" edc:cname="TRNG_ISR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="TRNG">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="DATRDY" edc:desc="Data Ready (cleared on read)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40090020" edc:offset="0x30"/>
      <edc:SFRDef edc:_addr="0x40090050" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TRNG_ODATA" edc:nzwidth="0x20" ltx:memberofperipheral="TRNG">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TRNG">
            <edc:SFRFieldDef edc:cname="ODATA" edc:desc="Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40090054" edc:offset="0x3FAC"/>
      <edc:SFRDef edc:_addr="0x40094000" edc:access="------------------ww---w---w---w" edc:cname="SHA_CR" edc:impl="0x3111" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="START" edc:desc="Start Processing" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="FIRST" edc:desc="First Block of a Message" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="Software Reset" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WUIHV" edc:desc="Write User Initial Hash Values" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WUIEHV" edc:desc="Write User Initial or Expected Hash Values" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094004" edc:access="nnnn--nn-------n----nnnn-nn---nn" edc:cname="SHA_MR" edc:impl="0xF3010F63" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="SMOD" edc:desc="Start Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MANUAL_START" edc:desc="Manual mode" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_START" edc:desc="Auto mode" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="IDATAR0_START" edc:desc="SHA_IDATAR0 access only mode (mandatory when DMA is used)" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="UIHV" edc:desc="User Initial Hash Value Registers" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UIEHV" edc:desc="User Initial or Expected Hash Value Registers" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ALGO" edc:desc="SHA Algorithm" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="SHA1" edc:desc="SHA1 algorithm processed" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SHA256" edc:desc="SHA256 algorithm processed" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SHA384" edc:desc="SHA384 algorithm processed" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SHA512" edc:desc="SHA512 algorithm processed" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="SHA224" edc:desc="SHA224 algorithm processed" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="HMAC_SHA1" edc:desc="HMAC algorithm with SHA1 Hash processed" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="HMAC_SHA256" edc:desc="HMAC algorithm with SHA256 Hash processed" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="HMAC_SHA384" edc:desc="HMAC algorithm with SHA384 Hash processed" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="HMAC_SHA512" edc:desc="HMAC algorithm with SHA512 Hash processed" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="HMAC_SHA224" edc:desc="HMAC algorithm with SHA224 Hash processed" edc:when="(field &amp; 0xF) == 0xC"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DUALBUFF" edc:desc="Dual Input Buffer" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="INACTIVE" edc:desc="SHA_IDATARx and SHA_IODATARx cannot be written during processing of previous block." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ACTIVE" edc:desc="SHA_IDATARx and SHA_IODATARx can be written during processing of previous block when SMOD value = 2. It speeds up the overall runtime of large files." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="CHECK" edc:desc="Hash Check" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NO_CHECK" edc:desc="No check is performed" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHECK_EHV" edc:desc="Check is performed with expected hash stored in internal expected hash value registers." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHECK_MESSAGE" edc:desc="Check is performed with expected hash provided after the message." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHKCNT" edc:desc="Check Counter" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40094008" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40094010" edc:access="-------w-------w-------w-------w" edc:cname="SHA_IER" edc:impl="0x1010101" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="DATRDY" edc:desc="Data Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="URAD" edc:desc="Unspecified Register Access Detection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="CHECKF" edc:desc="Check Done Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:desc="Safety Event Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094014" edc:access="-------w-------w-------w-------w" edc:cname="SHA_IDR" edc:impl="0x1010101" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="DATRDY" edc:desc="Data Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="URAD" edc:desc="Unspecified Register Access Detection Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="CHECKF" edc:desc="Check Done Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:desc="Safety Event Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094018" edc:access="-------r-------r-------r-------r" edc:cname="SHA_IMR" edc:impl="0x1010101" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="DATRDY" edc:desc="Data Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="URAD" edc:desc="Unspecified Register Access Detection Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="CHECKF" edc:desc="Check Done Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:desc="Safety Event Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009401C" edc:access="-------rrrrr---r-rrr---r---r---r" edc:cname="SHA_ISR" edc:impl="0x1F17111" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="DATRDY" edc:desc="Data Ready (cleared by writing a 1 to bit SWRST or START in SHA_CR, or by reading SHA_IODATARx)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="WRDY" edc:desc="Input Data Register Write Ready" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="URAD" edc:desc="Unspecified Register Access Detection Status (cleared by writing a 1 to SWRST bit in SHA_CR)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="URAT" edc:desc="Unspecified Register Access Type (cleared by writing a 1 to SWRST bit in SHA_CR)" edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CHECKF" edc:desc="Check Done Status (cleared by writing START or SWRST bits in SHA_CR or by reading SHA_IODATARx)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CHKST" edc:desc="Check Status (cleared by writing START or SWRST bits in SHA_CR or by reading SHA_IODATARx)" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="SECE" edc:desc="Security and/or Safety Event" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094020" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_MSR" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="MSGSIZE" edc:desc="Message Size" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40094024" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40094030" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_BCR" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="BYTCNT" edc:desc="Remaining Byte Count Before Auto Padding" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40094034" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40094040" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR0" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094044" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR1" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094048" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR2" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009404C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR3" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094050" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR4" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094054" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR5" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094058" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR6" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009405C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR7" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094060" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR8" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094064" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR9" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094068" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR10" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009406C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR11" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094070" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR12" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094074" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR13" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094078" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR14" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009407C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="SHA_IDATAR15" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IDATA" edc:desc="Input Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094080" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR0" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094084" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR1" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094088" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR2" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009408C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR3" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094090" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR4" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094094" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR5" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40094098" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR6" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009409C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR7" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR8" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR9" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR10" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940AC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR11" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940B0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR12" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940B4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR13" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940B8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR14" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHA_IODATAR15" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="IODATA" edc:desc="Input/Output Data" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400940C0" edc:offset="0x24"/>
      <edc:SFRDef edc:_addr="0x400940E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="SHA_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Configuration Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interruption Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCREN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN,WPITEN,WPCREN bits. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x534841"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400940E8" edc:access="----------------rrrrrrrr-------r" edc:cname="SHA_WPSR" edc:impl="0xFF01" edc:nzwidth="0x20" ltx:memberofperipheral="SHA">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SHA">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400940EC" edc:offset="0x3F14"/>
      <edc:SFRDef edc:_addr="0x40098000" edc:access="---------rrrrrrrrrrrrrrrrrrrrrrr" edc:cname="XDMAC_GTYPE" edc:impl="0x7FFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NB_CH" edc:desc="Number of Channels Minus One" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="FIFO_SZ" edc:desc="Number of Bytes" edc:nzwidth="0xB"/>
            <edc:SFRFieldDef edc:cname="NB_REQ" edc:desc="Number of Peripheral Requests Minus One" edc:nzwidth="0x7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098004" edc:access="-----------------------n----nnnn" edc:cname="XDMAC_GCFG" edc:impl="0x10F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="CGDISREG" edc:desc="Configuration Registers Clock Gating Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CGDISPIPE" edc:desc="Pipeline Clock Gating Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CGDISFIFO" edc:desc="FIFO Clock Gating Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CGDISIF" edc:desc="Bus Interface Clock Gating Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="BXKBEN" edc:desc="Boundary X Kilobyte Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098008" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="XDMAC_GWAC" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="PW0" edc:desc="Pool Weight 0" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PW1" edc:desc="Pool Weight 1" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PW2" edc:desc="Pool Weight 2" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PW3" edc:desc="Pool Weight 3" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009800C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="XDMAC_GIE" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="IE0" edc:desc="XDMAC Channel 0 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE1" edc:desc="XDMAC Channel 1 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE2" edc:desc="XDMAC Channel 2 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE3" edc:desc="XDMAC Channel 3 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE4" edc:desc="XDMAC Channel 4 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE5" edc:desc="XDMAC Channel 5 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE6" edc:desc="XDMAC Channel 6 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE7" edc:desc="XDMAC Channel 7 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE8" edc:desc="XDMAC Channel 8 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE9" edc:desc="XDMAC Channel 9 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE10" edc:desc="XDMAC Channel 10 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE11" edc:desc="XDMAC Channel 11 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE12" edc:desc="XDMAC Channel 12 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE13" edc:desc="XDMAC Channel 13 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE14" edc:desc="XDMAC Channel 14 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE15" edc:desc="XDMAC Channel 15 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE16" edc:desc="XDMAC Channel 16 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE17" edc:desc="XDMAC Channel 17 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE18" edc:desc="XDMAC Channel 18 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE19" edc:desc="XDMAC Channel 19 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE20" edc:desc="XDMAC Channel 20 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE21" edc:desc="XDMAC Channel 21 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE22" edc:desc="XDMAC Channel 22 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE23" edc:desc="XDMAC Channel 23 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE24" edc:desc="XDMAC Channel 24 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE25" edc:desc="XDMAC Channel 25 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE26" edc:desc="XDMAC Channel 26 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE27" edc:desc="XDMAC Channel 27 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE28" edc:desc="XDMAC Channel 28 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE29" edc:desc="XDMAC Channel 29 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE30" edc:desc="XDMAC Channel 30 Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IE31" edc:desc="XDMAC Channel 31 Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098010" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="XDMAC_GID" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="ID0" edc:desc="XDMAC Channel 0 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID1" edc:desc="XDMAC Channel 1 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID2" edc:desc="XDMAC Channel 2 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID3" edc:desc="XDMAC Channel 3 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID4" edc:desc="XDMAC Channel 4 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID5" edc:desc="XDMAC Channel 5 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID6" edc:desc="XDMAC Channel 6 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID7" edc:desc="XDMAC Channel 7 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID8" edc:desc="XDMAC Channel 8 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID9" edc:desc="XDMAC Channel 9 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID10" edc:desc="XDMAC Channel 10 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID11" edc:desc="XDMAC Channel 11 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID12" edc:desc="XDMAC Channel 12 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID13" edc:desc="XDMAC Channel 13 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID14" edc:desc="XDMAC Channel 14 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID15" edc:desc="XDMAC Channel 15 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID16" edc:desc="XDMAC Channel 16 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID17" edc:desc="XDMAC Channel 17 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID18" edc:desc="XDMAC Channel 18 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID19" edc:desc="XDMAC Channel 19 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID20" edc:desc="XDMAC Channel 20 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID21" edc:desc="XDMAC Channel 21 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID22" edc:desc="XDMAC Channel 22 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID23" edc:desc="XDMAC Channel 23 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID24" edc:desc="XDMAC Channel 24 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID25" edc:desc="XDMAC Channel 25 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID26" edc:desc="XDMAC Channel 26 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID27" edc:desc="XDMAC Channel 27 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID28" edc:desc="XDMAC Channel 28 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID29" edc:desc="XDMAC Channel 29 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID30" edc:desc="XDMAC Channel 30 Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ID31" edc:desc="XDMAC Channel 31 Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098014" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="XDMAC_GIM" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="IM0" edc:desc="XDMAC Channel 0 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM1" edc:desc="XDMAC Channel 1 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM2" edc:desc="XDMAC Channel 2 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM3" edc:desc="XDMAC Channel 3 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM4" edc:desc="XDMAC Channel 4 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM5" edc:desc="XDMAC Channel 5 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM6" edc:desc="XDMAC Channel 6 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM7" edc:desc="XDMAC Channel 7 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM8" edc:desc="XDMAC Channel 8 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM9" edc:desc="XDMAC Channel 9 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM10" edc:desc="XDMAC Channel 10 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM11" edc:desc="XDMAC Channel 11 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM12" edc:desc="XDMAC Channel 12 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM13" edc:desc="XDMAC Channel 13 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM14" edc:desc="XDMAC Channel 14 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM15" edc:desc="XDMAC Channel 15 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM16" edc:desc="XDMAC Channel 16 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM17" edc:desc="XDMAC Channel 17 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM18" edc:desc="XDMAC Channel 18 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM19" edc:desc="XDMAC Channel 19 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM20" edc:desc="XDMAC Channel 20 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM21" edc:desc="XDMAC Channel 21 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM22" edc:desc="XDMAC Channel 22 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM23" edc:desc="XDMAC Channel 23 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM24" edc:desc="XDMAC Channel 24 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM25" edc:desc="XDMAC Channel 25 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM26" edc:desc="XDMAC Channel 26 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM27" edc:desc="XDMAC Channel 27 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM28" edc:desc="XDMAC Channel 28 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM29" edc:desc="XDMAC Channel 29 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM30" edc:desc="XDMAC Channel 30 Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IM31" edc:desc="XDMAC Channel 31 Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098018" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="XDMAC_GIS" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="IS0" edc:desc="XDMAC Channel 0 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS1" edc:desc="XDMAC Channel 1 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS2" edc:desc="XDMAC Channel 2 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS3" edc:desc="XDMAC Channel 3 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS4" edc:desc="XDMAC Channel 4 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS5" edc:desc="XDMAC Channel 5 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS6" edc:desc="XDMAC Channel 6 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS7" edc:desc="XDMAC Channel 7 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS8" edc:desc="XDMAC Channel 8 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS9" edc:desc="XDMAC Channel 9 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS10" edc:desc="XDMAC Channel 10 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS11" edc:desc="XDMAC Channel 11 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS12" edc:desc="XDMAC Channel 12 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS13" edc:desc="XDMAC Channel 13 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS14" edc:desc="XDMAC Channel 14 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS15" edc:desc="XDMAC Channel 15 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS16" edc:desc="XDMAC Channel 16 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS17" edc:desc="XDMAC Channel 17 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS18" edc:desc="XDMAC Channel 18 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS19" edc:desc="XDMAC Channel 19 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS20" edc:desc="XDMAC Channel 20 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS21" edc:desc="XDMAC Channel 21 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS22" edc:desc="XDMAC Channel 22 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS23" edc:desc="XDMAC Channel 23 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS24" edc:desc="XDMAC Channel 24 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS25" edc:desc="XDMAC Channel 25 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS26" edc:desc="XDMAC Channel 26 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS27" edc:desc="XDMAC Channel 27 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS28" edc:desc="XDMAC Channel 28 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS29" edc:desc="XDMAC Channel 29 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS30" edc:desc="XDMAC Channel 30 Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IS31" edc:desc="XDMAC Channel 31 Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009801C" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="XDMAC_GE" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="EN0" edc:desc="XDMAC Channel 0 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN1" edc:desc="XDMAC Channel 1 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN2" edc:desc="XDMAC Channel 2 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN3" edc:desc="XDMAC Channel 3 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN4" edc:desc="XDMAC Channel 4 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN5" edc:desc="XDMAC Channel 5 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN6" edc:desc="XDMAC Channel 6 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN7" edc:desc="XDMAC Channel 7 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN8" edc:desc="XDMAC Channel 8 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN9" edc:desc="XDMAC Channel 9 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN10" edc:desc="XDMAC Channel 10 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN11" edc:desc="XDMAC Channel 11 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN12" edc:desc="XDMAC Channel 12 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN13" edc:desc="XDMAC Channel 13 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN14" edc:desc="XDMAC Channel 14 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN15" edc:desc="XDMAC Channel 15 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN16" edc:desc="XDMAC Channel 16 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN17" edc:desc="XDMAC Channel 17 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN18" edc:desc="XDMAC Channel 18 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN19" edc:desc="XDMAC Channel 19 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN20" edc:desc="XDMAC Channel 20 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN21" edc:desc="XDMAC Channel 21 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN22" edc:desc="XDMAC Channel 22 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN23" edc:desc="XDMAC Channel 23 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN24" edc:desc="XDMAC Channel 24 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN25" edc:desc="XDMAC Channel 25 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN26" edc:desc="XDMAC Channel 26 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN27" edc:desc="XDMAC Channel 27 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN28" edc:desc="XDMAC Channel 28 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN29" edc:desc="XDMAC Channel 29 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN30" edc:desc="XDMAC Channel 30 Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EN31" edc:desc="XDMAC Channel 31 Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098020" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="XDMAC_GD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DI0" edc:desc="XDMAC Channel 0 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI1" edc:desc="XDMAC Channel 1 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI2" edc:desc="XDMAC Channel 2 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI3" edc:desc="XDMAC Channel 3 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI4" edc:desc="XDMAC Channel 4 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI5" edc:desc="XDMAC Channel 5 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI6" edc:desc="XDMAC Channel 6 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI7" edc:desc="XDMAC Channel 7 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI8" edc:desc="XDMAC Channel 8 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI9" edc:desc="XDMAC Channel 9 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI10" edc:desc="XDMAC Channel 10 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI11" edc:desc="XDMAC Channel 11 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI12" edc:desc="XDMAC Channel 12 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI13" edc:desc="XDMAC Channel 13 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI14" edc:desc="XDMAC Channel 14 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI15" edc:desc="XDMAC Channel 15 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI16" edc:desc="XDMAC Channel 16 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI17" edc:desc="XDMAC Channel 17 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI18" edc:desc="XDMAC Channel 18 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI19" edc:desc="XDMAC Channel 19 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI20" edc:desc="XDMAC Channel 20 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI21" edc:desc="XDMAC Channel 21 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI22" edc:desc="XDMAC Channel 22 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI23" edc:desc="XDMAC Channel 23 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI24" edc:desc="XDMAC Channel 24 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI25" edc:desc="XDMAC Channel 25 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI26" edc:desc="XDMAC Channel 26 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI27" edc:desc="XDMAC Channel 27 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI28" edc:desc="XDMAC Channel 28 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI29" edc:desc="XDMAC Channel 29 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI30" edc:desc="XDMAC Channel 30 Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DI31" edc:desc="XDMAC Channel 31 Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098024" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="XDMAC_GS" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="ST0" edc:desc="XDMAC Channel 0 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST1" edc:desc="XDMAC Channel 1 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST2" edc:desc="XDMAC Channel 2 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST3" edc:desc="XDMAC Channel 3 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST4" edc:desc="XDMAC Channel 4 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST5" edc:desc="XDMAC Channel 5 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST6" edc:desc="XDMAC Channel 6 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST7" edc:desc="XDMAC Channel 7 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST8" edc:desc="XDMAC Channel 8 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST9" edc:desc="XDMAC Channel 9 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST10" edc:desc="XDMAC Channel 10 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST11" edc:desc="XDMAC Channel 11 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST12" edc:desc="XDMAC Channel 12 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST13" edc:desc="XDMAC Channel 13 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST14" edc:desc="XDMAC Channel 14 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST15" edc:desc="XDMAC Channel 15 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST16" edc:desc="XDMAC Channel 16 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST17" edc:desc="XDMAC Channel 17 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST18" edc:desc="XDMAC Channel 18 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST19" edc:desc="XDMAC Channel 19 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST20" edc:desc="XDMAC Channel 20 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST21" edc:desc="XDMAC Channel 21 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST22" edc:desc="XDMAC Channel 22 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST23" edc:desc="XDMAC Channel 23 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST24" edc:desc="XDMAC Channel 24 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST25" edc:desc="XDMAC Channel 25 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST26" edc:desc="XDMAC Channel 26 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST27" edc:desc="XDMAC Channel 27 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST28" edc:desc="XDMAC Channel 28 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST29" edc:desc="XDMAC Channel 29 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST30" edc:desc="XDMAC Channel 30 Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ST31" edc:desc="XDMAC Channel 31 Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098028" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_GRS" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="RS0" edc:desc="XDMAC Channel 0 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS1" edc:desc="XDMAC Channel 1 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS2" edc:desc="XDMAC Channel 2 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS3" edc:desc="XDMAC Channel 3 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS4" edc:desc="XDMAC Channel 4 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS5" edc:desc="XDMAC Channel 5 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS6" edc:desc="XDMAC Channel 6 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS7" edc:desc="XDMAC Channel 7 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS8" edc:desc="XDMAC Channel 8 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS9" edc:desc="XDMAC Channel 9 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS10" edc:desc="XDMAC Channel 10 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS11" edc:desc="XDMAC Channel 11 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS12" edc:desc="XDMAC Channel 12 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS13" edc:desc="XDMAC Channel 13 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS14" edc:desc="XDMAC Channel 14 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS15" edc:desc="XDMAC Channel 15 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS16" edc:desc="XDMAC Channel 16 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS17" edc:desc="XDMAC Channel 17 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS18" edc:desc="XDMAC Channel 18 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS19" edc:desc="XDMAC Channel 19 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS20" edc:desc="XDMAC Channel 20 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS21" edc:desc="XDMAC Channel 21 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS22" edc:desc="XDMAC Channel 22 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS23" edc:desc="XDMAC Channel 23 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS24" edc:desc="XDMAC Channel 24 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS25" edc:desc="XDMAC Channel 25 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS26" edc:desc="XDMAC Channel 26 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS27" edc:desc="XDMAC Channel 27 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS28" edc:desc="XDMAC Channel 28 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS29" edc:desc="XDMAC Channel 29 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS30" edc:desc="XDMAC Channel 30 Read Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RS31" edc:desc="XDMAC Channel 31 Read Suspend Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009802C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_GWS" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="WS0" edc:desc="XDMAC Channel 0 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS1" edc:desc="XDMAC Channel 1 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS2" edc:desc="XDMAC Channel 2 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS3" edc:desc="XDMAC Channel 3 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS4" edc:desc="XDMAC Channel 4 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS5" edc:desc="XDMAC Channel 5 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS6" edc:desc="XDMAC Channel 6 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS7" edc:desc="XDMAC Channel 7 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS8" edc:desc="XDMAC Channel 8 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS9" edc:desc="XDMAC Channel 9 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS10" edc:desc="XDMAC Channel 10 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS11" edc:desc="XDMAC Channel 11 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS12" edc:desc="XDMAC Channel 12 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS13" edc:desc="XDMAC Channel 13 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS14" edc:desc="XDMAC Channel 14 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS15" edc:desc="XDMAC Channel 15 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS16" edc:desc="XDMAC Channel 16 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS17" edc:desc="XDMAC Channel 17 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS18" edc:desc="XDMAC Channel 18 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS19" edc:desc="XDMAC Channel 19 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS20" edc:desc="XDMAC Channel 20 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS21" edc:desc="XDMAC Channel 21 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS22" edc:desc="XDMAC Channel 22 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS23" edc:desc="XDMAC Channel 23 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS24" edc:desc="XDMAC Channel 24 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS25" edc:desc="XDMAC Channel 25 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS26" edc:desc="XDMAC Channel 26 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS27" edc:desc="XDMAC Channel 27 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS28" edc:desc="XDMAC Channel 28 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS29" edc:desc="XDMAC Channel 29 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS30" edc:desc="XDMAC Channel 30 Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WS31" edc:desc="XDMAC Channel 31 Write Suspend Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098030" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="XDMAC_GRWS" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="RWS0" edc:desc="XDMAC Channel 0 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS1" edc:desc="XDMAC Channel 1 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS2" edc:desc="XDMAC Channel 2 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS3" edc:desc="XDMAC Channel 3 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS4" edc:desc="XDMAC Channel 4 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS5" edc:desc="XDMAC Channel 5 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS6" edc:desc="XDMAC Channel 6 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS7" edc:desc="XDMAC Channel 7 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS8" edc:desc="XDMAC Channel 8 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS9" edc:desc="XDMAC Channel 9 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS10" edc:desc="XDMAC Channel 10 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS11" edc:desc="XDMAC Channel 11 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS12" edc:desc="XDMAC Channel 12 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS13" edc:desc="XDMAC Channel 13 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS14" edc:desc="XDMAC Channel 14 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS15" edc:desc="XDMAC Channel 15 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS16" edc:desc="XDMAC Channel 16 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS17" edc:desc="XDMAC Channel 17 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS18" edc:desc="XDMAC Channel 18 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS19" edc:desc="XDMAC Channel 19 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS20" edc:desc="XDMAC Channel 20 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS21" edc:desc="XDMAC Channel 21 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS22" edc:desc="XDMAC Channel 22 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS23" edc:desc="XDMAC Channel 23 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS24" edc:desc="XDMAC Channel 24 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS25" edc:desc="XDMAC Channel 25 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS26" edc:desc="XDMAC Channel 26 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS27" edc:desc="XDMAC Channel 27 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS28" edc:desc="XDMAC Channel 28 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS29" edc:desc="XDMAC Channel 29 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS30" edc:desc="XDMAC Channel 30 Read Write Suspend Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS31" edc:desc="XDMAC Channel 31 Read Write Suspend Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098034" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="XDMAC_GRWR" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="RWR0" edc:desc="XDMAC Channel 0 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR1" edc:desc="XDMAC Channel 1 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR2" edc:desc="XDMAC Channel 2 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR3" edc:desc="XDMAC Channel 3 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR4" edc:desc="XDMAC Channel 4 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR5" edc:desc="XDMAC Channel 5 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR6" edc:desc="XDMAC Channel 6 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR7" edc:desc="XDMAC Channel 7 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR8" edc:desc="XDMAC Channel 8 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR9" edc:desc="XDMAC Channel 9 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR10" edc:desc="XDMAC Channel 10 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR11" edc:desc="XDMAC Channel 11 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR12" edc:desc="XDMAC Channel 12 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR13" edc:desc="XDMAC Channel 13 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR14" edc:desc="XDMAC Channel 14 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR15" edc:desc="XDMAC Channel 15 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR16" edc:desc="XDMAC Channel 16 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR17" edc:desc="XDMAC Channel 17 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR18" edc:desc="XDMAC Channel 18 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR19" edc:desc="XDMAC Channel 19 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR20" edc:desc="XDMAC Channel 20 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR21" edc:desc="XDMAC Channel 21 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR22" edc:desc="XDMAC Channel 22 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR23" edc:desc="XDMAC Channel 23 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR24" edc:desc="XDMAC Channel 24 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR25" edc:desc="XDMAC Channel 25 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR26" edc:desc="XDMAC Channel 26 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR27" edc:desc="XDMAC Channel 27 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR28" edc:desc="XDMAC Channel 28 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR29" edc:desc="XDMAC Channel 29 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR30" edc:desc="XDMAC Channel 30 Read Write Resume Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RWR31" edc:desc="XDMAC Channel 31 Read Write Resume Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098038" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="XDMAC_GSWR" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SWREQ0" edc:desc="XDMAC Channel 0 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ1" edc:desc="XDMAC Channel 1 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ2" edc:desc="XDMAC Channel 2 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ3" edc:desc="XDMAC Channel 3 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ4" edc:desc="XDMAC Channel 4 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ5" edc:desc="XDMAC Channel 5 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ6" edc:desc="XDMAC Channel 6 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ7" edc:desc="XDMAC Channel 7 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ8" edc:desc="XDMAC Channel 8 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ9" edc:desc="XDMAC Channel 9 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ10" edc:desc="XDMAC Channel 10 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ11" edc:desc="XDMAC Channel 11 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ12" edc:desc="XDMAC Channel 12 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ13" edc:desc="XDMAC Channel 13 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ14" edc:desc="XDMAC Channel 14 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ15" edc:desc="XDMAC Channel 15 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ16" edc:desc="XDMAC Channel 16 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ17" edc:desc="XDMAC Channel 17 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ18" edc:desc="XDMAC Channel 18 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ19" edc:desc="XDMAC Channel 19 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ20" edc:desc="XDMAC Channel 20 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ21" edc:desc="XDMAC Channel 21 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ22" edc:desc="XDMAC Channel 22 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ23" edc:desc="XDMAC Channel 23 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ24" edc:desc="XDMAC Channel 24 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ25" edc:desc="XDMAC Channel 25 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ26" edc:desc="XDMAC Channel 26 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ27" edc:desc="XDMAC Channel 27 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ28" edc:desc="XDMAC Channel 28 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ29" edc:desc="XDMAC Channel 29 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ30" edc:desc="XDMAC Channel 30 Software Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWREQ31" edc:desc="XDMAC Channel 31 Software Request Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009803C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="XDMAC_GSWS" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SWRS0" edc:desc="XDMAC Channel 0 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS1" edc:desc="XDMAC Channel 1 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS2" edc:desc="XDMAC Channel 2 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS3" edc:desc="XDMAC Channel 3 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS4" edc:desc="XDMAC Channel 4 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS5" edc:desc="XDMAC Channel 5 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS6" edc:desc="XDMAC Channel 6 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS7" edc:desc="XDMAC Channel 7 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS8" edc:desc="XDMAC Channel 8 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS9" edc:desc="XDMAC Channel 9 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS10" edc:desc="XDMAC Channel 10 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS11" edc:desc="XDMAC Channel 11 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS12" edc:desc="XDMAC Channel 12 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS13" edc:desc="XDMAC Channel 13 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS14" edc:desc="XDMAC Channel 14 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS15" edc:desc="XDMAC Channel 15 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS16" edc:desc="XDMAC Channel 16 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS17" edc:desc="XDMAC Channel 17 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS18" edc:desc="XDMAC Channel 18 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS19" edc:desc="XDMAC Channel 19 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS20" edc:desc="XDMAC Channel 20 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS21" edc:desc="XDMAC Channel 21 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS22" edc:desc="XDMAC Channel 22 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS23" edc:desc="XDMAC Channel 23 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS24" edc:desc="XDMAC Channel 24 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS25" edc:desc="XDMAC Channel 25 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS26" edc:desc="XDMAC Channel 26 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS27" edc:desc="XDMAC Channel 27 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS28" edc:desc="XDMAC Channel 28 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS29" edc:desc="XDMAC Channel 29 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS30" edc:desc="XDMAC Channel 30 Software Request Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWRS31" edc:desc="XDMAC Channel 31 Software Request Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098040" edc:access="wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" edc:cname="XDMAC_GSWF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SWF0" edc:desc="XDMAC Channel 0 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF1" edc:desc="XDMAC Channel 1 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF2" edc:desc="XDMAC Channel 2 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF3" edc:desc="XDMAC Channel 3 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF4" edc:desc="XDMAC Channel 4 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF5" edc:desc="XDMAC Channel 5 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF6" edc:desc="XDMAC Channel 6 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF7" edc:desc="XDMAC Channel 7 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF8" edc:desc="XDMAC Channel 8 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF9" edc:desc="XDMAC Channel 9 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF10" edc:desc="XDMAC Channel 10 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF11" edc:desc="XDMAC Channel 11 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF12" edc:desc="XDMAC Channel 12 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF13" edc:desc="XDMAC Channel 13 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF14" edc:desc="XDMAC Channel 14 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF15" edc:desc="XDMAC Channel 15 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF16" edc:desc="XDMAC Channel 16 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF17" edc:desc="XDMAC Channel 17 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF18" edc:desc="XDMAC Channel 18 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF19" edc:desc="XDMAC Channel 19 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF20" edc:desc="XDMAC Channel 20 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF21" edc:desc="XDMAC Channel 21 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF22" edc:desc="XDMAC Channel 22 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF23" edc:desc="XDMAC Channel 23 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF24" edc:desc="XDMAC Channel 24 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF25" edc:desc="XDMAC Channel 25 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF26" edc:desc="XDMAC Channel 26 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF27" edc:desc="XDMAC Channel 27 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF28" edc:desc="XDMAC Channel 28 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF29" edc:desc="XDMAC Channel 29 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF30" edc:desc="XDMAC Channel 30 Software Flush Request Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SWF31" edc:desc="XDMAC Channel 31 Software Flush Request Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098044" edc:offset="0xC"/>
      <edc:SFRDef edc:_addr="0x40098050" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID0XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098054" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID0XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098058" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID0XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009805C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID0XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098060" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID0XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098064" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID0XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098068" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID0XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009806C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID0XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098070" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID0XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098074" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID0XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098078" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID0XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009807C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID0XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098080" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID0XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098084" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID0XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098088" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098090" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID1XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098094" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID1XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098098" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID1XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009809C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID1XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID1XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID1XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID1XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980AC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID1XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980B0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID1XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980B4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID1XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980B8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID1XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID1XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980C0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID1XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980C4" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID1XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400980C8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400980D0" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID2XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980D4" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID2XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980D8" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID2XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980DC" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID2XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID2XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID2XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980E8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID2XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980EC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID2XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980F0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID2XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980F4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID2XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980F8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID2XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400980FC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID2XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098100" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID2XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098104" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID2XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098108" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098110" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID3XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098114" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID3XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098118" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID3XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009811C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID3XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098120" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID3XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098124" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID3XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098128" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID3XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009812C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID3XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098130" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID3XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098134" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID3XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098138" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID3XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009813C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID3XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098140" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID3XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098144" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID3XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098148" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098150" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID4XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098154" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID4XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098158" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID4XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009815C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID4XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098160" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID4XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098164" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID4XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098168" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID4XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009816C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID4XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098170" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID4XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098174" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID4XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098178" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID4XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009817C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID4XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098180" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID4XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098184" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID4XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098188" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098190" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID5XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098194" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID5XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098198" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID5XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009819C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID5XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID5XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID5XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID5XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981AC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID5XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981B0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID5XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981B4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID5XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981B8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID5XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID5XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981C0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID5XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981C4" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID5XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400981C8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400981D0" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID6XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981D4" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID6XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981D8" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID6XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981DC" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID6XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID6XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID6XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981E8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID6XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981EC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID6XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981F0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID6XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981F4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID6XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981F8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID6XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400981FC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID6XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098200" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID6XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098204" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID6XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098208" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098210" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID7XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098214" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID7XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098218" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID7XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009821C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID7XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098220" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID7XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098224" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID7XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098228" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID7XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009822C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID7XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098230" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID7XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098234" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID7XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098238" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID7XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009823C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID7XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098240" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID7XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098244" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID7XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098248" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098250" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID8XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098254" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID8XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098258" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID8XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009825C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID8XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098260" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID8XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098264" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID8XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098268" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID8XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009826C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID8XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098270" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID8XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098274" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID8XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098278" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID8XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009827C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID8XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098280" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID8XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098284" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID8XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098288" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098290" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID9XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098294" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID9XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098298" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID9XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009829C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID9XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID9XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID9XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID9XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982AC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID9XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982B0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID9XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982B4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID9XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982B8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID9XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID9XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982C0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID9XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982C4" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID9XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400982C8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400982D0" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID10XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982D4" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID10XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982D8" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID10XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982DC" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID10XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID10XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID10XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982E8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID10XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982EC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID10XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982F0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID10XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982F4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID10XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982F8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID10XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400982FC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID10XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098300" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID10XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098304" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID10XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098308" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098310" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID11XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098314" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID11XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098318" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID11XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009831C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID11XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098320" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID11XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098324" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID11XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098328" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID11XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009832C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID11XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098330" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID11XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098334" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID11XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098338" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID11XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009833C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID11XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098340" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID11XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098344" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID11XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098348" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098350" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID12XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098354" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID12XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098358" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID12XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009835C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID12XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098360" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID12XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098364" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID12XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098368" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID12XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009836C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID12XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098370" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID12XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098374" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID12XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098378" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID12XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009837C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID12XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098380" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID12XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098384" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID12XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098388" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098390" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID13XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098394" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID13XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098398" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID13XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009839C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID13XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID13XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID13XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID13XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983AC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID13XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983B0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID13XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983B4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID13XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983B8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID13XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID13XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983C0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID13XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983C4" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID13XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400983C8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400983D0" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID14XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983D4" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID14XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983D8" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID14XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983DC" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID14XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID14XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID14XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983E8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID14XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983EC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID14XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983F0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID14XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983F4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID14XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983F8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID14XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400983FC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID14XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098400" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID14XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098404" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID14XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098408" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098410" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID15XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098414" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID15XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098418" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID15XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009841C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID15XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098420" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID15XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098424" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID15XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098428" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID15XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009842C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID15XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098430" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID15XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098434" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID15XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098438" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID15XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009843C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID15XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098440" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID15XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098444" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID15XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098448" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098450" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID16XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098454" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID16XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098458" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID16XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009845C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID16XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098460" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID16XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098464" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID16XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098468" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID16XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009846C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID16XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098470" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID16XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098474" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID16XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098478" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID16XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009847C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID16XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098480" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID16XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098484" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID16XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098488" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098490" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID17XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098494" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID17XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098498" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID17XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009849C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID17XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID17XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID17XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID17XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984AC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID17XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984B0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID17XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984B4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID17XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984B8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID17XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID17XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984C0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID17XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984C4" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID17XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400984C8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400984D0" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID18XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984D4" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID18XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984D8" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID18XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984DC" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID18XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID18XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID18XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984E8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID18XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984EC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID18XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984F0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID18XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984F4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID18XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984F8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID18XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400984FC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID18XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098500" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID18XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098504" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID18XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098508" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098510" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID19XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098514" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID19XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098518" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID19XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009851C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID19XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098520" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID19XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098524" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID19XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098528" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID19XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009852C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID19XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098530" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID19XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098534" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID19XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098538" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID19XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009853C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID19XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098540" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID19XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098544" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID19XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098548" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098550" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID20XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098554" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID20XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098558" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID20XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009855C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID20XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098560" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID20XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098564" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID20XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098568" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID20XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009856C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID20XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098570" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID20XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098574" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID20XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098578" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID20XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009857C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID20XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098580" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID20XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098584" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID20XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098588" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098590" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID21XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098594" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID21XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098598" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID21XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009859C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID21XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID21XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID21XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID21XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985AC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID21XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985B0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID21XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985B4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID21XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985B8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID21XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID21XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985C0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID21XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985C4" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID21XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400985C8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400985D0" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID22XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985D4" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID22XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985D8" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID22XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985DC" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID22XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID22XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID22XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985E8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID22XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985EC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID22XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985F0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID22XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985F4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID22XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985F8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID22XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400985FC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID22XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098600" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID22XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098604" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID22XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098608" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098610" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID23XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098614" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID23XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098618" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID23XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009861C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID23XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098620" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID23XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098624" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID23XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098628" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID23XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009862C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID23XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098630" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID23XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098634" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID23XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098638" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID23XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009863C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID23XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098640" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID23XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098644" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID23XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098648" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098650" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID24XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098654" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID24XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098658" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID24XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009865C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID24XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098660" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID24XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098664" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID24XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098668" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID24XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009866C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID24XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098670" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID24XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098674" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID24XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098678" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID24XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009867C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID24XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098680" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID24XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098684" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID24XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098688" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098690" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID25XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098694" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID25XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098698" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID25XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009869C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID25XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID25XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID25XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID25XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986AC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID25XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986B0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID25XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986B4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID25XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986B8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID25XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID25XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986C0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID25XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986C4" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID25XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400986C8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400986D0" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID26XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986D4" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID26XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986D8" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID26XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986DC" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID26XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID26XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID26XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986E8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID26XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986EC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID26XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986F0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID26XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986F4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID26XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986F8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID26XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400986FC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID26XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098700" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID26XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098704" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID26XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098708" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098710" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID27XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098714" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID27XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098718" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID27XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009871C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID27XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098720" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID27XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098724" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID27XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098728" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID27XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009872C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID27XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098730" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID27XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098734" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID27XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098738" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID27XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009873C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID27XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098740" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID27XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098744" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID27XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098748" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098750" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID28XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098754" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID28XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098758" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID28XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009875C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID28XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098760" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID28XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098764" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID28XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098768" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID28XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009876C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID28XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098770" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID28XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098774" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID28XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098778" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID28XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009877C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID28XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098780" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID28XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098784" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID28XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098788" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098790" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID29XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098794" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID29XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098798" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID29XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009879C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID29XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987A0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID29XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987A4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID29XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987A8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID29XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987AC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID29XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987B0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID29XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987B4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID29XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987B8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID29XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987BC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID29XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987C0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID29XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987C4" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID29XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400987C8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400987D0" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID30XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987D4" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID30XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987D8" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID30XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987DC" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID30XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987E0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID30XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID30XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987E8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID30XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987EC" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID30XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987F0" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID30XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987F4" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID30XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987F8" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID30XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400987FC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID30XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098800" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID30XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098804" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID30XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098808" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40098810" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID31XDMAC_CIE" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIE" edc:desc="End of Block Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIE" edc:desc="End of Linked List Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:desc="End of Disable Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIE" edc:desc="End of Flush Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBIE" edc:desc="Read Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBIE" edc:desc="Write Bus Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIE" edc:desc="Request Overflow Error Interrupt Enable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098814" edc:access="-------------------------wwwwwww" edc:cname="XDMAC_CHID31XDMAC_CID" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BID" edc:desc="End of Block Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LID" edc:desc="End of Linked List Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DID" edc:desc="End of Disable Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FID" edc:desc="End of Flush Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEID" edc:desc="Read Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEID" edc:desc="Write Bus Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROID" edc:desc="Request Overflow Error Interrupt Disable Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098818" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID31XDMAC_CIM" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIM" edc:desc="End of Block Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIM" edc:desc="End of Linked List Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIM" edc:desc="End of Disable Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIM" edc:desc="End of Flush Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIM" edc:desc="Read Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIM" edc:desc="Write Bus Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIM" edc:desc="Request Overflow Error Interrupt Mask Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009881C" edc:access="-------------------------rrrrrrr" edc:cname="XDMAC_CHID31XDMAC_CIS" edc:impl="0x7F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BIS" edc:desc="End of Block Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LIS" edc:desc="End of Linked List Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIS" edc:desc="End of Disable Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FIS" edc:desc="End of Flush Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RBEIS" edc:desc="Read Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WBEIS" edc:desc="Write Bus Error Interrupt Status Bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ROIS" edc:desc="Request Overflow Error Interrupt Status Bit" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098820" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID31XDMAC_CSA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SA" edc:desc="Channel x Source Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098824" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID31XDMAC_CDA" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DA" edc:desc="Channel x Destination Address" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098828" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn-n" edc:cname="XDMAC_CHID31XDMAC_CNDA" edc:impl="0xFFFFFFFD" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDAIF" edc:desc="Channel x Next Descriptor Interface" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="NDA" edc:desc="Channel x Next Descriptor Address" edc:nzwidth="0x1E"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009882C" edc:access="---------------------------nnnnn" edc:cname="XDMAC_CHID31XDMAC_CNDC" edc:impl="0x1F" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="NDE" edc:desc="Channel x Next Descriptor Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_DIS" edc:desc="Descriptor fetch is disabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DSCR_FETCH_EN" edc:desc="Descriptor fetch is enabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDSUP" edc:desc="Channel x Next Descriptor Source Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UNCHANGED" edc:desc="Source parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SRC_PARAMS_UPDATED" edc:desc="Source parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDDUP" edc:desc="Channel x Next Descriptor Destination Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UNCHANGED" edc:desc="Destination parameters remain unchanged." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DST_PARAMS_UPDATED" edc:desc="Destination parameters are updated when the descriptor is retrieved." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NDVIEW" edc:desc="Channel x Next Descriptor View" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NDV0" edc:desc="Next Descriptor View 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="NDV1" edc:desc="Next Descriptor View 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="NDV2" edc:desc="Next Descriptor View 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NDV3" edc:desc="Next Descriptor View 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098830" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID31XDMAC_CUBC" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="UBLEN" edc:desc="Channel x Microblock Length" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098834" edc:access="--------------------nnnnnnnnnnnn" edc:cname="XDMAC_CHID31XDMAC_CBC" edc:impl="0xFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="BLEN" edc:desc="Channel x Block Length" edc:nzwidth="0xC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098838" edc:access="-nnnnnnnnnn-nnnn-nnnnnnnnnnn-nnn" edc:cname="XDMAC_CHID31XDMAC_CC" edc:impl="0x7FEF7FF7" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="Channel x Transfer Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MEM_TRAN" edc:desc="Self-triggered mode (memory-to-memory transfer)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PER_TRAN" edc:desc="Synchronized mode (peripheral-to-memory or memory-to-peripheral transfer)." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MBSIZE" edc:desc="Channel x Memory Burst Size" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="The memory burst size is set to one." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FOUR" edc:desc="The memory burst size is set to four." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT" edc:desc="The memory burst size is set to eight." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN" edc:desc="The memory burst size is set to sixteen." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DSYNC" edc:desc="Channel x Synchronization" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PER2MEM" edc:desc="Peripheral-to-memory transfer." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MEM2PER" edc:desc="Memory-to-peripheral transfer." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROT" edc:desc="Channel x Protection" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="PRIVILEGED" edc:desc="Channel uses Privileged mode." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="USER" edc:desc="Channel uses User mode." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWREQ" edc:desc="Channel x Software Request Trigger" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="HWR_CONNECTED" edc:desc="Hardware request line is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SWR_CONNECTED" edc:desc="Software request is connected to the peripheral request line." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMSET" edc:desc="Channel x Fill Block of Memory" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL_MODE" edc:desc="Memset is not activated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW_MODE" edc:desc="Sets the block of memory pointed by DA field to the specified value. This operation is performed on 8-, 16- or 32-bit basis." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CSIZE" edc:desc="Channel x Chunk Size" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="CHK_1" edc:desc="1 data transferred" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CHK_2" edc:desc="2 data transferred" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CHK_4" edc:desc="4 data transferred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CHK_8" edc:desc="8 data transferred" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CHK_16" edc:desc="16 data transferred" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWIDTH" edc:desc="Channel x Data Width" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="The data size is set to 8 bits" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HALFWORD" edc:desc="The data size is set to 16 bits" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="The data size is set to 32 bits" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SIF" edc:desc="Channel x Source Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is read through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is read through system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIF" edc:desc="Channel x Destination Interface Identifier" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="AHB_IF0" edc:desc="The data is written through system bus interface 0." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AHB_IF1" edc:desc="The data is written though system bus interface 1." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SAM" edc:desc="Channel x Source Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary, the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAM" edc:desc="Channel x Destination Addressing Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="FIXED_AM" edc:desc="The address remains unchanged." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INCREMENTED_AM" edc:desc="The addressing mode is incremented (the increment size is set to the data size)." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="UBS_AM" edc:desc="The microblock stride is added at the microblock boundary." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="UBS_DS_AM" edc:desc="The microblock stride is added at the microblock boundary; the data stride is added at the data boundary." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="INITD" edc:desc="Channel Initialization Done (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="Channel initialization is in progress." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TERMINATED" edc:desc="Channel initialization is completed." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RDIP" edc:desc="Read in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active read transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A read transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WRIP" edc:desc="Write in Progress (this bit is read-only)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DONE" edc:desc="No active write transaction on the bus." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="IN_PROGRESS" edc:desc="A write transaction is in progress." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PERID" edc:desc="Channel x Peripheral Hardware Request Line Identifier" edc:nzwidth="0x7">
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_TX" edc:desc="FLEXCOM0_TX" edc:when="(field &amp; 0x7F) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM0_RX" edc:desc="FLEXCOM0_RX" edc:when="(field &amp; 0x7F) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_TX" edc:desc="FLEXCOM1_TX" edc:when="(field &amp; 0x7F) == 2"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM1_RX" edc:desc="FLEXCOM1_RX" edc:when="(field &amp; 0x7F) == 3"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_TX" edc:desc="FLEXCOM2_TX" edc:when="(field &amp; 0x7F) == 4"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM2_RX" edc:desc="FLEXCOM2_RX" edc:when="(field &amp; 0x7F) == 5"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_TX" edc:desc="FLEXCOM3_TX" edc:when="(field &amp; 0x7F) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FLEXCOM3_RX" edc:desc="FLEXCOM3_RX" edc:when="(field &amp; 0x7F) == 7"/>
              <edc:SFRFieldSemantic edc:cname="PWM0" edc:desc="PWM0" edc:when="(field &amp; 0x7F) == 8"/>
              <edc:SFRFieldSemantic edc:cname="PWM1" edc:desc="PWM1" edc:when="(field &amp; 0x7F) == 9"/>
              <edc:SFRFieldSemantic edc:cname="TC0" edc:desc="TC0" edc:when="(field &amp; 0x7F) == 10"/>
              <edc:SFRFieldSemantic edc:cname="TC1" edc:desc="TC1" edc:when="(field &amp; 0x7F) == 11"/>
              <edc:SFRFieldSemantic edc:cname="TC2" edc:desc="TC2" edc:when="(field &amp; 0x7F) == 12"/>
              <edc:SFRFieldSemantic edc:cname="SHA" edc:desc="SHA" edc:when="(field &amp; 0x7F) == 13"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPA" edc:desc="TC1_CPA" edc:when="(field &amp; 0x7F) == 14"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPA" edc:desc="TC4_CPA" edc:when="(field &amp; 0x7F) == 15"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPA" edc:desc="TC7_CPA" edc:when="(field &amp; 0x7F) == 16"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPB" edc:desc="TC1_CPB" edc:when="(field &amp; 0x7F) == 17"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPB" edc:desc="TC4_CPB" edc:when="(field &amp; 0x7F) == 18"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPB" edc:desc="TC7_CPB" edc:when="(field &amp; 0x7F) == 19"/>
              <edc:SFRFieldSemantic edc:cname="TC1_CPC" edc:desc="TC1_CPC" edc:when="(field &amp; 0x7F) == 20"/>
              <edc:SFRFieldSemantic edc:cname="TC4_CPC" edc:desc="TC4_CPC" edc:when="(field &amp; 0x7F) == 21"/>
              <edc:SFRFieldSemantic edc:cname="TC7_CPC" edc:desc="TC7_CPC" edc:when="(field &amp; 0x7F) == 22"/>
              <edc:SFRFieldSemantic edc:cname="TC1_ETRG" edc:desc="TC1_ETRG" edc:when="(field &amp; 0x7F) == 23"/>
              <edc:SFRFieldSemantic edc:cname="TC4_ETRG" edc:desc="TC4_ETRG" edc:when="(field &amp; 0x7F) == 24"/>
              <edc:SFRFieldSemantic edc:cname="TC7_ETRG" edc:desc="TC7_ETRG" edc:when="(field &amp; 0x7F) == 25"/>
              <edc:SFRFieldSemantic edc:cname="ADCC" edc:desc="ADCC" edc:when="(field &amp; 0x7F) == 26"/>
              <edc:SFRFieldSemantic edc:cname="DACC" edc:desc="DACC" edc:when="(field &amp; 0x7F) == 27"/>
              <edc:SFRFieldSemantic edc:cname="PCC" edc:desc="PCC" edc:when="(field &amp; 0x7F) == 28"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4009883C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID31XDMAC_CDS_MSP" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SDS_MSP" edc:desc="Channel x Source Data stride or Memory Set Pattern" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="DDS_MSP" edc:desc="Channel x Destination Data Stride or Memory Set Pattern" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098840" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID31XDMAC_CSUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="SUBS" edc:desc="Channel x Source Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40098844" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="XDMAC_CHID31XDMAC_CDUS" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="XDMAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="XDMAC">
            <edc:SFRFieldDef edc:cname="DUBS" edc:desc="Channel x Destination Microblock Stride" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40098848" edc:offset="0x77B8"/>
      <edc:SFRDef edc:_addr="0x400A0000" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG0" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0004" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG1" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0008" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG2" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A000C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG3" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0010" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG4" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0014" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG5" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0018" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG6" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A001C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG7" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0020" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG8" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0024" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG9" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0028" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG10" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A002C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG11" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0030" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG12" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0034" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG13" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0038" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG14" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A003C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG15" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0040" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG16" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0044" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG17" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0048" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG18" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A004C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG19" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0050" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG20" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0054" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG21" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0058" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG22" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A005C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG23" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0060" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG24" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0064" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG25" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0068" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG26" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A006C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG27" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0070" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG28" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0074" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG29" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0078" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG30" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A007C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG31" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0080" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG32" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0084" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG33" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0088" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG34" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A008C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG35" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0090" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG36" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0094" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG37" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A0098" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG38" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A009C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SFR_ROMCODE_DBG39" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="ROM_CODE_DEBUG" edc:desc="Rom code debug step" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A00A0" edc:access="nnnnnnnnnnnnnnnn----------------" edc:cname="SFR_CAN0" edc:impl="0xFFFF0000" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="EXT_MEM_ADDR" edc:desc="MSB Base Address" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A00A4" edc:access="nnnnnnnnnnnnnnnn----------------" edc:cname="SFR_CAN1" edc:impl="0xFFFF0000" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="EXT_MEM_ADDR" edc:desc="MSB Base Address" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400A00A8" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x400A00B0" edc:access="-----------------------------nnn" edc:cname="SFR_BOOT_CFG" edc:impl="0x7" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="BOOT_SEL" edc:desc="BOOT_MODE selected" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400A00B4" edc:offset="0x30"/>
      <edc:SFRDef edc:_addr="0x400A00E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="SFR_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="SFR">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SFR">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x534652"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400A00E8" edc:offset="0x7F18"/>
      <edc:SFRDef edc:_addr="0x400A8000" edc:access="-----------------------wwwwwwwww" edc:cname="NMIC_IER" edc:impl="0x1FF" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="NMI0" edc:desc="Non-maskable Interrupt 0 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI1" edc:desc="Non-maskable Interrupt 1 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI2" edc:desc="Non-maskable Interrupt 2 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI3" edc:desc="Non-maskable Interrupt 3 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI4" edc:desc="Non-maskable Interrupt 4 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI5" edc:desc="Non-maskable Interrupt 5 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI6" edc:desc="Non-maskable Interrupt 6 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI7" edc:desc="Non-maskable Interrupt 7 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI8" edc:desc="Non-maskable Interrupt 8 Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8004" edc:access="-----------------------wwwwwwwww" edc:cname="NMIC_IDR" edc:impl="0x1FF" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="NMI0" edc:desc="Non-maskable Interrupt 0 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI1" edc:desc="Non-maskable Interrupt 1 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI2" edc:desc="Non-maskable Interrupt 2 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI3" edc:desc="Non-maskable Interrupt 3 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI4" edc:desc="Non-maskable Interrupt 4 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI5" edc:desc="Non-maskable Interrupt 5 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI6" edc:desc="Non-maskable Interrupt 6 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI7" edc:desc="Non-maskable Interrupt 7 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI8" edc:desc="Non-maskable Interrupt 8 Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8008" edc:access="-----------------------rrrrrrrrr" edc:cname="NMIC_IAR" edc:impl="0x1FF" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="NMI0" edc:desc="Active Interrupt 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI1" edc:desc="Active Interrupt 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI2" edc:desc="Active Interrupt 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI3" edc:desc="Active Interrupt 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI4" edc:desc="Active Interrupt 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI5" edc:desc="Active Interrupt 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI6" edc:desc="Active Interrupt 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI7" edc:desc="Active Interrupt 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI8" edc:desc="Active Interrupt 8" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A800C" edc:access="-----------------------rrrrrrrrr" edc:cname="NMIC_ISR" edc:impl="0x1FF" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="NMI0" edc:desc="Non-maskable Interrupt Source 0 Pending (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI1" edc:desc="Non-maskable Interrupt Source 1 Pending (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI2" edc:desc="Non-maskable Interrupt Source 2 Pending (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI3" edc:desc="Non-maskable Interrupt Source 3 Pending (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI4" edc:desc="Non-maskable Interrupt Source 4 Pending (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI5" edc:desc="Non-maskable Interrupt Source 5 Pending (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI6" edc:desc="Non-maskable Interrupt Source 6 Pending (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI7" edc:desc="Non-maskable Interrupt Source 7 Pending (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NMI8" edc:desc="Non-maskable Interrupt Source 8 Pending (cleared on read)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8010" edc:access="-----------------------rrrrrrrrr" edc:cname="NMIC_GFCS" edc:impl="0x1FF" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="RDY0" edc:desc="Filter 0 Configuration Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDY1" edc:desc="Filter 1 Configuration Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDY2" edc:desc="Filter 2 Configuration Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDY3" edc:desc="Filter 3 Configuration Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDY4" edc:desc="Filter 4 Configuration Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDY5" edc:desc="Filter 5 Configuration Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDY6" edc:desc="Filter 6 Configuration Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDY7" edc:desc="Filter 7 Configuration Ready" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RDY8" edc:desc="Filter 8 Configuration Ready" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8014" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG0R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8018" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG1R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A801C" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG2R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8020" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG3R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8024" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG4R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8028" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG5R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A802C" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG6R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8030" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG7R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A8034" edc:access="n--------------n------nn---n--nn" edc:cname="NMIC_SCFG8R" edc:impl="0x80010313" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="GFSEL" edc:desc="Glitch Filter Selector (GFSEL field is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="GFEN" edc:desc="Glitch Filter Enable (GFEN bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="POL" edc:desc="Polarity (POL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:desc="Level Detection (LVL bit is read-only in NMIC_SCFG1 to 8)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="EN" edc:desc="Source Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0xE"/>
            <edc:SFRFieldDef edc:cname="FRZ" edc:desc="Interrupt Line Freeze" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400A8038" edc:offset="0xAC"/>
      <edc:SFRDef edc:_addr="0x400A80E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn------nn" edc:cname="NMIC_WPMR" edc:impl="0xFFFFFF03" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="WPCFEN" edc:desc="Write Protection Configuration Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPCFEN and WPITEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x4E4D49"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x400A80E8" edc:access="----------------rrrrrrrr-----rrr" edc:cname="NMIC_WPSR" edc:impl="0xFF07" edc:nzwidth="0x20" ltx:memberofperipheral="NMIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NMIC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Register Violation Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="FZWVS" edc:desc="Frozen Register Write Violation Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BSWVS" edc:desc="Busy Register Write Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WVSRC" edc:desc="Write Violation Source" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x400A80EC" edc:offset="0x57F14"/>
      <edc:SFRDef edc:_addr="0x40100000" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="CHIPID_CIDR" edc:nzwidth="0x20" ltx:memberofperipheral="CHIPID">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CHIPID">
            <edc:SFRFieldDef edc:cname="VERSION" edc:desc="Version of the Device" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="EPROC" edc:desc="Embedded Processor" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="SAMx7" edc:desc="Cortex-M7" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ARM946ES" edc:desc="ARM946ES" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ARM7TDMI" edc:desc="ARM7TDMI" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CM3" edc:desc="Cortex-M3" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="ARM920T" edc:desc="ARM920T" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ARM926EJS" edc:desc="ARM926EJS" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CA5" edc:desc="Cortex-A5" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CM4" edc:desc="Cortex-M4" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NVPSIZ" edc:desc="Nonvolatile Program Memory Size" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_8K" edc:desc="8 Kbytes" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16K" edc:desc="16 Kbytes" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_32K" edc:desc="32 Kbytes" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_64K" edc:desc="64 Kbytes" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_128K" edc:desc="128 Kbytes" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="_160K" edc:desc="160 Kbytes" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="_256K" edc:desc="256 Kbytes" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="_512K" edc:desc="512 Kbytes" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="_1024K" edc:desc="1024 Kbytes" edc:when="(field &amp; 0xF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="_2048K" edc:desc="2048 Kbytes" edc:when="(field &amp; 0xF) == 0xE"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NVPSIZ2" edc:desc="Second Nonvolatile Program Memory Size" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_8K" edc:desc="8 Kbytes" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_16K" edc:desc="16 Kbytes" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_32K" edc:desc="32 Kbytes" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_64K" edc:desc="64 Kbytes" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_128K" edc:desc="128 Kbytes" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="_256K" edc:desc="256 Kbytes" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="_512K" edc:desc="512 Kbytes" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="_1024K" edc:desc="1024 Kbytes" edc:when="(field &amp; 0xF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="_2048K" edc:desc="2048 Kbytes" edc:when="(field &amp; 0xF) == 0xE"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SRAMSIZ" edc:desc="Internal SRAM Size" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="_48K" edc:desc="48 Kbytes" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="_192K" edc:desc="192 Kbytes" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="_384K" edc:desc="384 Kbytes" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="_6K" edc:desc="6 Kbytes" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="_24K" edc:desc="24 Kbytes" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="_4K" edc:desc="4 Kbytes" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="_80K" edc:desc="80 Kbytes" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="_160K" edc:desc="160 Kbytes" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="_8K" edc:desc="8 Kbytes" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="_16K" edc:desc="16 Kbytes" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="_32K" edc:desc="32 Kbytes" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="_64K" edc:desc="64 Kbytes" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="_128K" edc:desc="128 Kbytes" edc:when="(field &amp; 0xF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="_256K" edc:desc="256 Kbytes" edc:when="(field &amp; 0xF) == 0xD"/>
              <edc:SFRFieldSemantic edc:cname="_96K" edc:desc="96 Kbytes" edc:when="(field &amp; 0xF) == 0xE"/>
              <edc:SFRFieldSemantic edc:cname="_512K" edc:desc="512 Kbytes" edc:when="(field &amp; 0xF) == 0xF"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ARCH" edc:desc="Architecture Identifier" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="SAMRH707" edc:desc="SAMRH707" edc:when="(field &amp; 0xFF) == 0x17"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NVPTYP" edc:desc="Nonvolatile Program Memory Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="ROM" edc:desc="ROM" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROMLESS" edc:desc="ROMless or on-chip Flash" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FLASH" edc:desc="Embedded Flash Memory" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ROM_FLASH" edc:desc="ROM and Embedded Flash Memory - NVPSIZ is ROM size - NVPSIZ2 is Flash size" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="SRAM" edc:desc="SRAM emulating ROM" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EXT" edc:desc="Extension Flag" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100004" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="CHIPID_EXID" edc:nzwidth="0x20" ltx:memberofperipheral="CHIPID">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CHIPID">
            <edc:SFRFieldDef edc:cname="EXID" edc:desc="Chip ID Extension" edc:nzwidth="0x20">
              <edc:SFRFieldSemantic edc:cname="PACKAGE_TYPE_164" edc:desc="164-lead package" edc:when="(field &amp; 0xFFFFFFFF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PACKAGE_TYPE_BGA_484" edc:desc="484-balls BGA package" edc:when="(field &amp; 0xFFFFFFFF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PACKAGE_TYPE_144" edc:desc="144-lead package" edc:when="(field &amp; 0xFFFFFFFF) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40100008" edc:offset="0x1F8"/>
      <edc:SFRDef edc:_addr="0x40100200" edc:access="wwwwwwww--------wwwwwwww---ww--w" edc:cname="RSTC_CR" edc:impl="0xFF00FF19" edc:nzwidth="0x20" ltx:memberofperipheral="RSTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTC">
            <edc:SFRFieldDef edc:cname="PROCRST" edc:desc="Processor Reset" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="EXTRST" edc:desc="External Reset" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PERIIDON" edc:desc="External Reset" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PERIID" edc:desc="Peripheral Identifier" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:desc="System Reset Key" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100204" edc:access="--------------rr-----rrr--------" edc:cname="RSTC_SR" edc:impl="0x30700" edc:nzwidth="0x20" ltx:memberofperipheral="RSTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTC">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="RSTTYP" edc:desc="Reset Type" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="GENERAL_RST" edc:desc="First powerup reset" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="WDT_RST" edc:desc="Watchdog fault occurred" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SOFT_RST" edc:desc="Processor reset required by the software" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CPU_FAIL_RST" edc:desc="CPU clock failure detection occurred" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="SLCK_XTAL_RST" edc:desc="32.768 kHz crystal failure detection fault occurred" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="NRSTL" edc:desc="NRST Pin Level" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SRCMP" edc:desc="Software Reset Command in Progress" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100208" edc:access="nnnnnnnn--------------------n-n-" edc:cname="RSTC_MR" edc:impl="0xFF00000A" edc:nzwidth="0x20" ltx:memberofperipheral="RSTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCKSW" edc:desc="Slow Clock Switching" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPUFEN" edc:desc="CPU Fail Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:desc="Write Access Password" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation. Always reads as 0." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4010020C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40100210" edc:access="wwwwwwww------------------w-ww--" edc:cname="SUPC_CR" edc:impl="0xFF00002C" edc:nzwidth="0x20" ltx:memberofperipheral="SUPC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ZERO" edc:desc="Shall be always write at '0'" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDXTALSEL" edc:desc="Timing Domain Crystal Oscillator Select" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_EFFECT" edc:desc="No effect." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CRYSTAL_SEL" edc:desc="If KEY is correct, XTALSEL switches the slow clock of the timing domain (TD_SLCK) on the 32.768 kHz crystal oscillator output." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MDRCSEL" edc:desc="Monitoring Domain RC Oscillator Select" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_EFFECT" edc:desc="No effect." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CRYSTAL_SEL" edc:desc="If KEY is correct, XTALSEL switches the slow clock of the monitoring domain (MD_SLCK) on the slow RC oscillator output." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:desc="Password" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100214" edc:access="--------n-----------------------" edc:cname="SUPC_SMMR" edc:impl="0x800000" edc:nzwidth="0x20" ltx:memberofperipheral="SUPC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="CORESMUSEL" edc:desc="Core Supply Monitor User Selection" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100218" edc:access="nnnnnnnn-n-n------nn------------" edc:cname="SUPC_MR" edc:impl="0xFF503000" edc:nzwidth="0x20" ltx:memberofperipheral="SUPC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="CORSMRSTEN" edc:desc="VDDCORE Supply Monitor Reset Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NOT_ENABLE" edc:desc="The core reset signal vddcore_nreset is not affected when a VDDCORE supply monitor detection occurs." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The core reset signal, vddcore_nreset is asserted when a VDDCORE supply monitor detection occurs." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CORSMDIS" edc:desc="VDDCORE Supply Monitor Disable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The VDDCORE supply monitor is enabled." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The VDDCORE supply monitor is disabled." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="ZERO" edc:desc="Shall be always write at '0'" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FXTALSTUP" edc:desc="Fast Startup 32.768 kHz Crystal Oscillator" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:desc="Password Key" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4010021C" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x40100224" edc:access="------------------------r---r---" edc:cname="SUPC_SR" edc:impl="0x88" edc:nzwidth="0x20" ltx:memberofperipheral="SUPC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CORSMRSTS" edc:desc="VDDCORE Supply Monitor Reset Status (cleared on read)" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO" edc:desc="No VDDCORE Supply Monitor reset event has been detected since the last read of the SUPC_SR." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESENT" edc:desc="At least one VDDCORE Supply Monitor reset event has been detected since the last read of the SUPC_SR." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="TDOSCSEL" edc:desc="32 kHz Oscillator Selection Status" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="RC" edc:desc="The timing domain slow clock, TD_SLCK, is generated by the slow RC oscillator." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CRYST" edc:desc="The timing domain slow clock, TD_SLCK, is generated by the 32.768 kHz crystal oscillator." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40100228" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x4010022C" edc:access="-------------n------------------" edc:cname="SUPC_PWR" edc:impl="0x40000" edc:nzwidth="0x20" ltx:memberofperipheral="SUPC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x12"/>
            <edc:SFRFieldDef edc:cname="ZERO" edc:desc="MD_SLCK always generated by the slow RC oscillator" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100230" edc:access="-------n---n-nnnnnnnnnnnnnnnnnnn" edc:cname="RTT_MR" edc:impl="0x117FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="RTT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="RTPRES" edc:desc="Real-time Timer Prescaler Value" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="ALMIEN" edc:desc="Alarm Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTTINCIEN" edc:desc="Real-time Timer Increment Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTTRST" edc:desc="Real-time Timer Restart" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RTTDIS" edc:desc="Real-time Timer Disable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RTC1HZ" edc:desc="Real-Time Clock 1Hz Clock Selection" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100234" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RTT_AR" edc:nzwidth="0x20" ltx:memberofperipheral="RTT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="ALMV" edc:desc="Alarm Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100238" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="RTT_VR" edc:nzwidth="0x20" ltx:memberofperipheral="RTT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="CRTV" edc:desc="Current Real-time Value" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4010023C" edc:access="------------------------------rr" edc:cname="RTT_SR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="RTT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTT">
            <edc:SFRFieldDef edc:cname="ALMS" edc:desc="Real-time Alarm Status (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RTTINC" edc:desc="Prescaler Roll-over Status (cleared on read)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40100240" edc:offset="0x10"/>
      <edc:SFRDef edc:_addr="0x40100250" edc:access="wwwwwwww-------------------w---w" edc:cname="WDT_CR" edc:impl="0xFF000011" edc:nzwidth="0x20" ltx:memberofperipheral="WDT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="WDRSTT" edc:desc="Watchdog Restart" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="LOCKMR" edc:desc="Lock Mode Register Write Access" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x13"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:desc="Password" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100254" edc:access="--nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="WDT_MR" edc:impl="0x3FFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="WDT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="WDV" edc:desc="Watchdog Counter Value" edc:nzwidth="0xC"/>
            <edc:SFRFieldDef edc:cname="WDFIEN" edc:desc="Watchdog Fault Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDRSTEN" edc:desc="Watchdog Reset Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDRPROC" edc:desc="Watchdog Reset Processor" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDDIS" edc:desc="Watchdog Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDD" edc:desc="Watchdog Delta Value" edc:nzwidth="0xC"/>
            <edc:SFRFieldDef edc:cname="WDDBGHLT" edc:desc="Watchdog Debug Halt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDIDLEHLT" edc:desc="Watchdog Idle Halt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100258" edc:access="------------------------------rr" edc:cname="WDT_SR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="WDT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="WDUNF" edc:desc="Watchdog Underflow (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDERR" edc:desc="Watchdog Error (cleared on read)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4010025C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40100260" edc:access="--------------nn------nn------nn" edc:cname="RTC_CR" edc:impl="0x30303" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="UPDTIM" edc:desc="Update Request Time Register" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="UPDCAL" edc:desc="Update Request Calendar Register" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TIMEVSEL" edc:desc="Time Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="MINUTE" edc:desc="Minute change" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HOUR" edc:desc="Hour change" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MIDNIGHT" edc:desc="Every day at midnight" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="NOON" edc:desc="Every day at noon" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CALEVSEL" edc:desc="Calendar Event Selection" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="WEEK" edc:desc="Week change (every Monday at time 00:00:00)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="MONTH" edc:desc="Month change (every 01 of each month at time 00:00:00)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="YEAR" edc:desc="Year change (every January 1 at time 00:00:00)" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100264" edc:access="--nn-nnnnnnnnnnnnnnnnnnn---n--nn" edc:cname="RTC_MR" edc:impl="0x37FFFF13" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="HRMOD" edc:desc="12-/24-hour Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PERSIAN" edc:desc="PERSIAN Calendar" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NEGPPM" edc:desc="NEGative PPM Correction" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CORRECTION" edc:desc="Slow Clock Correction" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="HIGHPPM" edc:desc="HIGH PPM Correction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT0" edc:desc="RTCOUT0 OutputSource Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="NO_WAVE" edc:desc="No waveform, stuck at '0'" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FREQ1HZ" edc:desc="1 Hz square wave" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FREQ32HZ" edc:desc="32 Hz square wave" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="FREQ64HZ" edc:desc="64 Hz square wave" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="FREQ512HZ" edc:desc="512 Hz square wave" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ALARM_TOGGLE" edc:desc="Output toggles when alarm flag rises" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ALARM_FLAG" edc:desc="Output is a copy of the alarm flag" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="PROG_PULSE" edc:desc="Duty cycle programmable pulse" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EN0" edc:desc="PIO Line Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT1" edc:desc="RTCOUT1 Output Source Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="NO_WAVE" edc:desc="No waveform, stuck at '0'" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FREQ1HZ" edc:desc="1 Hz square wave" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="FREQ32HZ" edc:desc="32 Hz square wave" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="FREQ64HZ" edc:desc="64 Hz square wave" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="FREQ512HZ" edc:desc="512 Hz square wave" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ALARM_TOGGLE" edc:desc="Output toggles when alarm flag rises" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ALARM_FLAG" edc:desc="Output is a copy of the alarm flag" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="PROG_PULSE" edc:desc="Duty cycle programmable pulse" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EN1" edc:desc="PIO Line Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="THIGH" edc:desc="High Duration of the Output Pulse" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="H_31MS" edc:desc="31.2 ms" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="H_16MS" edc:desc="15.6 ms" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="H_4MS" edc:desc="3.91 ms" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="H_976US" edc:desc="976 us" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="H_488US" edc:desc="488 us" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="H_122US" edc:desc="122 us" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="H_30US" edc:desc="30.5 us" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H_15US" edc:desc="15.2 us" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TPERIOD" edc:desc="Period of the Output Pulse" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="P_1S" edc:desc="1 second" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="P_500MS" edc:desc="500 ms" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="P_250MS" edc:desc="250 ms" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="P_125MS" edc:desc="125 ms" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100268" edc:access="---------nnnnnnn-nnnnnnn-nnnnnnn" edc:cname="RTC_TIMR" edc:impl="0x7F7F7F" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:desc="Current Second" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:desc="Current Minute" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:desc="Current Hour" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:desc="Ante Meridiem Post Meridiem Indicator" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4010026C" edc:access="--nnnnnnnnnnnnnnnnnnnnnn-nnnnnnn" edc:cname="RTC_CALR" edc:impl="0x3FFFFF7F" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="CENT" edc:desc="Current Century" edc:nzwidth="0x7"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:desc="Current Year" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:desc="Current Month" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="DAY" edc:desc="Current Day in Current Week" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:desc="Current Day in Current Month" edc:nzwidth="0x6"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100270" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RTC_TIMALR" edc:impl="0xFFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEC" edc:desc="Second Alarm" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="SECEN" edc:desc="Second Alarm Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MIN" edc:desc="Minute Alarm" edc:nzwidth="0x7"/>
            <edc:SFRFieldDef edc:cname="MINEN" edc:desc="Minute Alarm Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:desc="Hour Alarm" edc:nzwidth="0x6"/>
            <edc:SFRFieldDef edc:cname="AMPM" edc:desc="AM/PM Indicator" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HOUREN" edc:desc="Hour Alarm Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100274" edc:access="n-nnnnnnn--nnnnn----------------" edc:cname="RTC_CALALR" edc:impl="0xBF9F0000" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:desc="Month Alarm" edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MTHEN" edc:desc="Month Alarm Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DATE" edc:desc="Date Alarm" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DATEEN" edc:desc="Date Alarm Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100278" edc:access="--------------------------rrrrrr" edc:cname="RTC_SR" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACKUPD" edc:desc="Acknowledge for Update" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FREERUN" edc:desc="Time and calendar registers cannot be updated." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Time and calendar registers can be updated." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALARM" edc:desc="Alarm Flag" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_ALARMEVENT" edc:desc="No alarm matching condition occurred." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ALARMEVENT" edc:desc="An alarm matching condition has occurred." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SEC" edc:desc="Second Event" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_SECEVENT" edc:desc="No second event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SECEVENT" edc:desc="At least one second event has occurred since the last clear." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TIMEV" edc:desc="Time Event" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_TIMEVENT" edc:desc="No time event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TIMEVENT" edc:desc="At least one time event has occurred since the last clear." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CALEV" edc:desc="Calendar Event" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NO_CALEVENT" edc:desc="No calendar event has occurred since the last clear." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CALEVENT" edc:desc="At least one calendar event has occurred since the last clear." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TDERR" edc:desc="Time and/or Date Free Running Error" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="CORRECT" edc:desc="The internal free running counters are carrying valid values since the last read of the Status Register (RTC_SR)." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ERR_TIMEDATE" edc:desc="The internal free running counters have been corrupted (invalid date or time, non-BCD values) since the last read and/or they are still invalid." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4010027C" edc:access="--------------------------wwwwww" edc:cname="RTC_SCCR" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACKCLR" edc:desc="Acknowledge Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ALRCLR" edc:desc="Alarm Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SECCLR" edc:desc="Second Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMCLR" edc:desc="Time Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CALCLR" edc:desc="Calendar Clear" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDERRCLR" edc:desc="Time and/or Date Free Running Error Clear" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100280" edc:access="--------------------------wwwwww" edc:cname="RTC_IER" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACKEN" edc:desc="Acknowledge Update Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ALREN" edc:desc="Alarm Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SECEN" edc:desc="Second Event Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMEN" edc:desc="Time Event Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CALEN" edc:desc="Calendar Event Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDERREN" edc:desc="Time and/or Date Error Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100284" edc:access="--------------------------wwwwww" edc:cname="RTC_IDR" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACKDIS" edc:desc="Acknowledge Update Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ALRDIS" edc:desc="Alarm Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SECDIS" edc:desc="Second Event Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIMDIS" edc:desc="Time Event Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CALDIS" edc:desc="Calendar Event Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDERRDIS" edc:desc="Time and/or Date Error Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100288" edc:access="--------------------------rrrrrr" edc:cname="RTC_IMR" edc:impl="0x3F" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="ACK" edc:desc="Acknowledge Update Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ALR" edc:desc="Alarm Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SEC" edc:desc="Second Event Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TIM" edc:desc="Time Event Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CAL" edc:desc="Calendar Event Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TDERR" edc:desc="Time and/or Date Error Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4010028C" edc:access="----------------------------rrrr" edc:cname="RTC_VER" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="NVTIM" edc:desc="Non-valid Time" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NVCAL" edc:desc="Non-valid Calendar" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NVTIMALR" edc:desc="Non-valid Time Alarm" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="NVCALALR" edc:desc="Non-valid Calendar Alarm" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40100290" edc:offset="0x54"/>
      <edc:SFRDef edc:_addr="0x401002E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-------n" edc:cname="SYSC_WPMR" edc:impl="0xFFFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="SUPC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key." edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0." edc:when="(field &amp; 0xFFFFFF) == 0x525443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x401002E8" edc:offset="0x18"/>
      <edc:SFRDef edc:_addr="0x40100300" edc:access="wwwwwwww-----------------------w" edc:cname="RSWDT_CR" edc:impl="0xFF000001" edc:nzwidth="0x20" ltx:memberofperipheral="RSWDT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSWDT">
            <edc:SFRFieldDef edc:cname="WDRSTT" edc:desc="Watchdog Restart" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x17"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:desc="Password" edc:nzwidth="0x8">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation." edc:when="(field &amp; 0xFF) == 0xC4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100304" edc:access="--nnnnnnnnnnnnnnn-nnnnnnnnnnnnnn" edc:cname="RSWDT_MR" edc:impl="0x3FFFBFFF" edc:nzwidth="0x20" ltx:memberofperipheral="RSWDT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSWDT">
            <edc:SFRFieldDef edc:cname="WDV" edc:desc="Watchdog Counter Value" edc:nzwidth="0xC"/>
            <edc:SFRFieldDef edc:cname="WDFIEN" edc:desc="Watchdog Fault Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDRSTEN" edc:desc="Watchdog Reset Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WDDIS" edc:desc="Watchdog Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ALLONES" edc:desc="Must Always Be Written with 0xFFF" edc:nzwidth="0xC"/>
            <edc:SFRFieldDef edc:cname="WDDBGHLT" edc:desc="Watchdog Debug Halt" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WDIDLEHLT" edc:desc="Watchdog Idle Halt" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100308" edc:access="-------------------------------r" edc:cname="RSWDT_SR" edc:impl="0x1" edc:nzwidth="0x20" ltx:memberofperipheral="RSWDT">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSWDT">
            <edc:SFRFieldDef edc:cname="WDUNF" edc:desc="Watchdog Underflow" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4010030C" edc:offset="0x24"/>
      <edc:SFRDef edc:_addr="0x40100330" edc:access="----------------------rrrrrrrrrr" edc:cname="RTC_MSR" edc:impl="0x3FF" edc:nzwidth="0x20" ltx:memberofperipheral="RTC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="MS" edc:desc="Number of 1/1024 seconds elapsed within 1 second" edc:nzwidth="0xA"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40100334" edc:offset="0xCC"/>
      <edc:SFRDef edc:_addr="0x40100400" edc:access="--------------------------nn-nnn" edc:cname="TCMECC_CR" edc:impl="0x37" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ECC protection enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100404" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="TCMECC_TESTCB1" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="TCB1" edc:desc="test check bit (8 bit)" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="TCB2" edc:desc="test check bit (8 bit)" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40100408" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x4010040C" edc:access="--rrrrrr--------rrrrrrrrrrrrrrrr" edc:cname="TCMECC_SR" edc:impl="0x3F00FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="MEM_FIX_I" edc:desc="Fixable error status in instruction memory" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_FIX_D" edc:desc="Fixable error status in data memory" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPT_FIX" edc:desc="5 bits counter" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OVER_FIX" edc:desc="counter overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX_I" edc:desc="Un-fixable error status in instruction memory" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX_D" edc:desc="Un-fixable error status in data memory" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CPT_NOFIX" edc:desc="5 bits counter" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OVER_NOFIX" edc:desc="counter overflow" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="HES" edc:desc="Hardware Error Size" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="one" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_ID_I" edc:desc="memory identification number" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_ID_D" edc:desc="memory identification number" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100410" edc:access="----------------------------wwww" edc:cname="TCMECC_IER" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="MEM_FIX_I" edc:desc="Fixable error on instruction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX_I" edc:desc="Un-fixable error on instruction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_FIX_D" edc:desc="Fixable error on data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX_D" edc:desc="Un-fixable error on data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100414" edc:access="----------------------------wwww" edc:cname="TCMECC_IDR" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="MEM_FIX_I" edc:desc="fixable error on instruction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX_I" edc:desc="un-fixable error on instruction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_FIX_D" edc:desc="fixable error on data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX_D" edc:desc="un-fixable error on data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100418" edc:access="----------------------------rrrr" edc:cname="TCMECC_IMR" edc:impl="0xF" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="MEM_FIX_I" edc:desc="fixable error on instruction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX_I" edc:desc="un-fixable error on instruction" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_FIX_D" edc:desc="fixable error on data" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX_D" edc:desc="un-fixable error on data" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4010041C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TCMECC_FAILAR" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:desc="address of the error detected (refers to instruction memory)" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100420" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TCMECC_FAILARD" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:desc="address of the error detected" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100424" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TCMECC_FAILDR" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="data of the error detected (refers to instruction memory)" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100428" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="TCMECC_FAILDRD" edc:nzwidth="0x20" ltx:memberofperipheral="TCMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCMECC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="data of the error detected (refers to instruction memory)" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4010042C" edc:offset="0x1D4"/>
      <edc:SFRDef edc:_addr="0x40100600" edc:access="--------------------------nn-nnn" edc:cname="FLEXRAMECC_CR" edc:impl="0x37" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXRAMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXRAMECC">
            <edc:SFRFieldDef edc:cname="ONE" edc:desc="Shall be always write at '1'" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_RD" edc:desc="test mode of ECC protection - read mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEST_MODE_WR" edc:desc="test mode of ECC protection - write mode" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_FIX_CPT" edc:desc="reset the fixable error counter" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RST_NOFIX_CPT" edc:desc="reset the un-fixable error counter" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100604" edc:access="------------------------nnnnnnnn" edc:cname="FLEXRAMECC_TESTCB1" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXRAMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXRAMECC">
            <edc:SFRFieldDef edc:cname="TCB1" edc:desc="Test Check Bit" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40100608" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x4010060C" edc:access="----rrrr--------rrrrrr-rrrrrrr-r" edc:cname="FLEXRAMECC_SR" edc:impl="0xF00FDFD" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXRAMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXRAMECC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="Fixable error status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPT_FIX" edc:desc="5 bits counter" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OVER_FIX" edc:desc="counter overflow" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="Un-fixable error status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CPT_NOFIX" edc:desc="5 bits counter" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="OVER_NOFIX" edc:desc="counter overflow" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="HES" edc:desc="Hardware Error Size" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="TYPE" edc:desc="write or read access" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100610" edc:access="------------------------------ww" edc:cname="FLEXRAMECC_IER" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXRAMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXRAMECC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="Fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="Un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100614" edc:access="------------------------------ww" edc:cname="FLEXRAMECC_IDR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXRAMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXRAMECC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100618" edc:access="------------------------------rr" edc:cname="FLEXRAMECC_IMR" edc:impl="0x3" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXRAMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXRAMECC">
            <edc:SFRFieldDef edc:cname="MEM_FIX" edc:desc="fixable error" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MEM_NOFIX" edc:desc="un-fixable error" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4010061C" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEXRAMECC_FAILAR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXRAMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXRAMECC">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:desc="address of the error detected" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40100620" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="FLEXRAMECC_FAILDR" edc:nzwidth="0x20" ltx:memberofperipheral="FLEXRAMECC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FLEXRAMECC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="data error" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40100624" edc:offset="0xFF9DC"/>
      <edc:SFRDef edc:_addr="0x40200000" edc:access="---------------------------w--ww" edc:cname="ADC_CR" edc:impl="0x13" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:desc="Software Reset" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="START" edc:desc="Start Conversion" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMPRST" edc:desc="Comparison Restart" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200004" edc:access="nnnnnnnnn-nnnnnnnnnnnnnnnnnnnnnn" edc:cname="ADC_MR" edc:impl="0xFFBFFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="TRGEN" edc:desc="Trigger Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Hardware triggers are disabled. Starting a conversion is only possible by software." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Hardware trigger selected by TRGSEL is enabled. (rising mode selected)" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRGSEL" edc:desc="Trigger Selection" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG0" edc:desc="ADTRG" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG1" edc:desc="TIOA0" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG2" edc:desc="TIOA1" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG3" edc:desc="TIOA2" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG4" edc:desc="PWM0 Event 0" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG5" edc:desc="PWM0 Event 1" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG6" edc:desc="PWM1 Event 0" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ADC_TRIG7" edc:desc="PWM1 Event 1" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWRES" edc:desc="Low resolution" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="BITS_RESOLUTION" edc:desc="RESOLUTION-bit resolution." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="BITS_RESOLUTION_2" edc:desc="RESOLUTION_2-bit resolution" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEEP" edc:desc="Sleep Mode" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal Mode: The ADC core and reference voltage circuitry are kept ON between conversions." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SLEEP" edc:desc="Sleep Mode: The wakeup time can be modified by programming the FWUP bit." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FWUP" edc:desc="Fast Wakeup" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="If SLEEP is 1, then both ADC core and reference voltage circuitry are OFF between conversions" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="If SLEEP is 1, then Fast Wakeup Sleep mode: The voltage reference is ON between conversions and ADC core is OFF" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FREERUN" edc:desc="Free running" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Normal Mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Free Run Mode: Never wait for any trigger." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCAL" edc:desc="Prescaler Rate Selection" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:desc="Startup Time" edc:nzwidth="0x4">
              <edc:SFRFieldSemantic edc:cname="SUT0" edc:desc="0 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SUT8" edc:desc="8 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SUT16" edc:desc="16 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SUT24" edc:desc="24 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="SUT64" edc:desc="64 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="SUT80" edc:desc="80 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="SUT96" edc:desc="96 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="SUT112" edc:desc="112 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="SUT512" edc:desc="512 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SUT576" edc:desc="576 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="SUT640" edc:desc="640 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="SUT704" edc:desc="704 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="SUT768" edc:desc="768 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="SUT832" edc:desc="832 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0xD"/>
              <edc:SFRFieldSemantic edc:cname="SUT896" edc:desc="896 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0xE"/>
              <edc:SFRFieldSemantic edc:cname="SUT960" edc:desc="960 periods of ADCCLK" edc:when="(field &amp; 0xF) == 0xF"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SETTLING" edc:desc="Analog Settlings Time" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="AST3" edc:desc="3 periods of ADCCLK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AST5" edc:desc="5 periods of ADCCLK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AST9" edc:desc="9 periods of ADCCLK" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AST17" edc:desc="17 periods of ADCCLK" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ANACH" edc:desc="Analog Change" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No analog change on channel switching: DIFF0, OFF0 and GAIN0 are used for all channels." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ALLOWED" edc:desc="Allows different analog settings for each channel. See ADC_CGR and ADC_COR" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TRACKTIM" edc:desc="Tracking Time" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="TRANSFER" edc:desc="Transfer Time" edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="MAXSPEED" edc:desc="Maximum Sampling Rate Enable in Freerun Mode" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USEQ" edc:desc="User Sequence Enable" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="NUM_ORDER" edc:desc="Normal mode: The controller converts channels in a simple numeric order depending only on the channel index." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="REG_ORDER" edc:desc="User Sequence mode: The sequence respects what is defined in ADC_SEQR1 and ADC_SEQR2 registers and can be used to convert the same channel several times." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200008" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ADC_SEQR1" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="USCH1" edc:desc="User Sequence Number 1" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH2" edc:desc="User Sequence Number 2" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH3" edc:desc="User Sequence Number 3" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH4" edc:desc="User Sequence Number 4" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH5" edc:desc="User Sequence Number 5" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH6" edc:desc="User Sequence Number 6" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH7" edc:desc="User Sequence Number 7" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH8" edc:desc="User Sequence Number 8" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4020000C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ADC_SEQR2" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="USCH9" edc:desc="User Sequence Number 9" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH10" edc:desc="User Sequence Number 10" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH11" edc:desc="User Sequence Number 11" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH12" edc:desc="User Sequence Number 12" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH13" edc:desc="User Sequence Number 13" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH14" edc:desc="User Sequence Number 14" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH15" edc:desc="User Sequence Number 15" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="USCH16" edc:desc="User Sequence Number 16" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200010" edc:access="----------------wwwwwwwwwwwwwwww" edc:cname="ADC_CHER" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CH0" edc:desc="Channel 0 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:desc="Channel 1 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:desc="Channel 2 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH3" edc:desc="Channel 3 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH4" edc:desc="Channel 4 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH5" edc:desc="Channel 5 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH6" edc:desc="Channel 6 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH7" edc:desc="Channel 7 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH8" edc:desc="Channel 8 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH9" edc:desc="Channel 9 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH10" edc:desc="Channel 10 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH11" edc:desc="Channel 11 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH12" edc:desc="Channel 12 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH13" edc:desc="Channel 13 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH14" edc:desc="Channel 14 Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH15" edc:desc="Channel 15 Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200014" edc:access="----------------wwwwwwwwwwwwwwww" edc:cname="ADC_CHDR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CH0" edc:desc="Channel 0 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:desc="Channel 1 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:desc="Channel 2 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH3" edc:desc="Channel 3 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH4" edc:desc="Channel 4 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH5" edc:desc="Channel 5 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH6" edc:desc="Channel 6 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH7" edc:desc="Channel 7 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH8" edc:desc="Channel 8 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH9" edc:desc="Channel 9 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH10" edc:desc="Channel 10 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH11" edc:desc="Channel 11 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH12" edc:desc="Channel 12 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH13" edc:desc="Channel 13 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH14" edc:desc="Channel 14 Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH15" edc:desc="Channel 15 Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200018" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CHSR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CH0" edc:desc="Channel 0 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH1" edc:desc="Channel 1 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH2" edc:desc="Channel 2 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH3" edc:desc="Channel 3 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH4" edc:desc="Channel 4 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH5" edc:desc="Channel 5 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH6" edc:desc="Channel 6 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH7" edc:desc="Channel 7 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH8" edc:desc="Channel 8 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH9" edc:desc="Channel 9 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH10" edc:desc="Channel 10 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH11" edc:desc="Channel 11 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH12" edc:desc="Channel 12 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH13" edc:desc="Channel 13 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH14" edc:desc="Channel 14 Status" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="CH15" edc:desc="Channel 15 Status" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x4020001C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40200020" edc:access="---rrrrr--------rrrrrrrrrrrrrrrr" edc:cname="ADC_LCDR" edc:impl="0x1F00FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="LDATA" edc:desc="Last Data Converted" edc:nzwidth="0x10"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="CHNBOSR" edc:desc="Channel Number in Oversampling Mode" edc:nzwidth="0x5"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200024" edc:access="-----www--------wwwwwwwwwwwwwwww" edc:cname="ADC_IER" edc:impl="0x700FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="EOC0" edc:desc="End of Conversion Interrupt Enable 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:desc="End of Conversion Interrupt Enable 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC2" edc:desc="End of Conversion Interrupt Enable 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC3" edc:desc="End of Conversion Interrupt Enable 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC4" edc:desc="End of Conversion Interrupt Enable 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC5" edc:desc="End of Conversion Interrupt Enable 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC6" edc:desc="End of Conversion Interrupt Enable 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC7" edc:desc="End of Conversion Interrupt Enable 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC8" edc:desc="End of Conversion Interrupt Enable 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC9" edc:desc="End of Conversion Interrupt Enable 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC10" edc:desc="End of Conversion Interrupt Enable 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC11" edc:desc="End of Conversion Interrupt Enable 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC12" edc:desc="End of Conversion Interrupt Enable 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC13" edc:desc="End of Conversion Interrupt Enable 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC14" edc:desc="End of Conversion Interrupt Enable 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC15" edc:desc="End of Conversion Interrupt Enable 15" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:desc="Data Ready Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOVRE" edc:desc="General Overrun Error Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="COMPE" edc:desc="Comparison Event Interrupt Enable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200028" edc:access="-----www--------wwwwwwwwwwwwwwww" edc:cname="ADC_IDR" edc:impl="0x700FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="EOC0" edc:desc="End of Conversion Interrupt Disable 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:desc="End of Conversion Interrupt Disable 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC2" edc:desc="End of Conversion Interrupt Disable 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC3" edc:desc="End of Conversion Interrupt Disable 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC4" edc:desc="End of Conversion Interrupt Disable 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC5" edc:desc="End of Conversion Interrupt Disable 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC6" edc:desc="End of Conversion Interrupt Disable 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC7" edc:desc="End of Conversion Interrupt Disable 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC8" edc:desc="End of Conversion Interrupt Disable 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC9" edc:desc="End of Conversion Interrupt Disable 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC10" edc:desc="End of Conversion Interrupt Disable 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC11" edc:desc="End of Conversion Interrupt Disable 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC12" edc:desc="End of Conversion Interrupt Disable 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC13" edc:desc="End of Conversion Interrupt Disable 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC14" edc:desc="End of Conversion Interrupt Disable 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC15" edc:desc="End of Conversion Interrupt Disable 15" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:desc="Data Ready Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOVRE" edc:desc="General Overrun Error Interrupt Disable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="COMPE" edc:desc="Comparison Event Interrupt Disable" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4020002C" edc:access="-----rrr--------rrrrrrrrrrrrrrrr" edc:cname="ADC_IMR" edc:impl="0x700FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="EOC0" edc:desc="End of Conversion Interrupt Mask 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:desc="End of Conversion Interrupt Mask 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC2" edc:desc="End of Conversion Interrupt Mask 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC3" edc:desc="End of Conversion Interrupt Mask 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC4" edc:desc="End of Conversion Interrupt Mask 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC5" edc:desc="End of Conversion Interrupt Mask 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC6" edc:desc="End of Conversion Interrupt Mask 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC7" edc:desc="End of Conversion Interrupt Mask 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC8" edc:desc="End of Conversion Interrupt Mask 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC9" edc:desc="End of Conversion Interrupt Mask 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC10" edc:desc="End of Conversion Interrupt Mask 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC11" edc:desc="End of Conversion Interrupt Mask 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC12" edc:desc="End of Conversion Interrupt Mask 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC13" edc:desc="End of Conversion Interrupt Mask 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC14" edc:desc="End of Conversion Interrupt Mask 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC15" edc:desc="End of Conversion Interrupt Mask 15" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:desc="Data Ready Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOVRE" edc:desc="General Overrun Error Interrupt Mask" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="COMPE" edc:desc="Comparison Event Interrupt Mask" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200030" edc:access="-----rrr--------rrrrrrrrrrrrrrrr" edc:cname="ADC_ISR" edc:impl="0x700FFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="EOC0" edc:desc="End of Conversion 0 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC1" edc:desc="End of Conversion 1 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC2" edc:desc="End of Conversion 2 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC3" edc:desc="End of Conversion 3 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC4" edc:desc="End of Conversion 4 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC5" edc:desc="End of Conversion 5 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC6" edc:desc="End of Conversion 6 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC7" edc:desc="End of Conversion 7 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC8" edc:desc="End of Conversion 8 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC9" edc:desc="End of Conversion 9 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC10" edc:desc="End of Conversion 10 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC11" edc:desc="End of Conversion 11 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC12" edc:desc="End of Conversion 12 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC13" edc:desc="End of Conversion 13 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC14" edc:desc="End of Conversion 14 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="EOC15" edc:desc="End of Conversion 15 (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:desc="Data Ready (automatically set / cleared)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="GOVRE" edc:desc="General Overrun Error (cleared on read)" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="COMPE" edc:desc="Comparison Event (cleared on read)" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40200034" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x4020003C" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_OVER" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="OVRE0" edc:desc="Overrun Error 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE1" edc:desc="Overrun Error 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE2" edc:desc="Overrun Error 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE3" edc:desc="Overrun Error 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE4" edc:desc="Overrun Error 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE5" edc:desc="Overrun Error 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE6" edc:desc="Overrun Error 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE7" edc:desc="Overrun Error 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE8" edc:desc="Overrun Error 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE9" edc:desc="Overrun Error 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE10" edc:desc="Overrun Error 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE11" edc:desc="Overrun Error 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE12" edc:desc="Overrun Error 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE13" edc:desc="Overrun Error 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE14" edc:desc="Overrun Error 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OVRE15" edc:desc="Overrun Error 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200040" edc:access="--nn---n-n-n-nnn--nn--n-nnnn-nnn" edc:cname="ADC_EMR" edc:impl="0x315732F7" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="CMPMODE" edc:desc="Comparison Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="When the converted data is lower than the low threshold of the window, generates the ADC_ISR.COMPE flag or, in Partial Wakeup mode, defines the conditions to exit system from Wait mode." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="When the converted data is higher than the high threshold of the window, generates the ADC_ISR.COMPE flag or, in Partial Wakeup mode, defines the conditions to exit system from Wait mode." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="IN" edc:desc="When the converted data is in the comparison window, generates the ADC_ISR.COMPE flag or, in Partial Wakeup mode, defines the conditions to exit system from Wait mode." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OUT" edc:desc="When the converted data is out of the comparison window, generates the ADC_ISR.COMPE flag or, in Partial Wakeup mode, defines the conditions to exit system from Wait mode." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMPTYPE" edc:desc="Comparison Type" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="FLAG_ONLY" edc:desc="Any conversion is performed and comparison function drives the ADC_ISR.COMPE flag." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="START_CONDITION" edc:desc="Comparison conditions must be met to start the storage of all conversions until the ADC_CR.CMPRST bit is set." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPSEL" edc:desc="Comparison Selected Channel" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMPALL" edc:desc="Compare All Channels" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMPFILTER" edc:desc="Compare Event Filtering" edc:nzwidth="0x2"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSR" edc:desc="Over Sampling Rate" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="NO_AVERAGE" edc:desc="No averaging. ADC sample rate is maximum." edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OSR4" edc:desc="1-bit enhanced resolution by averaging. ADC sample rate divided by 4." edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OSR16" edc:desc="2-bit enhanced resolution by averaging. ADC sample rate divided by 16." edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OSR64" edc:desc="3-bit enhanced resolution by averaging. ADC sample rate divided by 64." edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="OSR256" edc:desc="4-bit enhanced resolution by averaging. ADC sample rate divided by 256." edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ASTE" edc:desc="Averaging on Single Trigger Event" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="MULTI_TRIG_AVERAGE" edc:desc="The average requests several trigger events." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE_TRIG_AVERAGE" edc:desc="The average requests only one trigger event." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRACKX4" edc:desc="Tracking time x4" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="TRACK1" edc:desc="The ADC_MR.TRACKTIM field effect is multiplied by 1." edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="TRACK4" edc:desc="The ADC_MR.TRACKTIM field effect is multiplied by 4." edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TAG" edc:desc="Tag of ADC_LCDR" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ADCMODE" edc:desc="ADC Running Mode" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode of operation." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OFFSET_ERROR" edc:desc="Offset Error mode to measure the offset error. See Table 7-6." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GAIN_ERROR_HIGH" edc:desc="Gain Error mode to measure the gain error. See Table 7-6." edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GAIN_ERROR_LOW" edc:desc="Gain Error mode to measure the gain error. See Table 7-6." edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200044" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ADC_CWR" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="LOWTHRES" edc:desc="Low Threshold" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="HIGHTHRES" edc:desc="High Threshold" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200048" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ADC_CGR" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="GAIN0" edc:desc="Gain for Channel 0" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN1" edc:desc="Gain for Channel 1" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN2" edc:desc="Gain for Channel 2" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN3" edc:desc="Gain for Channel 3" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN4" edc:desc="Gain for Channel 4" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN5" edc:desc="Gain for Channel 5" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN6" edc:desc="Gain for Channel 6" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN7" edc:desc="Gain for Channel 7" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN8" edc:desc="Gain for Channel 8" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN9" edc:desc="Gain for Channel 9" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN10" edc:desc="Gain for Channel 10" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN11" edc:desc="Gain for Channel 11" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN12" edc:desc="Gain for Channel 12" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN13" edc:desc="Gain for Channel 13" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN14" edc:desc="Gain for Channel 14" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GAIN15" edc:desc="Gain for Channel 15" edc:nzwidth="0x2">
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF0_5" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 0.5 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SE1_DIFF1" edc:desc="Single-ended gain = 1 (ADC_COR.DIFFx = 0), differential gain = 1 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="SE2_DIFF2" edc:desc="Single-ended gain = 2 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SE4_DIFF2" edc:desc="Single-ended gain = 4 (ADC_COR.DIFFx = 0), differential gain = 2 (ADC_COR.DIFFx = 1)" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4020004C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ADC_COR" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="OFFSET0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFSET15" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF0" edc:desc="Differential Inputs for Channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF1" edc:desc="Differential Inputs for Channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF2" edc:desc="Differential Inputs for Channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF3" edc:desc="Differential Inputs for Channel 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF4" edc:desc="Differential Inputs for Channel 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF5" edc:desc="Differential Inputs for Channel 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF6" edc:desc="Differential Inputs for Channel 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF7" edc:desc="Differential Inputs for Channel 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF8" edc:desc="Differential Inputs for Channel 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF9" edc:desc="Differential Inputs for Channel 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF10" edc:desc="Differential Inputs for Channel 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF11" edc:desc="Differential Inputs for Channel 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF12" edc:desc="Differential Inputs for Channel 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF13" edc:desc="Differential Inputs for Channel 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF14" edc:desc="Differential Inputs for Channel 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DIFF15" edc:desc="Differential Inputs for Channel 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200050" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR0" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200054" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR1" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200058" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR2" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4020005C" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR3" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200060" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR4" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200064" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR5" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200068" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR6" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4020006C" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR7" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200070" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR8" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200074" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR9" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200078" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR10" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4020007C" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR11" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200080" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR12" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200084" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR13" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x40200088" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR14" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x4020008C" edc:access="----------------rrrrrrrrrrrrrrrr" edc:cname="ADC_CDR15" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="DATA" edc:desc="Converted Data" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40200090" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0x40200094" edc:access="----------------------nn--------" edc:cname="ADC_ACR" edc:impl="0x300" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="IBCTL" edc:desc="ADC Bias Current Control" edc:nzwidth="0x2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x40200098" edc:offset="0x3C"/>
      <edc:SFRDef edc:_addr="0x402000D4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ADC_CVR" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:desc="Offset Correction" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:desc="Gain Correction" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x402000D8" edc:access="----------------nnnnnnnnnnnnnnnn" edc:cname="ADC_CECR" edc:impl="0xFFFF" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="ECORR0" edc:desc="Error Correction Enable for channel 0" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR1" edc:desc="Error Correction Enable for channel 1" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR2" edc:desc="Error Correction Enable for channel 2" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR3" edc:desc="Error Correction Enable for channel 3" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR4" edc:desc="Error Correction Enable for channel 4" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR5" edc:desc="Error Correction Enable for channel 5" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR6" edc:desc="Error Correction Enable for channel 6" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR7" edc:desc="Error Correction Enable for channel 7" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR8" edc:desc="Error Correction Enable for channel 8" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR9" edc:desc="Error Correction Enable for channel 9" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR10" edc:desc="Error Correction Enable for channel 10" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR11" edc:desc="Error Correction Enable for channel 11" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR12" edc:desc="Error Correction Enable for channel 12" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR13" edc:desc="Error Correction Enable for channel 13" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR14" edc:desc="Error Correction Enable for channel 14" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ECORR15" edc:desc="Error Correction Enable for channel 15" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0x402000DC" edc:offset="0x8"/>
      <edc:SFRDef edc:_addr="0x402000E4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnn-----nnn" edc:cname="ADC_WPMR" edc:impl="0xFFFFFF07" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="WPEN" edc:desc="Write Protection Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPITEN" edc:desc="Write Protection Interrupt Enable" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WPCTEN" edc:desc="Write Protection Control Enable" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="WPKEY" edc:desc="Write Protection Key" edc:nzwidth="0x18">
              <edc:SFRFieldSemantic edc:cname="PASSWD" edc:desc="Writing any other value in this field aborts the write operation of the WPEN bit. Always reads as 0" edc:when="(field &amp; 0xFFFFFF) == 0x414443"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0x402000E8" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:cname="ADC_WPSR" edc:impl="0xFFFF01" edc:nzwidth="0x20" ltx:memberofperipheral="ADC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
            <edc:SFRFieldDef edc:cname="WPVS" edc:desc="Write Protection Violation Status" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="WPVSRC" edc:desc="Write Protection Violation Source" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:beginaddr="0xE0000000" edc:endaddr="0xE000EF4C" edc:regionid="SYSTEM" edc:rw="rw">
      <edc:AdjustPoint edc:_addr="0xE0000000" edc:offset="0xE004"/>
      <edc:SFRDef edc:_addr="0xE000E004" edc:access="----------------------------rrrr" edc:cname="ICTR" edc:desc="Interrupt Controller Type Register" edc:impl="0xF" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:nzwidth="0x20" edc:por="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0">
            <edc:SFRFieldDef edc:cname="INTLINESNUM" edc:desc="Number of interrupt lines supported by NVIC in granularities of 32." edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E008" edc:access="---nnnnnnnnnnnnnnnnnnn-------n--" edc:cname="ACTLR" edc:impl="0x1FFFFC04" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCnSCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCnSCB">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DISFOLD" edc:desc="Disables folding of IT instructions" edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="FPEXCODIS" edc:desc="Disables FPU exception outputs" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISRAMODE" edc:desc="Disables dynamic read allocate mode for Write-Back Write-Allocate memory regions" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISITMATBFLUSH" edc:desc="Disables ITM and DWT ATB flush" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISBTACREAD" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISBTACALLOC" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCRITAXIRUR" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISDI" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="DISISSCH1" edc:nzwidth="0x5"/>
            <edc:SFRFieldDef edc:cname="DISDYNADD" edc:desc="Disables dynamic allocation of ADD and SUB instructions" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISCRITAXIRUW" edc:desc="Disable critical AXI read-under-write" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DISFPUISSOPT" edc:desc="Disables dynamic allocation of ADD and SUB instructions" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000E00C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0xE000E010" edc:access="---------------n-------------nnn" edc:cname="CSR" edc:impl="0x10007" edc:mclr="00000000000000000000000000000100" edc:nzwidth="0x20" edc:por="00000000000000000000000000000100" ltx:memberofperipheral="SysTick">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enables the counter" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="counter disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="counter enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TICKINT" edc:desc="Enables SysTick exception request" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="counting down to 0 does not assert the SysTick exception request" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="counting down to 0 asserts the SysTick exception request" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKSOURCE" edc:desc="Indicates the clock source" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="external clock" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="processor clock" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="COUNTFLAG" edc:desc="Returns 1 if timer counted to 0 since last time this was read" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E014" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RVR" edc:impl="0xFFFFFF" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SysTick">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="RELOAD" edc:desc="Value to load into the SysTick Current Value Register when the counter reaches 0" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E018" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="CVR" edc:impl="0xFFFFFF" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SysTick">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="CURRENT" edc:desc="Current value at the time the register is accessed" edc:nzwidth="0x18"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E01C" edc:access="rr------rrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="CALIB" edc:impl="0xC0FFFFFF" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SysTick">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="TENMS" edc:desc="Reload value to use for 10ms timing" edc:nzwidth="0x18"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SKEW" edc:desc="Indicates whether the TENMS value is exact" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="10ms calibration value is exact" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="10ms calibration value is inexact, because of the clock frequency" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NOREF" edc:desc="Indicates whether the device provides a reference clock to the processor" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="The reference clock is provided" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="The reference clock is not provided" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000E020" edc:offset="0xE0"/>
      <edc:SFRDef edc:_addr="0xE000E100" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISER0" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:desc="Interrupt set enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E104" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISER1" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:desc="Interrupt set enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E108" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISER2" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:desc="Interrupt set enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E10C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISER3" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:desc="Interrupt set enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E110" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISER4" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:desc="Interrupt set enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E114" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISER5" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:desc="Interrupt set enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E118" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISER6" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:desc="Interrupt set enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E11C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISER7" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:desc="Interrupt set enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000E120" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0xE000E180" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICER0" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:desc="Interrupt clear-enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E184" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICER1" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:desc="Interrupt clear-enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E188" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICER2" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:desc="Interrupt clear-enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E18C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICER3" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:desc="Interrupt clear-enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E190" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICER4" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:desc="Interrupt clear-enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E194" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICER5" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:desc="Interrupt clear-enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E198" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICER6" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:desc="Interrupt clear-enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E19C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICER7" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:desc="Interrupt clear-enable bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000E1A0" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0xE000E200" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISPR0" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:desc="Interrupt set-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E204" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISPR1" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:desc="Interrupt set-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E208" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISPR2" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:desc="Interrupt set-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E20C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISPR3" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:desc="Interrupt set-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E210" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISPR4" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:desc="Interrupt set-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E214" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISPR5" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:desc="Interrupt set-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E218" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISPR6" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:desc="Interrupt set-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E21C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ISPR7" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:desc="Interrupt set-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000E220" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0xE000E280" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICPR0" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:desc="Interrupt clear-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E284" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICPR1" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:desc="Interrupt clear-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E288" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICPR2" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:desc="Interrupt clear-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E28C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICPR3" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:desc="Interrupt clear-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E290" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICPR4" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:desc="Interrupt clear-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E294" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICPR5" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:desc="Interrupt clear-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E298" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICPR6" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:desc="Interrupt clear-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E29C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="ICPR7" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:desc="Interrupt clear-pending bits" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000E2A0" edc:offset="0x60"/>
      <edc:SFRDef edc:_addr="0xE000E300" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IABR0" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Interrupt active flags" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E304" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IABR1" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Interrupt active flags" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E308" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IABR2" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Interrupt active flags" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E30C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IABR3" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Interrupt active flags" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E310" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IABR4" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Interrupt active flags" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E314" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IABR5" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Interrupt active flags" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E318" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IABR6" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Interrupt active flags" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E31C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="IABR7" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Interrupt active flags" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000E320" edc:offset="0xE0"/>
      <edc:SFRDef edc:_addr="0xE000E400" edc:access="nnnnnnnn" edc:cname="IP0" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E401" edc:access="nnnnnnnn" edc:cname="IP1" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E402" edc:access="nnnnnnnn" edc:cname="IP2" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E403" edc:access="nnnnnnnn" edc:cname="IP3" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E404" edc:access="nnnnnnnn" edc:cname="IP4" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E405" edc:access="nnnnnnnn" edc:cname="IP5" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E406" edc:access="nnnnnnnn" edc:cname="IP6" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E407" edc:access="nnnnnnnn" edc:cname="IP7" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E408" edc:access="nnnnnnnn" edc:cname="IP8" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E409" edc:access="nnnnnnnn" edc:cname="IP9" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E40A" edc:access="nnnnnnnn" edc:cname="IP10" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E40B" edc:access="nnnnnnnn" edc:cname="IP11" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E40C" edc:access="nnnnnnnn" edc:cname="IP12" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E40D" edc:access="nnnnnnnn" edc:cname="IP13" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E40E" edc:access="nnnnnnnn" edc:cname="IP14" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E40F" edc:access="nnnnnnnn" edc:cname="IP15" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E410" edc:access="nnnnnnnn" edc:cname="IP16" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E411" edc:access="nnnnnnnn" edc:cname="IP17" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E412" edc:access="nnnnnnnn" edc:cname="IP18" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E413" edc:access="nnnnnnnn" edc:cname="IP19" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E414" edc:access="nnnnnnnn" edc:cname="IP20" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E415" edc:access="nnnnnnnn" edc:cname="IP21" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E416" edc:access="nnnnnnnn" edc:cname="IP22" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E417" edc:access="nnnnnnnn" edc:cname="IP23" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E418" edc:access="nnnnnnnn" edc:cname="IP24" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E419" edc:access="nnnnnnnn" edc:cname="IP25" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E41A" edc:access="nnnnnnnn" edc:cname="IP26" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E41B" edc:access="nnnnnnnn" edc:cname="IP27" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E41C" edc:access="nnnnnnnn" edc:cname="IP28" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E41D" edc:access="nnnnnnnn" edc:cname="IP29" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E41E" edc:access="nnnnnnnn" edc:cname="IP30" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E41F" edc:access="nnnnnnnn" edc:cname="IP31" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E420" edc:access="nnnnnnnn" edc:cname="IP32" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E421" edc:access="nnnnnnnn" edc:cname="IP33" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E422" edc:access="nnnnnnnn" edc:cname="IP34" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E423" edc:access="nnnnnnnn" edc:cname="IP35" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E424" edc:access="nnnnnnnn" edc:cname="IP36" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E425" edc:access="nnnnnnnn" edc:cname="IP37" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E426" edc:access="nnnnnnnn" edc:cname="IP38" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E427" edc:access="nnnnnnnn" edc:cname="IP39" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E428" edc:access="nnnnnnnn" edc:cname="IP40" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E429" edc:access="nnnnnnnn" edc:cname="IP41" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E42A" edc:access="nnnnnnnn" edc:cname="IP42" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E42B" edc:access="nnnnnnnn" edc:cname="IP43" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E42C" edc:access="nnnnnnnn" edc:cname="IP44" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E42D" edc:access="nnnnnnnn" edc:cname="IP45" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E42E" edc:access="nnnnnnnn" edc:cname="IP46" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E42F" edc:access="nnnnnnnn" edc:cname="IP47" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E430" edc:access="nnnnnnnn" edc:cname="IP48" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E431" edc:access="nnnnnnnn" edc:cname="IP49" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E432" edc:access="nnnnnnnn" edc:cname="IP50" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E433" edc:access="nnnnnnnn" edc:cname="IP51" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E434" edc:access="nnnnnnnn" edc:cname="IP52" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E435" edc:access="nnnnnnnn" edc:cname="IP53" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E436" edc:access="nnnnnnnn" edc:cname="IP54" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E437" edc:access="nnnnnnnn" edc:cname="IP55" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E438" edc:access="nnnnnnnn" edc:cname="IP56" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E439" edc:access="nnnnnnnn" edc:cname="IP57" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E43A" edc:access="nnnnnnnn" edc:cname="IP58" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E43B" edc:access="nnnnnnnn" edc:cname="IP59" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E43C" edc:access="nnnnnnnn" edc:cname="IP60" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E43D" edc:access="nnnnnnnn" edc:cname="IP61" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E43E" edc:access="nnnnnnnn" edc:cname="IP62" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E43F" edc:access="nnnnnnnn" edc:cname="IP63" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E440" edc:access="nnnnnnnn" edc:cname="IP64" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E441" edc:access="nnnnnnnn" edc:cname="IP65" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E442" edc:access="nnnnnnnn" edc:cname="IP66" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E443" edc:access="nnnnnnnn" edc:cname="IP67" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E444" edc:access="nnnnnnnn" edc:cname="IP68" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E445" edc:access="nnnnnnnn" edc:cname="IP69" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E446" edc:access="nnnnnnnn" edc:cname="IP70" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E447" edc:access="nnnnnnnn" edc:cname="IP71" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E448" edc:access="nnnnnnnn" edc:cname="IP72" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E449" edc:access="nnnnnnnn" edc:cname="IP73" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E44A" edc:access="nnnnnnnn" edc:cname="IP74" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E44B" edc:access="nnnnnnnn" edc:cname="IP75" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E44C" edc:access="nnnnnnnn" edc:cname="IP76" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E44D" edc:access="nnnnnnnn" edc:cname="IP77" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E44E" edc:access="nnnnnnnn" edc:cname="IP78" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E44F" edc:access="nnnnnnnn" edc:cname="IP79" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E450" edc:access="nnnnnnnn" edc:cname="IP80" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E451" edc:access="nnnnnnnn" edc:cname="IP81" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E452" edc:access="nnnnnnnn" edc:cname="IP82" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E453" edc:access="nnnnnnnn" edc:cname="IP83" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E454" edc:access="nnnnnnnn" edc:cname="IP84" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E455" edc:access="nnnnnnnn" edc:cname="IP85" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E456" edc:access="nnnnnnnn" edc:cname="IP86" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E457" edc:access="nnnnnnnn" edc:cname="IP87" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E458" edc:access="nnnnnnnn" edc:cname="IP88" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E459" edc:access="nnnnnnnn" edc:cname="IP89" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E45A" edc:access="nnnnnnnn" edc:cname="IP90" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E45B" edc:access="nnnnnnnn" edc:cname="IP91" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E45C" edc:access="nnnnnnnn" edc:cname="IP92" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E45D" edc:access="nnnnnnnn" edc:cname="IP93" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E45E" edc:access="nnnnnnnn" edc:cname="IP94" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E45F" edc:access="nnnnnnnn" edc:cname="IP95" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E460" edc:access="nnnnnnnn" edc:cname="IP96" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E461" edc:access="nnnnnnnn" edc:cname="IP97" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E462" edc:access="nnnnnnnn" edc:cname="IP98" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E463" edc:access="nnnnnnnn" edc:cname="IP99" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E464" edc:access="nnnnnnnn" edc:cname="IP100" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E465" edc:access="nnnnnnnn" edc:cname="IP101" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E466" edc:access="nnnnnnnn" edc:cname="IP102" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E467" edc:access="nnnnnnnn" edc:cname="IP103" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E468" edc:access="nnnnnnnn" edc:cname="IP104" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E469" edc:access="nnnnnnnn" edc:cname="IP105" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E46A" edc:access="nnnnnnnn" edc:cname="IP106" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E46B" edc:access="nnnnnnnn" edc:cname="IP107" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E46C" edc:access="nnnnnnnn" edc:cname="IP108" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E46D" edc:access="nnnnnnnn" edc:cname="IP109" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E46E" edc:access="nnnnnnnn" edc:cname="IP110" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E46F" edc:access="nnnnnnnn" edc:cname="IP111" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E470" edc:access="nnnnnnnn" edc:cname="IP112" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E471" edc:access="nnnnnnnn" edc:cname="IP113" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E472" edc:access="nnnnnnnn" edc:cname="IP114" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E473" edc:access="nnnnnnnn" edc:cname="IP115" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E474" edc:access="nnnnnnnn" edc:cname="IP116" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E475" edc:access="nnnnnnnn" edc:cname="IP117" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E476" edc:access="nnnnnnnn" edc:cname="IP118" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E477" edc:access="nnnnnnnn" edc:cname="IP119" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E478" edc:access="nnnnnnnn" edc:cname="IP120" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E479" edc:access="nnnnnnnn" edc:cname="IP121" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E47A" edc:access="nnnnnnnn" edc:cname="IP122" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E47B" edc:access="nnnnnnnn" edc:cname="IP123" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E47C" edc:access="nnnnnnnn" edc:cname="IP124" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E47D" edc:access="nnnnnnnn" edc:cname="IP125" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E47E" edc:access="nnnnnnnn" edc:cname="IP126" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E47F" edc:access="nnnnnnnn" edc:cname="IP127" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E480" edc:access="nnnnnnnn" edc:cname="IP128" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E481" edc:access="nnnnnnnn" edc:cname="IP129" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E482" edc:access="nnnnnnnn" edc:cname="IP130" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E483" edc:access="nnnnnnnn" edc:cname="IP131" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E484" edc:access="nnnnnnnn" edc:cname="IP132" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E485" edc:access="nnnnnnnn" edc:cname="IP133" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E486" edc:access="nnnnnnnn" edc:cname="IP134" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E487" edc:access="nnnnnnnn" edc:cname="IP135" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E488" edc:access="nnnnnnnn" edc:cname="IP136" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E489" edc:access="nnnnnnnn" edc:cname="IP137" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E48A" edc:access="nnnnnnnn" edc:cname="IP138" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E48B" edc:access="nnnnnnnn" edc:cname="IP139" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E48C" edc:access="nnnnnnnn" edc:cname="IP140" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E48D" edc:access="nnnnnnnn" edc:cname="IP141" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E48E" edc:access="nnnnnnnn" edc:cname="IP142" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E48F" edc:access="nnnnnnnn" edc:cname="IP143" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E490" edc:access="nnnnnnnn" edc:cname="IP144" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E491" edc:access="nnnnnnnn" edc:cname="IP145" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E492" edc:access="nnnnnnnn" edc:cname="IP146" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E493" edc:access="nnnnnnnn" edc:cname="IP147" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E494" edc:access="nnnnnnnn" edc:cname="IP148" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E495" edc:access="nnnnnnnn" edc:cname="IP149" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E496" edc:access="nnnnnnnn" edc:cname="IP150" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E497" edc:access="nnnnnnnn" edc:cname="IP151" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E498" edc:access="nnnnnnnn" edc:cname="IP152" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E499" edc:access="nnnnnnnn" edc:cname="IP153" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E49A" edc:access="nnnnnnnn" edc:cname="IP154" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E49B" edc:access="nnnnnnnn" edc:cname="IP155" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E49C" edc:access="nnnnnnnn" edc:cname="IP156" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E49D" edc:access="nnnnnnnn" edc:cname="IP157" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E49E" edc:access="nnnnnnnn" edc:cname="IP158" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E49F" edc:access="nnnnnnnn" edc:cname="IP159" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A0" edc:access="nnnnnnnn" edc:cname="IP160" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A1" edc:access="nnnnnnnn" edc:cname="IP161" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A2" edc:access="nnnnnnnn" edc:cname="IP162" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A3" edc:access="nnnnnnnn" edc:cname="IP163" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A4" edc:access="nnnnnnnn" edc:cname="IP164" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A5" edc:access="nnnnnnnn" edc:cname="IP165" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A6" edc:access="nnnnnnnn" edc:cname="IP166" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A7" edc:access="nnnnnnnn" edc:cname="IP167" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A8" edc:access="nnnnnnnn" edc:cname="IP168" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4A9" edc:access="nnnnnnnn" edc:cname="IP169" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4AA" edc:access="nnnnnnnn" edc:cname="IP170" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4AB" edc:access="nnnnnnnn" edc:cname="IP171" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4AC" edc:access="nnnnnnnn" edc:cname="IP172" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4AD" edc:access="nnnnnnnn" edc:cname="IP173" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4AE" edc:access="nnnnnnnn" edc:cname="IP174" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4AF" edc:access="nnnnnnnn" edc:cname="IP175" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B0" edc:access="nnnnnnnn" edc:cname="IP176" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B1" edc:access="nnnnnnnn" edc:cname="IP177" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B2" edc:access="nnnnnnnn" edc:cname="IP178" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B3" edc:access="nnnnnnnn" edc:cname="IP179" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B4" edc:access="nnnnnnnn" edc:cname="IP180" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B5" edc:access="nnnnnnnn" edc:cname="IP181" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B6" edc:access="nnnnnnnn" edc:cname="IP182" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B7" edc:access="nnnnnnnn" edc:cname="IP183" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B8" edc:access="nnnnnnnn" edc:cname="IP184" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4B9" edc:access="nnnnnnnn" edc:cname="IP185" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4BA" edc:access="nnnnnnnn" edc:cname="IP186" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4BB" edc:access="nnnnnnnn" edc:cname="IP187" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4BC" edc:access="nnnnnnnn" edc:cname="IP188" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4BD" edc:access="nnnnnnnn" edc:cname="IP189" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4BE" edc:access="nnnnnnnn" edc:cname="IP190" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4BF" edc:access="nnnnnnnn" edc:cname="IP191" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C0" edc:access="nnnnnnnn" edc:cname="IP192" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C1" edc:access="nnnnnnnn" edc:cname="IP193" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C2" edc:access="nnnnnnnn" edc:cname="IP194" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C3" edc:access="nnnnnnnn" edc:cname="IP195" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C4" edc:access="nnnnnnnn" edc:cname="IP196" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C5" edc:access="nnnnnnnn" edc:cname="IP197" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C6" edc:access="nnnnnnnn" edc:cname="IP198" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C7" edc:access="nnnnnnnn" edc:cname="IP199" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C8" edc:access="nnnnnnnn" edc:cname="IP200" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4C9" edc:access="nnnnnnnn" edc:cname="IP201" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4CA" edc:access="nnnnnnnn" edc:cname="IP202" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4CB" edc:access="nnnnnnnn" edc:cname="IP203" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4CC" edc:access="nnnnnnnn" edc:cname="IP204" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4CD" edc:access="nnnnnnnn" edc:cname="IP205" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4CE" edc:access="nnnnnnnn" edc:cname="IP206" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4CF" edc:access="nnnnnnnn" edc:cname="IP207" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D0" edc:access="nnnnnnnn" edc:cname="IP208" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D1" edc:access="nnnnnnnn" edc:cname="IP209" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D2" edc:access="nnnnnnnn" edc:cname="IP210" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D3" edc:access="nnnnnnnn" edc:cname="IP211" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D4" edc:access="nnnnnnnn" edc:cname="IP212" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D5" edc:access="nnnnnnnn" edc:cname="IP213" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D6" edc:access="nnnnnnnn" edc:cname="IP214" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D7" edc:access="nnnnnnnn" edc:cname="IP215" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D8" edc:access="nnnnnnnn" edc:cname="IP216" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4D9" edc:access="nnnnnnnn" edc:cname="IP217" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4DA" edc:access="nnnnnnnn" edc:cname="IP218" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4DB" edc:access="nnnnnnnn" edc:cname="IP219" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4DC" edc:access="nnnnnnnn" edc:cname="IP220" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4DD" edc:access="nnnnnnnn" edc:cname="IP221" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4DE" edc:access="nnnnnnnn" edc:cname="IP222" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4DF" edc:access="nnnnnnnn" edc:cname="IP223" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E0" edc:access="nnnnnnnn" edc:cname="IP224" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E1" edc:access="nnnnnnnn" edc:cname="IP225" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E2" edc:access="nnnnnnnn" edc:cname="IP226" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E3" edc:access="nnnnnnnn" edc:cname="IP227" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E4" edc:access="nnnnnnnn" edc:cname="IP228" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E5" edc:access="nnnnnnnn" edc:cname="IP229" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E6" edc:access="nnnnnnnn" edc:cname="IP230" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E7" edc:access="nnnnnnnn" edc:cname="IP231" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E8" edc:access="nnnnnnnn" edc:cname="IP232" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4E9" edc:access="nnnnnnnn" edc:cname="IP233" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4EA" edc:access="nnnnnnnn" edc:cname="IP234" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4EB" edc:access="nnnnnnnn" edc:cname="IP235" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4EC" edc:access="nnnnnnnn" edc:cname="IP236" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4ED" edc:access="nnnnnnnn" edc:cname="IP237" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4EE" edc:access="nnnnnnnn" edc:cname="IP238" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000E4EF" edc:access="nnnnnnnn" edc:cname="IP239" edc:mclr="00000000" edc:nzwidth="0x8" edc:por="00000000" ltx:memberofperipheral="NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:desc="Priority of interrupt 0" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000E4F0" edc:offset="0x810"/>
      <edc:SFRDef edc:_addr="0xE000ED00" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="CPUID" edc:mclr="01000001000111111100001001110001" edc:nzwidth="0x20" edc:por="01000001000111111100001001110001" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="REVISION" edc:desc="Indicates patch release: 0x0 = Patch 0" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="PARTNO" edc:desc="Indicates part number" edc:nzwidth="0xC"/>
            <edc:SFRFieldDef edc:cname="ARCHITECTURE" edc:desc="Indicates architecture. Reads as 0xF" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="VARIANT" edc:desc="Indicates processor revision: 0x2 = Revision 2" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="IMPLEMENTER" edc:desc="Implementer code" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED04" edc:access="n--nnnn-nn----nnnnnnn--nnnnnnnnn" edc:cname="ICSR" edc:impl="0x9EC3F9FF" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="VECTACTIVE" edc:desc="Active exception number" edc:nzwidth="0x9"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RETTOBASE" edc:desc="Indicates whether there is an active exception other than the exception indicated by the current value of the IPSR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="there are preempted active exceptions to execute" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="there are no active exceptions, or the currently-executing exception is the only active exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VECTPENDING" edc:desc="Exception number of the highest priority pending enabled exception" edc:nzwidth="0x6"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ISRPENDING" edc:desc="Is external interrupt, generated by the NVIC, pending" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ISRPREEMPT" edc:desc="Indicates whether a pending exception will be serviced on exit from debug halt state" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Will not service" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Will service a pending exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDSTCLR" edc:desc="Removes the pending status of the SysTick exception" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no effect" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="removes the pending state from the SysTick exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSTSET" edc:desc="Sets the SysTick exception as pending, or reads the current state of the exception" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="write: no effect; read: SysTick exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="write: changes SysTick exception state to pending; read: SysTick exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVCLR" edc:desc="Removes the pending status of the PendSV exception" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no effect" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="removes the pending state from the PendSV exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVSET" edc:desc="Sets the PendSV exception as pending, or reads the current state of the exception" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="write: no effect; read: PendSV exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="write: changes PendSV exception state to pending; read: PendSV exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NMIPENDSET" edc:desc="Makes the NMI exception active, or reads the state of the exception" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="write: no effect; read: NMI exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="write: changes NMI exception state to pending; read: NMI exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED08" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn-------" edc:cname="VTOR" edc:impl="0xFFFFFF80" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TBLOFF" edc:desc="Bits[31:7] of the vector table address" edc:nzwidth="0x19"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED0C" edc:access="nnnnnnnnnnnnnnnnn----nnn-----nnn" edc:cname="AIRCR" edc:impl="0xFFFF8707" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="VECTRESET" edc:desc="Writing 1 to this bit causes a local system reset" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="VECTCLRACTIVE" edc:desc="Clears all active state information for fixed and configurable exceptions" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SYSRESETREQ" edc:desc="System Reset Request" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no system reset request" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="asserts a signal to the outer system that requests a reset" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="PRIGROUP" edc:desc="Interrupt priority grouping field. This field determines the split of group priority from subpriority." edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ENDIANNESS" edc:desc="Memory system endianness" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Little-endian" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Big-endian" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VECTKEY" edc:desc="Vector key" edc:nzwidth="0x10"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED10" edc:access="---------------------------n-nn-" edc:cname="SCR" edc:impl="0x16" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SLEEPONEXIT" edc:desc="Determines whether, on an exit from an ISR that returns to the base level of execution priority, the processor enters a sleep state" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="o not sleep when returning to Thread mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="enter sleep, or deep sleep, on return from an ISR" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEEPDEEP" edc:desc="Provides a qualifying hint indicating that waking from sleep might take longer" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="sleep" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="deep sleep" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEVONPEND" edc:desc="Determines whether an interrupt transition from inactive state to pending state is a wakeup event" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="only enabled interrupts or events can wakeup the processor, disabled interrupts are excluded" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="enabled events and all interrupts, including disabled interrupts, can wakeup the processor" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED14" edc:access="-------------nnn------nn---nn-nn" edc:cname="CCR" edc:impl="0x7031B" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="NONBASETHRDENA" edc:desc="Controls whether the processor can enter Thread mode with exceptions active" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="processor can enter Thread mode only when no exception is active" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="processor can enter Thread mode from any level under the control of an EXC_RETURN value" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USERSETMPEND" edc:desc="Enables unprivileged software access to the STIR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="disable" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="enable" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="UNALIGN_TRP" edc:desc="Enables unaligned access traps" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="do not trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIV_0_TRP" edc:desc="Enables faulting or halting when the processor executes an SDIV or UDIV instruction with a divisor of 0" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="do not trap divide by 0" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="trap divide by 0" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="BFHFNMIGN" edc:desc="Enables handlers with priority -1 or -2 to ignore data BusFaults caused by load and store instructions." edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="data bus faults caused by load and store instructions cause a lock-up" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="handlers running at priority -1 and -2 ignore data bus faults caused by load and store instructions" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STKALIGN" edc:desc="Indicates stack alignment on exception entry" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="4-byte aligned" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="8-byte aligned" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DC" edc:desc="Cache enable bit" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="IC" edc:desc="Instruction cache enable bi" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BP" edc:desc="Branch prediction enable bi" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED18" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="SHPR1" edc:impl="0xFFFFFF" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="PRI_4" edc:desc="Priority of system handler 4, MemManage" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="PRI_5" edc:desc="Priority of system handler 5, BusFault" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="PRI_6" edc:desc="Priority of system handler 6, UsageFault" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED1C" edc:access="nnnnnnnn------------------------" edc:cname="SHPR2" edc:impl="0xFF000000" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="PRI_11" edc:desc="Priority of system handler 11, SVCall" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED20" edc:access="nnnnnnnnnnnnnnnn--------nnnnnnnn" edc:cname="SHPR3" edc:impl="0xFFFF00FF" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="PRI_12" edc:desc="Priority of system handler 12, SysTick" edc:nzwidth="0x8"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PRI_14" edc:desc="Priority of system handler 14, PendSV" edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="PRI_15" edc:desc="Priority of system handler 15, SysTick exception" edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED24" edc:access="-------------nnnnnnnnn-nn---n-nn" edc:cname="SHCSR" edc:impl="0x7FD8B" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="MEMFAULTACT" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not active" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is active" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BUSFAULTACT" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not active" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is active" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="USGFAULTACT" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not active" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is active" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SVCALLACT" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not active" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is active" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MONITORACT" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not active" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is active" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDSVACT" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not active" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is active" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SYSTICKACT" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not active" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is active" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USGFAULTPENDED" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMFAULTPENDED" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BUSFAULTPENDED" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SVCALLPENDED" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEMFAULTENA" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="disable the exception" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="enable the exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BUSFAULTENA" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="disable the exception" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="enable the exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="USGFAULTENA" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="disable the exception" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="enable the exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED28" edc:access="------nn----nnnnn-nnnnnnn-nnn-nn" edc:cname="CFSR" edc:impl="0x30FBFBB" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="IACCVIOL" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no instruction access violation fault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="the processor attempted an instruction fetch from a location that does not permit execution" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DACCVIOL" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no data access violation fault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="the processor attempted a load or store at a location that does not permit the operation" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUNSTKERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no unstacking fault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="unstack for an exception return has caused one or more access violations" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MSTKERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no stacking fault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="stacking for an exception entry has caused one or more access violations" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MLSPERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No MemManage fault occurred during floating-point lazy state preservation" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="A MemManage fault occurred during floating-point lazy state preservation" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MMARVALID" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="value in MMAR is not a valid fault address" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="MMAR holds a valid fault address" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IBUSERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no instruction bus error" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="instruction bus error" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRECISERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no precise data bus error" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="a data bus error has occurred, and the PC value stacked for the exception return points to the instruction that caused the fault" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="IMPRECISERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no imprecise data bus error" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="a data bus error has occurred, but the return address in the stack frame is not related to the instruction that caused the error" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UNSTKERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no unstacking fault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="unstack for an exception return has caused one or more BusFaults" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STKERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no stacking fault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="stacking for an exception entry has caused one or more BusFaults" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LSPERR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No bus fault occurred during floating-point lazy state preservation" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="A bus fault occurred during floating-point lazy state preservation" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BFARVALID" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="value in BFAR is not a valid fault address" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="BFAR holds a valid fault address" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="UNDEFINSTR" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no undefined instruction UsageFault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="the processor has attempted to execute an undefined instruction" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVSTATE" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no invalid state UsageFault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="the processor has attempted to execute an instruction that makes illegal use of the EPSR" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVPC" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no invalid PC load UsageFault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="the processor has attempted an illegal load of EXC_RETURN to the PC" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NOCP" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no UsageFault caused by attempting to access a coprocessor" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="the processor has attempted to access a coprocessor" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="UNALIGNED" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no unaligned access fault, or unaligned access trapping not enabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="the processor has made an unaligned memory access" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DIVBYZERO" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no divide by zero fault, or divide by zero trapping not enabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="the processor has executed an SDIV or UDIV instruction with a divisor of 0" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED2C" edc:access="nn----------------------------n-" edc:cname="HFSR" edc:impl="0xC0000002" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VECTTBL" edc:desc="Indicates when a fault has occurred because of a vector table read error on exception processing" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no BusFault on vector table read" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="BusFault on vector table read" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1C"/>
            <edc:SFRFieldDef edc:cname="FORCED" edc:desc="Indicates that a fault with configurable priority has been escalated to a HardFault exception" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="no forced HardFault" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="forced HardFault" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DEBUGEVT" edc:desc="Indicates when a Debug event has occurred" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED30" edc:access="---------------------------nnnnn" edc:cname="DFSR" edc:impl="0x1F" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="HALTED" edc:desc="debug event generated by" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No active halt request debug event" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Halt request debug event active" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BKPT" edc:desc="debug event generated by BKPT instruction execution or a breakpoint match in FPB" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No current breakpoint debug event" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="At least one current breakpoint debug event" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DWTTRAP" edc:desc="debug event generated by the DWT" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No current debug events generated by the DWT" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="At least one current debug event generated by the DWT" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VCATCH" edc:desc="triggering of a Vector catch" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No Vector catch triggered" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Vector catch triggered" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EXTERNAL" edc:desc="debug event generated because of the assertion of an external debug request" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No EDBGRQ debug event" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="EDBGRQ debug event" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED34" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="MMFAR" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:desc="Data address for an MPU fault" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED38" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="BFAR" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:desc="Data address for a precise bus fault" edc:nzwidth="0x20"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED3C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="AFSR" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB"/>
      <edc:AdjustPoint edc:_addr="0xE000ED40" edc:offset="0x38"/>
      <edc:SFRDef edc:_addr="0xE000ED78" edc:access="--rrrrrr------------------------" edc:cname="CLIDR" edc:impl="0x3F000000" edc:mclr="00001001000000000000000000000011" edc:nzwidth="0x20" edc:por="00001001000000000000000000000011" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="LoC" edc:desc="Level of Coherency" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="LEVEL_1" edc:desc="if neither instruction nor data cache is implemented" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LEVEL_2" edc:desc="if either cache is implemented" edc:when="(field &amp; 0x7) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LoU" edc:desc="Level of Unification" edc:nzwidth="0x3">
              <edc:SFRFieldSemantic edc:cname="LEVEL_1" edc:desc="if neither instruction nor data cache is implemented" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LEVEL_2" edc:desc="if either cache is implemented" edc:when="(field &amp; 0x7) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED7C" edc:access="rrr-rrrrrrrrrrrr------------rrrr" edc:cname="CTR" edc:impl="0xEFFF000F" edc:mclr="10000011000000111100000000000011" edc:nzwidth="0x20" edc:por="10000011000000111100000000000011" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="IMINLINE" edc:desc="Smallest cache line of all the instruction caches under the control of the processor" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="DMINLINE" edc:desc="Smallest cache line of all the data and unified caches under the core control" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="ERG" edc:desc="Exclusives Reservation Granule" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="CWG" edc:desc="Cache Writeback Granule" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FORMAT" edc:desc="Register format" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED80" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="CCSIDR" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="LineSize" edc:desc="number of words in each cache line" edc:nzwidth="0x3"/>
            <edc:SFRFieldDef edc:cname="Associativity" edc:desc="number of ways" edc:nzwidth="0x9"/>
            <edc:SFRFieldDef edc:cname="NumSets" edc:desc="number of sets" edc:nzwidth="0x10"/>
            <edc:SFRFieldDef edc:cname="WA" edc:desc="Write allocation support" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="RA" edc:desc="Read allocation support" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WB" edc:desc="Write-Back support" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="WT" edc:desc="Write-Through support" edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED84" edc:access="----------------------------nnnn" edc:cname="CSSELR" edc:impl="0xF" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="IND" edc:desc="selection of instruction or data cache" edc:nzwidth="0x1">
              <edc:SFRFieldSemantic edc:cname="DATA" edc:desc="Data cache" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INSTRUCTION" edc:desc="Instruction cache" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL" edc:desc="cache level selected" edc:nzwidth="0x3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED88" edc:access="--------nnnn--------------------" edc:cname="CPACR" edc:impl="0xF00000" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:AdjustPoint edc:offset="0x14"/>
            <edc:SFRFieldDef edc:cname="CP10" edc:desc="Access privileges for coprocessor 10." edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="CP11" edc:desc="Access privileges for coprocessor 11." edc:nzwidth="0x2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000ED8C" edc:offset="0x4"/>
      <edc:SFRDef edc:_addr="0xE000ED90" edc:access="--------nnnnnnnnnnnnnnnn-------n" edc:cname="TYPE" edc:impl="0xFFFF01" edc:mclr="00000000000000000001000000000000" edc:nzwidth="0x20" edc:por="00000000000000000001000000000000" ltx:memberofperipheral="MPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="SEPARATE" edc:desc="Indicates support for unified or separate instruction and date memory maps." edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DREGION" edc:desc="Indicates the number of supported MPU instruction regions." edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="IREGION" edc:desc="Indicates the number of supported MPU data regions." edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED94" edc:access="-----------------------------nnn" edc:cname="CTRL" edc:impl="0x7" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="MPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enables the MPU" edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HFNMIENA" edc:desc="Enables the operation of MPU during hard fault, NMI, and FAULTMASK handlers." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="PRIVDEFENA" edc:desc="Enables privileged software access to the default memory map." edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED98" edc:access="------------------------nnnnnnnn" edc:cname="RNR" edc:impl="0xFF" edc:nzwidth="0x20" ltx:memberofperipheral="MPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:desc="Indicates the MPU region referenced by the MPU_RBAR and MPU_RASR registers." edc:nzwidth="0x8"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000ED9C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RBAR" edc:nzwidth="0x20" ltx:memberofperipheral="MPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:desc="MPU region field." edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="VALID" edc:desc="MPU Region Number valid bit." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:desc="Region base address field." edc:nzwidth="0x1B"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000EDA0" edc:access="---n-nnn--nnnnnnnnnnnnnn--nnnnnn" edc:cname="RASR" edc:impl="0x173FFF3F" edc:nzwidth="0x20" ltx:memberofperipheral="MPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Region enable bit." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:desc="Specifies the size of the MPU protection region." edc:nzwidth="0x5"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SRD" edc:desc="Subregion disable bits." edc:nzwidth="0x8"/>
            <edc:SFRFieldDef edc:cname="B" edc:desc="MPU access permission attributes." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="C" edc:desc="MPU access permission attributes." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="S" edc:desc="Shareable bit." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="TEX" edc:desc="MPU access permission attributes." edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="AP" edc:desc="Access permission field." edc:nzwidth="0x3"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="XN" edc:desc="Instruction access disable bit." edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000EDA4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RBAR_A1" edc:nzwidth="0x20" ltx:memberofperipheral="MPU"/>
      <edc:SFRDef edc:_addr="0xE000EDA8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RASR_A1" edc:nzwidth="0x20" ltx:memberofperipheral="MPU"/>
      <edc:SFRDef edc:_addr="0xE000EDAC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RBAR_A2" edc:nzwidth="0x20" ltx:memberofperipheral="MPU"/>
      <edc:SFRDef edc:_addr="0xE000EDB0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RASR_A2" edc:nzwidth="0x20" ltx:memberofperipheral="MPU"/>
      <edc:SFRDef edc:_addr="0xE000EDB4" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RBAR_A3" edc:nzwidth="0x20" ltx:memberofperipheral="MPU"/>
      <edc:SFRDef edc:_addr="0xE000EDB8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="RASR_A3" edc:nzwidth="0x20" ltx:memberofperipheral="MPU"/>
      <edc:AdjustPoint edc:_addr="0xE000EDBC" edc:offset="0x144"/>
      <edc:SFRDef edc:_addr="0xE000EF00" edc:access="-----------------------wwwwwwwww" edc:cname="STIR" edc:impl="0x1FF" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="SCB NVIC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SCB">
            <edc:SFRFieldDef edc:cname="INTID" edc:desc="Interrupt ID of the interrupt to trigger, in the range 0-239. For example, a value of 0x03 specifies interrupt IRQ3." edc:nzwidth="0x9"/>
          </edc:SFRMode>
          <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="INTID" edc:desc="Interrupt ID of the interrupt to trigger, in the range 0-239. For example, a value of 0x03 specifies interrupt IRQ3." edc:nzwidth="0x9"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:_addr="0xE000EF04" edc:offset="0x30"/>
      <edc:SFRDef edc:_addr="0xE000EF34" edc:access="nn---------------------n-nnnn-nn" edc:cname="FPCCR" edc:impl="0xC000017B" edc:mclr="11000000000000000000000000000000" edc:nzwidth="0x20" edc:por="11000000000000000000000000000000" ltx:memberofperipheral="FPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPU">
            <edc:SFRFieldDef edc:cname="LSPACT" edc:desc="Lazy state preservation is active. Floating-point stack frame has been allocated but saving state to it has been deferred." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="USER" edc:desc="Privilege level was user when the floating-point stack frame was allocated." edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="THREAD" edc:desc="Mode was Thread Mode when the floating-point stack frame was allocated." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="HFRDY" edc:desc="Priority permitted setting the HardFault handler to the pending state when the floating-point stack frame was allocated." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="MMRDY" edc:desc="MemManage is enabled and priority permitted setting the MemManage handler to the pending state when the floating-point stack frame was allocated." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="BFRDY" edc:desc="BusFault is enabled and priority permitted setting the BusFault handler to the pending state when the floating-point stack frame was allocated." edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MONRDY" edc:desc="DebugMonitor is enabled and priority permits setting MON_PEND when the floating-point stack frame was allocated." edc:nzwidth="0x1"/>
            <edc:AdjustPoint edc:offset="0x15"/>
            <edc:SFRFieldDef edc:cname="LSPEN" edc:desc="Enable automatic lazy state preservation for floating-point context." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="ASPEN" edc:desc="Enables CONTROL.FPCA setting on execution of a floating-point instruction. This results in automatic hardware state preservation and restoration, for floating-point context, on exception entry and exit." edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000EF38" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnn---" edc:cname="FPCAR" edc:impl="0xFFFFFFF8" edc:nzwidth="0x20" ltx:memberofperipheral="FPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPU">
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ADDRESS" edc:desc="The location of the unpopulated floating-point register space allocated on an exception stack frame." edc:nzwidth="0x1D"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000EF3C" edc:access="-----nnnnn----------------------" edc:cname="FPDSCR" edc:impl="0x7C00000" edc:mclr="00000000000000000000000000000000" edc:nzwidth="0x20" edc:por="00000000000000000000000000000000" ltx:memberofperipheral="FPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FPU">
            <edc:AdjustPoint edc:offset="0x16"/>
            <edc:SFRFieldDef edc:cname="RMode" edc:desc="Default value for FPSCR.RMode." edc:nzwidth="0x2"/>
            <edc:SFRFieldDef edc:cname="FZ" edc:desc="Default value for FPSCR.FZ." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="DN" edc:desc="Default value for FPSCR.DN." edc:nzwidth="0x1"/>
            <edc:SFRFieldDef edc:cname="AHP" edc:desc="Default value for FPSCR.AHP." edc:nzwidth="0x1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000EF40" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MVFR0" edc:mclr="00010000000100010000000000100001" edc:nzwidth="0x20" edc:por="00010000000100010000000000100001" ltx:memberofperipheral="SCB FPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0"/>
          <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="FPU">
            <edc:SFRFieldDef edc:cname="A_SIMD_registers" edc:desc="Indicates the size of the FP register bank" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Single_precision" edc:desc="Indicates the hardware support for FP single-precision operations" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Double_precision" edc:desc="Indicates the hardware support for FP double-precision operations" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="FP_excep_trapping" edc:desc="Indicates whether the FP hardware implementation supports exception trapping" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Divide" edc:desc="Indicates the hardware support for FP divide operations" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Square_root" edc:desc="Indicates the hardware support for FP square root operations" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="Short_vectors" edc:desc="Indicates the hardware support for FP short vectors" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="FP_rounding_modes" edc:desc="Indicates the rounding modes supported by the FP floating-point hardware" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000EF44" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MVFR1" edc:mclr="00010001000100010000000000110001" edc:nzwidth="0x20" edc:por="00010001000100010000000000110001" ltx:memberofperipheral="SCB FPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0"/>
          <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="FPU">
            <edc:SFRFieldDef edc:cname="FtZ_mode" edc:desc="Indicates whether the FP hardware implementation supports only the Flush-to-Zero mode of operation" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="D_NaN_mode" edc:desc="Indicates whether the FP hardware implementation supports only the Default NaN mode" edc:nzwidth="0x4"/>
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="FP_HPFP" edc:desc="Floating Point Half-Precision and double-precision" edc:nzwidth="0x4"/>
            <edc:SFRFieldDef edc:cname="FP_fused_MAC" edc:desc="Indicates whether the FP supports fused multiply accumulate operations" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef edc:_addr="0xE000EF48" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:cname="MVFR2" edc:mclr="00010000000100010000000001100001" edc:nzwidth="0x20" edc:por="00010000000100010000000001100001" ltx:memberofperipheral="SCB FPU">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0"/>
          <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="FPU">
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="VFP_Misc" edc:desc="Indicates the hardware support for FP miscellaneous features" edc:nzwidth="0x4"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:CodeSector edc:beginaddr="0x0" edc:endaddr="0x10000" edc:regionid="ITCM" edc:rw="rw"/>
    <edc:CodeSector atdf:pagesize="0x100" edc:beginaddr="0x10000000" edc:endaddr="0x10020000" edc:regionid="IFLASH" edc:rw="rw"/>
    <edc:BootConfigSector edc:beginaddr="0x11000000" edc:endaddr="0x11020000" edc:regionid="IROM" edc:rw="r"/>
    <edc:GPRDataSector edc:beginaddr="0x20000000" edc:endaddr="0x20020000" edc:isexecutable="true" edc:regionid="DTCM" edc:rw="rw"/>
    <edc:GPRDataSector edc:beginaddr="0x21000000" edc:endaddr="0x21020000" edc:isexecutable="true" edc:regionid="FLEXRAM" edc:rw="rw"/>
    <edc:ExternalSector edc:accessprotocol="ebi" edc:beginaddr="0x60000000" edc:endaddr="0x60200000" edc:isexecutable="true" edc:regionid="EBI_CSHEMC" edc:rw="rw" edc:type="flash"/>
    <edc:DeviceIDSector edc:beginaddr="0x40100000" edc:endaddr="0x40100004" edc:mask="0xFFFFFFE0" edc:regionid="devid" edc:value="0xB1770700"/>
    <edc:EmulatorSector edc:beginaddr="0xE0001000" edc:endaddr="0xE000F000" edc:regionid="emulation"/>
  </edc:PhysicalSpace>
  <edc:FusesSpace edc:magicoffset="0xD0000000">
    <edc:ConfigFuseSector edc:beginaddr="0x0" edc:endaddr="0x10" edc:regionid="FUSES">
      <edc:DCRDef edc:_addr="0x0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="USER_WORD_0" edc:factorydefault="0x0" edc:impl="0xFFFFFFFF" edc:nzwidth="0x20" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" ltx:memberofperipheral="FUSES">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="RC_TRIM_CRC" edc:desc="RC Trim CRC" edc:nzwidth="0x20"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef edc:_addr="0x4" edc:access="-----------------nnnnnnnnnnnnnnn" edc:cname="USER_WORD_1" edc:factorydefault="0x0" edc:impl="0x7FFF" edc:nzwidth="0x20" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" ltx:memberofperipheral="FUSES">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="RC_TTRIM0" edc:desc="RC Temperature Trim 0" edc:nzwidth="0x2"/>
            <edc:DCRFieldDef edc:cname="RC_FTRIM0" edc:desc="RC Frequency Trim 0" edc:nzwidth="0x3"/>
            <edc:DCRFieldDef edc:cname="RC_TTRIM1" edc:desc="RC Temperature Trim 1" edc:nzwidth="0x2"/>
            <edc:DCRFieldDef edc:cname="RC_FTRIM1" edc:desc="RC Frequency Trim 1" edc:nzwidth="0x3"/>
            <edc:DCRFieldDef edc:cname="RC_TTRIM2" edc:desc="RC Temperature Trim 2" edc:nzwidth="0x2"/>
            <edc:DCRFieldDef edc:cname="RC_FTRIM2" edc:desc="RC Frequency Trim 2" edc:nzwidth="0x3"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef edc:_addr="0x8" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="USER_WORD_2" edc:factorydefault="0x0" edc:impl="0xFFFFFFFF" edc:nzwidth="0x20" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" ltx:memberofperipheral="FUSES">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="USR_WORD2" edc:desc="USER Word 2" edc:nzwidth="0x20"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef edc:_addr="0xC" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="USER_WORD_3" edc:factorydefault="0x0" edc:impl="0xFFFFFFFF" edc:nzwidth="0x20" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" ltx:memberofperipheral="FUSES">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="USR_WORD3" edc:desc="USER Word 3" edc:nzwidth="0x20"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:FusesSpace>
  <edc:LockbitsSpace edc:magicoffset="0xD0000010">
    <edc:ConfigFuseSector edc:beginaddr="0x0" edc:endaddr="0x4" edc:regionid="LOCKBITS">
      <edc:DCRDef edc:_addr="0x0" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:cname="LOCKBIT" edc:factorydefault="0x0" edc:impl="0xFFFFFFFF" edc:nzwidth="0x20" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" ltx:memberofperipheral="LOCKBIT">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCKBIT">
            <edc:DCRFieldDef edc:cname="LOCK_REGION_0" edc:desc="Lock Region 0" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_1" edc:desc="Lock Region 1" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_2" edc:desc="Lock Region 2" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_3" edc:desc="Lock Region 3" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_4" edc:desc="Lock Region 4" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_5" edc:desc="Lock Region 5" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_6" edc:desc="Lock Region 6" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_7" edc:desc="Lock Region 7" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_8" edc:desc="Lock Region 8" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_9" edc:desc="Lock Region 9" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_10" edc:desc="Lock Region 10" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_11" edc:desc="Lock Region 11" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_12" edc:desc="Lock Region 12" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_13" edc:desc="Lock Region 13" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_14" edc:desc="Lock Region 14" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_15" edc:desc="Lock Region 15" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_16" edc:desc="Lock Region 16" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_17" edc:desc="Lock Region 17" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_18" edc:desc="Lock Region 18" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_19" edc:desc="Lock Region 19" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_20" edc:desc="Lock Region 20" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_21" edc:desc="Lock Region 21" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_22" edc:desc="Lock Region 22" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_23" edc:desc="Lock Region 23" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_24" edc:desc="Lock Region 24" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_25" edc:desc="Lock Region 25" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_26" edc:desc="Lock Region 26" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_27" edc:desc="Lock Region 27" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_28" edc:desc="Lock Region 28" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_29" edc:desc="Lock Region 29" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_30" edc:desc="Lock Region 30" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="LOCK_REGION_31" edc:desc="Lock Region 31" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:LockbitsSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA20" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO6" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="TCLK1" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="PCCCLK" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA21" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO0" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA22" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO1" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA23" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO6" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA24" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO5" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA25" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO4" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="TCLK2" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="PCCDEN2" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="CFG2" edc:ppsfunction="X1" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA26" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="TIOB2" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA27" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO5" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="TIOA1" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="PCCDEN1" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA28" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
      <edc:VirtualPin edc:name="TIOA2" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA29" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="TIOA0" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="PWMC0_PWMFI0" edc:ppsfunction="D" ltx:memberofperipheral="PWM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA30" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCK1" edc:ppsfunction="A" ltx:memberofperipheral="PMC"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="TIOB0" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="PWMC0_PWMFI1" edc:ppsfunction="D" ltx:memberofperipheral="PWM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA31" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCK1" edc:ppsfunction="A" ltx:memberofperipheral="PMC"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO6" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB0" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="TIOA2" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB1" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWMEXTRG1" edc:ppsfunction="B" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="TCLK5" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB2" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="RTCOUT0" edc:ppsfunction="A" ltx:memberofperipheral="RTC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDPLLA_PLLB"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GND_PLLA_PLLB"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="XIN"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB3" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB4" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB5" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB6" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB7" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="CANTX0" edc:ppsfunction="A" ltx:memberofperipheral="MCAN0"/>
      <edc:VirtualPin edc:name="TIOA3" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB8" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="CANRX0" edc:ppsfunction="A" ltx:memberofperipheral="MCAN0"/>
      <edc:VirtualPin edc:name="TIOB3" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB9" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="CANRX1" edc:ppsfunction="A" ltx:memberofperipheral="MCAN1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB10" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="CANTX1" edc:ppsfunction="A" ltx:memberofperipheral="MCAN1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB11" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWMH0" edc:ppsfunction="A" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="TCLK3" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB12" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWML0" edc:ppsfunction="A" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="TCLK4" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB13" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWMH1" edc:ppsfunction="A" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="TIOA4" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB14" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWML1" edc:ppsfunction="A" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="TIOB4" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB15" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWMH2" edc:ppsfunction="A" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="TIOB5" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB16" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWML2" edc:ppsfunction="A" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO5" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="TIOA5" edc:ppsfunction="C" ltx:memberofperipheral="TC1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB17" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWMH3" edc:ppsfunction="A" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="TIOB1" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB18" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC0_PWML3" edc:ppsfunction="A" ltx:memberofperipheral="PWM0"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="TCLK0" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB19" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO6" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
      <edc:VirtualPin edc:name="TCLK2" edc:ppsfunction="C" ltx:memberofperipheral="TC0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB20" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB21" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO1" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB22" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM3_IO0" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB23" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB24" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB25" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="ATXOUTP" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB26" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="ATXOUTN" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB27" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="ARXINP" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB28" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="ARXINN" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD0" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="BTXOUTP" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD1" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="BTXOUTN" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD2" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="BRXINP" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD3" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="BRXINN" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="TST"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="JTAGSEL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="NMIC_NMI"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="NRST"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD4" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWMFI0" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="NCS1" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD5" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWMEXTRG0" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="NCS0" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD6" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="RTCOUT1" edc:ppsfunction="A" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="NRD" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD7" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="NWE" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC0" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="BTXOUTP" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
      <edc:VirtualPin edc:name="D0" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC1" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="BTXOUTN" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
      <edc:VirtualPin edc:name="D1" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC2" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="BRXINP" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
      <edc:VirtualPin edc:name="D2" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC3" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="BRXINN" edc:ppsfunction="A" ltx:memberofperipheral="IP1553"/>
      <edc:VirtualPin edc:name="D3" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC4" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWMH0" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="D4" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC5" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWML0" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="D5" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC6" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWMH1" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="D6" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC7" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWML1" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="D7" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC8" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWMH2" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="A0" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TIOA6" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC9" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWML2" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="A1" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TIOB6" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC10" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWMH3" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="A2" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TCLK7" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC11" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PWMC1_PWML3" edc:ppsfunction="A" ltx:memberofperipheral="PWM1"/>
      <edc:VirtualPin edc:name="A3" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TCLK6" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD8" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCK2" edc:ppsfunction="A" ltx:memberofperipheral="PMC"/>
      <edc:VirtualPin edc:name="NWAIT" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO0" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD9" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="RTCOUT1" edc:ppsfunction="B" ltx:memberofperipheral="RTC"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO1" edc:ppsfunction="C" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC12" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="CANRX1" edc:ppsfunction="A" ltx:memberofperipheral="MCAN1"/>
      <edc:VirtualPin edc:name="A4" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC13" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="CANTX1" edc:ppsfunction="A" ltx:memberofperipheral="MCAN1"/>
      <edc:VirtualPin edc:name="A5" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC14" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A6" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TIOA7" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC15" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A7" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TIOB7" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC16" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
      <edc:VirtualPin edc:name="A8" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="PWMC1_PWMFI1" edc:ppsfunction="C" ltx:memberofperipheral="PWM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC17" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
      <edc:VirtualPin edc:name="A9" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC18" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO4" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
      <edc:VirtualPin edc:name="A10" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="PWMC1_PWMFI2" edc:ppsfunction="C" ltx:memberofperipheral="PWM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC19" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO5" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
      <edc:VirtualPin edc:name="A11" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="PWMC1_PWMEXTRG1" edc:ppsfunction="C" ltx:memberofperipheral="PWM1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC20" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO6" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM2"/>
      <edc:VirtualPin edc:name="A12" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC21" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A13" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC22" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A14" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC23" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A15" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC24" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A16" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC25" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A17" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC26" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A18" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TCLK8" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC27" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A19" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TIOA8" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC28" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="A20" edc:ppsfunction="B" ltx:memberofperipheral="HEMC"/>
      <edc:VirtualPin edc:name="TIOB8" edc:ppsfunction="C" ltx:memberofperipheral="TC2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD10" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWDINP0" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD11" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWDINN0" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO4" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD12" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWDOUTP0" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD13" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWDOUTN0" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO2" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="SPWREF0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD14" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWSOUTP0" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD15" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWSOUTN0" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO6" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD16" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWSINP0" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD17" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWSINN0" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
      <edc:VirtualPin edc:name="FLEXCOM2_IO3" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM2"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD18" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWDINP1" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD19" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWDINN1" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD20" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWDOUTP1" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD21" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWDOUTN1" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="SPWREF1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD22" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWSOUTP1" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD23" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWSOUTN1" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD24" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWSINP1" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD25" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="SPWSINN1" edc:ppsfunction="A" ltx:memberofperipheral="SPW"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD28" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="DAC2" edc:ppsfunction="X1" ltx:memberofperipheral="DACC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD29" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="DAC1P" edc:ppsfunction="X1" ltx:memberofperipheral="DACC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD30" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="DAC1N" edc:ppsfunction="X1" ltx:memberofperipheral="DACC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD31" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="DAC0" edc:ppsfunction="X1" ltx:memberofperipheral="DACC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDIO_DAC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDIO_DAC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AD_DAC_GNDREF"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="AD_DAC_VREFIN"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="ANA_GND"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="ANA_3V3"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDIO_ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDIO_ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA0" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA0" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD0" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA1" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA1" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD1" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA2" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA2" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD2" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA3" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA3" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD3" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA4" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA4" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD4" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA5" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA5" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD5" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA6" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA6" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD6" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA7" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA7" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD7" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA8" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA8" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD8" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA9" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA9" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD9" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA10" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA10" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD10" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA11" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA11" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD11" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA12" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA12" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD12" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA13" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCCDATA13" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD13" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA14" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO6" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="PCCDATA14" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD14" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA15" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO5" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="PCCDATA15" edc:ppsfunction="D" ltx:memberofperipheral="PCC"/>
      <edc:VirtualPin edc:name="AD15" edc:ppsfunction="X1" ltx:memberofperipheral="ADC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA16" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM1_IO5" edc:ppsfunction="B" ltx:memberofperipheral="FLEXCOM1"/>
      <edc:VirtualPin edc:name="PWMC0_PWMFI2" edc:ppsfunction="C" ltx:memberofperipheral="PWM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="XIN32"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC29" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="DATRG" edc:ppsfunction="A" ltx:memberofperipheral="DACC"/>
      <edc:VirtualPin edc:name="BOOT_MODE1" edc:ppsfunction="X1" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC30" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="ADTRG" edc:ppsfunction="A" ltx:memberofperipheral="ADC"/>
      <edc:VirtualPin edc:name="BOOT_MODE0" edc:ppsfunction="X1" ltx:memberofperipheral="HEMC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA17" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO2" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA18" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="FLEXCOM0_IO3" edc:ppsfunction="A" ltx:memberofperipheral="FLEXCOM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA19" edc:ppsfunction="default" ltx:memberofperipheral="PIO"/>
      <edc:VirtualPin edc:name="PCK0" edc:ppsfunction="A" ltx:memberofperipheral="PMC"/>
      <edc:VirtualPin edc:name="PWMC0_PWMEXTRG0" edc:ppsfunction="B" ltx:memberofperipheral="PWM0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDCORE"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
